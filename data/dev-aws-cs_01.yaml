- en: Chapter 1\. Getting Started with .NET on AWS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章 在AWS上开始使用.NET
- en: This chapter covers the basic scaffolding of essentials on your first day working
    with AWS and C#. These essentials include using cloud-based development environments
    such as AWS CloudShell and a traditional Visual Studio development environment
    that leverages the AWS SDK.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了在AWS上使用C#进行首日工作时的基本支架。这些基本支架包括使用AWS CloudShell等基于云的开发环境，以及利用AWS SDK的传统Visual
    Studio开发环境。
- en: The material in this book sets you up for success by adding many code examples
    of doing .NET 6 development on AWS. You can view those code examples in the [source
    code repository for the book](https://oreil.ly/AWS-with-C-Sharp-examples). Additionally,
    both traditional development methods like Visual Studio and new cloud native strategies
    like developing with AWS Cloud9 are covered. There is something for all types
    of .NET developers.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的材料通过添加许多.NET 6开发的代码示例来帮助你成功。你可以在[本书的源代码库](https://oreil.ly/AWS-with-C-Sharp-examples)中查看这些代码示例。此外，本书涵盖了传统开发方法（如Visual
    Studio）和新的云原生策略（如使用AWS Cloud9进行开发）。对于所有类型的.NET开发者都有所涉及。
- en: For scripting fans, there are also examples of using the AWS Command Line Interface
    and PowerShell for the AWS SDK. At the end of the chapter, there are discussion
    questions and exercises that you can use to build on the lessons covered. These
    exercises are an excellent tool for creating a comprehensive portfolio of work
    that gets you hired. Let’s get started with a brief dive into cloud computing.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对于脚本爱好者，还有使用AWS命令行界面和PowerShell来使用AWS SDK的示例。在章末，还提供了讨论问题和练习，帮助你进一步学习所涵盖的课程内容。这些练习是创建全面作品集的极好工具，可以帮助你获得工作。让我们开始简要介绍云计算。
- en: What Is Cloud Computing?
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是云计算？
- en: Cloud computing is the utility-type delivery of IT resources over the internet
    with utility-type pricing. Instead of purchasing and maintaining physical data
    centers and hardware, you can access IT services, such as computing, storage,
    and databases, on an as-needed basis from a cloud vendor.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 云计算是通过互联网以及类似公用事业的定价方式交付IT资源。与购买和维护物理数据中心和硬件不同，你可以根据需求从云供应商访问IT服务，例如计算、存储和数据库。
- en: 'Perhaps the best way to describe cloud computing is to take the view of the
    UC Berkeley Reliable Adaptive Distributed Systems Laboratory or RAD Lab. In their
    paper [“Above the Clouds: A Berkeley View of Cloud Computing”](https://oreil.ly/tsBGN),
    they mention three new critical aspects of cloud computing: “the illusion of infinite
    computing resources,” “the elimination of up-front commitment by cloud users,”
    and “the ability to pay for the use of computing resources on a short-term basis
    as needed.” Let’s talk about these items in more detail.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 或许描述云计算的最佳方式是从加州大学伯克利分校可靠自适应分布式系统实验室或RAD实验室的角度来看。在他们的论文[“云上之上：伯克利对云计算的看法”](https://oreil.ly/tsBGN)中，他们提到了云计算的三个关键方面：“虚拟化的无限计算资源”，“取消云用户的前期承诺”，以及“按需短期使用计算资源的能力”。让我们更详细地讨论这些内容。
- en: Note
  id: totrans-7
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Having taught thousands of students and working professionals cloud computing,
    I (Noah) have strong opinions on learning as quickly as possible. A key performance
    indicator, or KPI, is how many mistakes you can make per week. In practice, this
    means trying things out, getting frustrated, then working out the best way to
    solve what is frustrating you, and then doing that over and over again as quickly
    as possible.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在教授成千上万的学生和工作专业人士云计算之后，我（Noah）对尽快学习的强烈看法。一个关键的绩效指标（KPI）是每周能犯多少错误。在实践中，这意味着尝试事物，感到沮丧，然后找到解决问题的最佳方式，然后尽快重复这样做。
- en: 'One of the ways I encourage this in a classroom is by facilitating students
    to demo progress weekly on what they are working on and build a portfolio of work.
    Similarly, in this book, I recommend building out a series of GitHub projects
    that catalog your work and then building out demo videos explaining how your project
    works. This step accomplishes two things in learning cloud computing: teaching
    yourself better metacognition skills and building a portfolio of work that makes
    you more marketable.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我在课堂上鼓励这种方法的一种方式是通过促使学生每周演示他们正在进行的工作进展，并建立一个作品集。同样，在这本书中，我建议建立一系列GitHub项目来记录你的工作，然后制作解释你的项目运作方式的演示视频。这一步实现了两件事情：教授自己更好的元认知技能，并建立一个使你更具市场竞争力的作品集。
- en: The illusion of infinite computing resources
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟化的无限计算资源
- en: Machine learning is an excellent example of an ideal use case for “near infinite”
    computing resources. Deep learning requires access to large quantities of storage,
    disk I/O, and compute. Through elastic compute and storage, data lake capability
    via Amazon S3 opens up workflows that didn’t exist previously. This new workflow
    allows users and systems to operate data where it resides versus moving it back
    and forth to workstations or specialized file servers. Notice in [Figure 1-1](#Figure-1-7-2)
    that the Amazon S3 storage system can seamlessly handle the scaling of computing,
    storage, and disk I/O with any number of workers that access the resource. Amazon
    S3 can do this not only because it contains near infinite elasticity but also
    due to redundant properties. This concept means that it not only scales but can
    virtually always be available because of the design around the idea that [“things
    always fail”](https://oreil.ly/X77BO).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习是“几乎无限”计算资源的一个理想应用案例的绝佳例子。深度学习需要大量的存储、磁盘 I/O 和计算资源。通过弹性计算和存储，Amazon S3 通过数据湖能力打开了以前不存在的工作流程。这种新的工作流程允许用户和系统在其所在的地方操作数据，而不是来回将其移动到工作站或专用文件服务器。请注意，在
    [图 1-1](#Figure-1-7-2) 中，Amazon S3 存储系统可以无缝处理计算、存储和磁盘 I/O 的扩展，任意数量的访问资源的工作者。Amazon
    S3 之所以能够做到这一点，不仅因为它具有近乎无限的弹性，还因为它具有冗余属性。这个概念意味着它不仅可以扩展，而且由于设计围绕着“事物总是会失败”的思想，因此几乎总是可用。详见
    [“things always fail”](https://oreil.ly/X77BO)。
- en: Note
  id: totrans-12
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: One definition of machine learning is a program that learns from historical
    data to create predictions. You can use AWS SageMaker Studio to train your own
    machine learning models without knowing anything about data science with a feature
    called Amazon SageMaker Autopilot. You can learn more about that service [here](https://oreil.ly/QsDeC).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习的一个定义是从历史数据中学习以创建预测的程序。您可以使用 AWS SageMaker Studio 使用称为 Amazon SageMaker
    Autopilot 的功能来训练自己的机器学习模型，而无需了解任何关于数据科学的知识。您可以在这里了解更多关于该服务的信息 [here](https://oreil.ly/QsDeC)。
- en: '![doac 0101](assets/doac_0101.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![doac 0101](assets/doac_0101.png)'
- en: Figure 1-1\. Near infinite compute
  id: totrans-15
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-1\. 几乎无限的计算能力
- en: The elimination of up-front commitment by cloud users
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 通过云用户的前期承诺的消除
- en: For many start-ups, spending hundreds of thousands of dollars on buying equipment
    to try out an idea is not feasible. The cloud enables an opportunistic way to
    develop software by eliminating high fixed costs before cloud computing. Not only
    that, but you are not locked into a particular technology choice as you are in
    an on-premise data center.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 对于许多初创公司来说，在购买设备并尝试想法之前花费数十万美元是不可行的。云计算在云计算之前通过消除高固定成本的机会性方式来开发软件。不仅如此，您不会像在本地数据中心一样被锁定在特定的技术选择中。
- en: The ability to pay for the use of computing resources on a short-term basis
    as needed
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 能够根据需要短期支付计算资源的使用
- en: By switching to variable costs, companies only pay for what they need. The result
    is more efficient architectures that can respond to events and scale according
    to demand. As you can see, the critical cloud benefit is the ability to use elastic
    capabilities, namely, compute and storage. One such resource is an Elastic File
    System (EFS) on AWS. According to AWS, [EFS](https://aws.amazon.com/efs) is a
    “simple, serverless, set-and-forget, elastic file system.” It works well with
    the core elasticity capability of AWS in that it allows a developer to provision
    or tear down ephemeral resources like spot instances for a task yet interact with
    persistent storage available to all machines that use it. [*Spot instances*](https://aws.amazon.com/ec2/spot)
    are compute instances you can bid on and obtain for up to 90% cost savings, making
    them ideal for workflows that can be run anytime or are transient.^([1](ch01.xhtml#idm45599667298000))
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 通过切换到可变成本，公司只需支付他们所需的。其结果是更高效的架构，可以响应事件并根据需求进行扩展。正如你所见，云的关键好处在于能够使用弹性功能，即计算和存储。其中一种资源是
    AWS 上的弹性文件系统（[EFS](https://aws.amazon.com/efs)）。根据 AWS 的说法，EFS 是一个“简单的、无服务器的、设置即忘的、弹性文件系统”。它与
    AWS 的核心弹性能力很好地配合，允许开发人员为任务提供或关闭瞬态资源（如用于任务的竞价实例），同时与所有使用它的机器共享持久性存储进行交互。[*竞价实例*](https://aws.amazon.com/ec2/spot)是您可以竞标并获得高达
    90% 成本节约的计算实例，非常适合可以随时运行或是瞬时的工作流程。^([1](ch01.xhtml#idm45599667298000))
- en: Note
  id: totrans-20
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: AWS takes cost optimization very seriously and includes it as one of their [AWS
    Well-Architected Framework](https://oreil.ly/LzKgE) pillars. According to AWS,
    “The AWS Well-Architected Framework helps you understand the pros and cons of
    decisions you make while building systems on AWS.” Spot instances are a considerable
    part of the cost optimization story because they allow you to bid on unused capacity,
    achieving, as a result, up to 90% off regular on-demand pricing. For developers
    learning something, this resource is invaluable because you only “pay for what
    you need.”
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: AWS非常重视成本优化，并将其作为他们[AWS Well-Architected Framework](https://oreil.ly/LzKgE)支柱之一包含在内。根据AWS的说法，“AWS
    Well-Architected Framework帮助您理解在AWS上构建系统时所做决策的利弊”。Spot实例是成本优化故事的重要组成部分，因为它们允许您竞标未使用的容量，从而达到高达常规按需定价的90%的折扣。对于学习某些内容的开发人员来说，这些资源是无价的，因为您只需“按需付费”。
- en: Fully managed networked file systems like EFS are helpful in that they provide
    a consistent network experience, like a persistent home directory or data share.
    “Amazon Elastic File System (Amazon EFS) automatically grows and shrinks as you
    add and remove files with no need for management or provisioning,” according to
    official [AWS documentation](https://aws.amazon.com/efs).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 完全托管的网络文件系统如EFS非常有用，因为它们提供一致的网络体验，如持久的主目录或数据共享。根据官方[AWS文档](https://aws.amazon.com/efs)，“Amazon
    Elastic File System（Amazon EFS）在您添加和删除文件时自动增长和缩小，无需管理或配置”。
- en: One of the most troublesome bottlenecks in dealing with large data is needing
    more compute, disk I/O (input/output), and storage to process a task, like counting
    the visits to a website for a company with terabytes of data. In particular, the
    ability to seamlessly use a file system mountable by a cluster of machines (i.e.,
    EFS) and grow to meet the I/O demands of the cluster’s aggregate work is a massive
    efficiency that did not exist until cloud computing.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理大数据时最令人困扰的瓶颈之一是需要更多的计算能力、磁盘I/O（输入/输出）和存储来处理任务，比如为具有大量数据的公司网站访问统计。特别是，能够无缝地使用可被机群挂载的文件系统（即EFS）并根据机群的集体工作需求增长，是一种直到云计算出现前都不存在的高效率。
- en: Another elastic resource is [EC2](https://oreil.ly/dnQh1) virtual computing
    environments, also known as instances. EC2 instances are a basic level of scalable
    computing capacity provided by AWS. They have many features, including using Amazon
    Machine Images (AMIs) that package a complete server install. They are handy for
    scaling web services, trying out prototypes, or bidding on spare capacity, as
    with AWS Spot Instances. Spot Instances open up entirely new ways of working because
    virtual machines can be disposable, i.e., discarded when not needed, and used
    when the costs are low enough to justify their use.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个弹性资源是[EC2](https://oreil.ly/dnQh1)虚拟计算环境，也称为实例。EC2实例是由AWS提供的基本可扩展计算能力，具有多种特性，包括使用Amazon
    Machine Images（AMI）来打包完整的服务器安装。它们非常适用于扩展Web服务、试验原型或竞标剩余容量，如AWS Spot Instances。Spot
    Instances开启了全新的工作方式，因为虚拟机可以是一次性的，即在不需要时丢弃，并在成本低廉时使用。
- en: Types of Cloud Computing
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云计算的类型
- en: 'One consideration to be aware of is the types of cloud computing: IaaS (Infrastructure
    as a Service), PaaS (Platform as a Service), FaaS (Function as a Service), and
    SaaS (Software as a Service). Let’s discuss each in detail.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的一点是云计算的类型：IaaS（基础设施即服务）、PaaS（平台即服务）、FaaS（函数即服务）和SaaS（软件即服务）。让我们详细讨论每一种。
- en: IaaS
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: IaaS
- en: This option offers the basic building blocks of cloud computing, including networking,
    storage, and computing. It provides the closest abstraction to traditional IT
    resources and the most flexibility.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这个选项提供了云计算的基本构建块，包括网络、存储和计算。它提供了最接近传统IT资源的抽象和最大的灵活性。
- en: PaaS
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: PaaS
- en: This option is a hosted service that takes care of all IT management and allows
    a developer to focus only on building the business logic. An excellent example
    of an AWS PaaS is [AWS App Runner](https://aws.amazon.com/apprunner), which allows
    for continuous delivery of .NET applications with minimal effort. This type of
    offering removes the need to manage IT infrastructure. It allows an organization
    to focus on the deployment and management of applications.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这个选项是一个托管服务，负责所有的IT管理工作，使开发人员能够专注于构建业务逻辑。一个极好的AWS PaaS示例是[AWS App Runner](https://aws.amazon.com/apprunner)，它允许以最小的努力进行.NET应用程序的持续交付。这种类型的服务消除了管理IT基础设施的需求，使组织能够专注于应用程序的部署和管理。
- en: FaaS
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: FaaS
- en: FaaS is fascinating as a development paradigm because it allows a developer
    to work at the speed of thought. AWS Lambda is the canonical example of this model
    due to its automatic management of the compute resources.^([2](ch01.xhtml#idm45599668321152))
    For a .NET developer, it is perhaps the most efficient way to deploy logic to
    the cloud since the code only runs when responding to an event.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: FaaS 作为一种开发范式，令人着迷，因为它允许开发者以思维的速度工作。AWS Lambda 是这一模型的典型例子，因为它自动管理计算资源。^([2](ch01.xhtml#idm45599668321152))
    对于 .NET 开发者来说，这可能是将逻辑部署到云端最有效的方式，因为代码只在响应事件时运行。
- en: SaaS
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: SaaS
- en: This option provides a complete product available to purchase, freeing up an
    organization from needing to either host or develop this offering. An excellent
    example of this type of product is a logging and monitoring analysis service.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 该选项提供了一个完整的可购买产品，使组织无需托管或开发此类产品即可使用。这类产品的一个绝佳例子是日志和监控分析服务。
- en: Other (“as a service”)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 其他（“即服务”）
- en: There are newer “as a service” offerings made available by cloud computing.
    These services are discussed in more detail a little later in the book.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 云计算提供了更多的“即服务”选择。稍后本书将更详细地讨论这些服务。
- en: The general intuition is that IaaS means you pay less but have to do more, SaaS
    means you pay more but do less, and PaaS lies in the middle.^([3](ch01.xhtml#idm45599666833136))
    This concept is similar to walking into a big warehouse store and either buying
    flour to make pizza, buying a frozen pizza, or buying a cooked slice of pizza
    at the counter on your way out. Whether we’re talking about pizza or software,
    you pay less but do more in situations where you have expertise and time to do
    things yourself. Alternatively, the convenience of higher level service, i.e.,
    a hot slice of pizza, is worth leveraging the experts.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 普遍的直觉是，IaaS 意味着你付出较少但需要做更多工作，SaaS 意味着你付出更多但做的事情较少，而PaaS则处于中间位置。^([3](ch01.xhtml#idm45599666833136))
    这个概念类似于走进一个大型仓储店，要么买面粉做披萨，要么买冷冻披萨，要么在出门时在柜台上买一片现成的披萨。无论是披萨还是软件，当你有专业知识和时间自己动手时，你付出较少但需要做更多工作。或者，利用专家提供的更高级别服务的便利性，如热披萨，是值得的。
- en: While the raw cost of IaaS may be less, it is also closer to the traditional
    way of doing things in physical data, which may not always mean it is cheaper.
    IaaS may not always be more affordable because the total ROI (return on investment)
    may be higher since you need to pay for highly trained staff to develop and manage
    applications on top of IaaS. Additionally, some traditional paradigms like running
    a web service in a virtual machine may cost more money than an event-driven AWS
    Lambda function that only runs when invoked.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然IaaS的原始成本可能较低，但它更接近在物理数据中传统做法，这并不总是意味着更便宜。由于需要支付高素质员工来开发和管理IaaS上的应用程序，因此IaaS的总投资回报率（ROI）可能更高。此外，一些传统范式，如在虚拟机中运行Web服务，可能比仅在调用时运行的事件驱动AWS
    Lambda函数更昂贵。
- en: 'Another way to describe an efficient event-driven service like AWS Lambda is
    to call it a *cloud native service*. Cloud native services are new offerings created
    due to efficiencies made possible by cloud computing and offer paradigms not available
    in traditional IT infrastructure, such as responding to web events versus running
    a web server 24/7\. In concrete terms, an AWS Lambda function could run for just
    a few seconds of combined compute time per day. Meanwhile, a traditional web service
    would run 24/7 regardless of whether it’s receiving thousands of requests per
    second or just a dozen requests in a day. This concept is similar to the lights
    in a parking garage: you could waste electricity lighting an empty garage or you
    could use sensor lights that only turn on when motion triggers them. In this case,
    IaaS may be a more expensive solution when the ROI of the resources required to
    build it and the application’s run-time inefficiencies are fully considered in
    the cost.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 描述像 AWS Lambda 这样高效的事件驱动服务的另一种方式是将其称为*云原生服务*。云原生服务是云计算所可能带来效率的新服务，提供了传统IT基础设施不可用的范式，如响应Web事件与全天候运行Web服务器不同。具体而言，AWS
    Lambda 函数一天可能只需要几秒钟的计算时间。而传统的Web服务则会无论收到每秒数千次请求还是一天仅接收十几个请求，都会全天候运行。这个概念类似停车场里的灯光：你可以浪费电力点亮空荡荡的车库，也可以使用传感器灯，只有检测到运动时才会开启。在这种情况下，如果考虑到构建所需的资源和应用运行时的低效性的投入回报率，IaaS可能是一种更昂贵的解决方案。
- en: Another way to refer to services that require little to no management on your
    part is *managed services*. An excellent example of a managed service is Amazon
    CloudSearch. The managed service in the AWS Cloud makes it simple and cost-effective
    to set up, manage, and scale a search solution for your website or application.
    Managed services are the opposite of IaaS, which require experts to set up, run,
    and maintain them.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种称呼那些不需要或只需要很少管理的服务是 *managed services* 。Amazon CloudSearch 是一个管理服务的绝佳例子。在AWS云中，这种管理服务使得为你的网站或应用程序建立、管理和扩展搜索解决方案变得简单和经济高效。与之相反的是需要专家来设置、运行和维护的IaaS服务。
- en: Note
  id: totrans-41
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: AWS uses the term *managed services* to refer to PaaS, SaaS, and FaaS services.
    You’ll likely only see the term *managed services* used in AWS documentation.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 使用术语 *managed services* 来指代PaaS、SaaS和FaaS服务。在AWS文档中，你可能只会看到 *managed services*
    这个术语的使用。
- en: Next, let’s dive into how to get started with AWS.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们深入了解如何开始使用AWS。
- en: Getting Started with AWS
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用AWS
- en: An ideal place to get started with AWS is to sign up for a [free tier account](https://aws.amazon.com/free).
    When you initially create the account note, you need to set both an account name
    and the email address for the root user as shown in [Figure 1-2](#Figure-1-1-1).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 开始使用AWS的理想方式是注册一个[免费使用层账户](https://aws.amazon.com/free)。当你首次创建账户时，请注意需要设置一个账户名和根用户的电子邮件地址，如[图 1-2](#Figure-1-1-1)所示。
- en: '![doac 0102](assets/doac_0102.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![doac 0102](assets/doac_0102.png)'
- en: Figure 1-2\. Sign up for AWS
  id: totrans-47
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-2\. 注册AWS
- en: Once you create an account, the first thing to do is to lock away your AWS account
    root user access keys.^([4](ch01.xhtml#idm45599666815792)) on how to lock your
    AWS account root user access keys.] You don’t want to use the root user for everyday
    tasks but instead create an IAM admin user.^([5](ch01.xhtml#idm45599666813856))
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 创建账户后，首先要做的事情是将AWS账户根用户访问密钥锁定起来。[^4]关于如何锁定AWS账户根用户访问密钥的详细步骤，请参考[^4]。
- en: This is because if you expose the account credentials, it is possible to lose
    control of your AWS account. A fundamental security principle is the principle
    of least privilege (PLP), which states that you should “start with a minimum set
    of permissions and grant additional permissions as necessary.” Additionally, the
    root user account should enable AWS multifactor authentication (MFA) on the AWS
    root user account to review the step-by-step instructions on how to secure your
    account with MFA.^([6](ch01.xhtml#idm45599666810048))
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为如果暴露账户凭据，可能会失去对AWS账户的控制。一个基本的安全原则是最小权限原则（PLP），它指出你应该“从最小的权限集开始，并根据需要授予其他权限”。此外，根用户账户应该在AWS根用户账户上启用AWS多因素认证（MFA）来查看如何使用MFA保护你的账户的逐步说明。[^6]关于如何使用MFA保护你的账户的详细步骤，请参考[^6]。
- en: Note
  id: totrans-50
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: It is worth noting that a standard stumbling block in getting up to speed quickly
    with cloud computing is the terminology. Fortunately, AWS has a detailed and updated
    [glossary of terms](https://oreil.ly/5s83K) worth bookmarking.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，在快速上手云计算过程中的一个标准障碍是术语。幸运的是，AWS有一个详尽和更新的[术语表](https://oreil.ly/5s83K)，值得收藏。
- en: A straightforward way to use AWS is via the AWS web console. Let’s tackle this
    next.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 通过AWS Web控制台是使用AWS的简单方法。我们接下来来解决这个问题。
- en: Using the AWS Management Console
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用AWS管理控制台
- en: The AWS Management Console, as shown in [Figure 1-3](#Figure-1-1-2), is the
    central location to control AWS from a web browser.^([7](ch01.xhtml#idm45599666801440))
    The Services tab shows a hierarchical view of every service on the platform. Adjacent
    to this tab is a search box that allows you to search for a service. We find ourselves
    using the search box frequently, as it is often the quickest way to navigate to
    a service. Adjacent to the search box is the AWS CloudShell icon, which appears
    as a black and white terminal icon. [This service](https://aws.amazon.com/cloudshell)
    is a great way to quickly try out commands on the AWS platform, like listing [S3
    buckets](https://oreil.ly/SvdPd)—containers for object storage—in your account
    or running a command against a managed natural language processing API like [AWS
    Comprehend](https://aws.amazon.com/comprehend).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如图 [Figure 1-3](#Figure-1-1-2) 所示，AWS管理控制台是从Web浏览器控制AWS的中心位置。服务选项卡显示了平台上每个服务的分层视图。在该选项卡旁边是一个搜索框，允许您搜索服务。我们经常使用搜索框，因为它通常是导航到服务的最快方式。在搜索框旁边是AWS
    CloudShell图标，显示为黑白终端图标。[这项服务](https://aws.amazon.com/cloudshell) 是在AWS平台上快速尝试命令的好方法，例如列出您账户中的[S3存储桶](https://oreil.ly/SvdPd)
    — 对象存储的容器 — 或运行针对管理的自然语言处理API如[AWS Comprehend](https://aws.amazon.com/comprehend)
    的命令。
- en: Note
  id: totrans-55
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Conceptually, an S3 bucket is similar to consumer cloud storage like Dropbox,
    Box, or Google Drive.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在概念上，S3存储桶类似于消费者云存储，如Dropbox、Box或Google Drive。
- en: The circled N. Virginia tab shows the AWS region currently used. It is common
    to toggle to different regions to launch virtual machines or try services in another
    region. Often, but not always, new services first appear in the N. Virginia region,
    so depending on what region your organization is using, they may need to toggle
    to N. Virginia to try out a new service and then back again. Likewise, suppose
    a new service appears in a different region like US West (Oregon). You may find
    yourself trying that new service out in that region and then needing to toggle
    back to your primary region.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 带圈的N. Virginia选项卡显示了当前使用的AWS区域。经常切换到不同的区域来启动虚拟机或尝试另一个区域中的服务是很常见的。通常，但并非总是这样，新服务首先会出现在N.
    Virginia地区，所以根据您的组织使用的区域，可能需要切换到N. Virginia来尝试新服务，然后再切回去。同样，如果新服务出现在像US West（Oregon）这样的不同区域，您可能会发现自己在那个区域尝试新服务，然后需要切换回您的主要区域。
- en: '![doac 0103](assets/doac_0103.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![doac 0103](assets/doac_0103.png)'
- en: Figure 1-3\. Using the AWS Console
  id: totrans-59
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1-3\. 使用AWS控制台
- en: Note
  id: totrans-60
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: The [cost of services](https://oreil.ly/QU1ur) and transferring data out of
    AWS may vary between regions.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[服务成本](https://oreil.ly/QU1ur)和数据迁出AWS的成本可能因区域而异。'
- en: Finally, the Recently visited tab shows services recently used. After prolonged
    use of AWS, it is common to have most of the daily services appear in this section,
    providing a helpful shortcut menu to use AWS. Another thing to note is that you
    can [“star”](https://oreil.ly/Q14E7) an item in the console to add it to the Favorites
    tab, as shown in [Figure 1-4](#Figure-1-1-2-1-favorites). This process can be
    a convenient way to access services you use often.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，最近访问选项卡显示了最近使用的服务。在长时间使用AWS后，大多数日常服务通常会出现在这个部分，提供一个有用的快捷菜单来使用AWS。另一个需要注意的是，您可以在控制台中给一个项目加星标（[Figure 1-4](#Figure-1-1-2-1-favorites)）。这个过程可以是访问经常使用的服务的便捷方式。
- en: '![doac 0104](assets/doac_0104.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![doac 0104](assets/doac_0104.png)'
- en: Figure 1-4\. Favorites in the AWS Management Console
  id: totrans-64
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1-4\. AWS管理控制台中的收藏夹
- en: Next, let’s look at utilizing the AWS communities and documentation resources.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看如何利用AWS社区和文档资源。
- en: Utilizing the AWS Communities and Documentation
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 利用AWS社区和文档
- en: A tremendous variety of documentation is available for learning about the AWS
    platform in various forms and depth. Let’s discuss these resources next.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: AWS平台提供了大量不同形式和深度的文档，可供学习。接下来让我们讨论这些资源。
- en: The .NET on AWS website
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: .NET on AWS网站
- en: The [.NET on AWS website](https://oreil.ly/cS5eZ) is the central location for
    information about using .NET with AWS. From here, readers can find service and
    SDK documentation, AWS toolkits and migration tools, getting started tutorials,
    developer community links, and other content.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[.NET on AWS网站](https://oreil.ly/cS5eZ)是关于在AWS上使用.NET的信息中心。从这里，读者可以找到服务和SDK文档、AWS工具包和迁移工具、入门教程、开发者社区链接以及其他内容。'
- en: It is wise for a .NET developer to bookmark this website since it has a curated
    view of helpful resources. One of my favorite sections is the [.NET Community
    tab](https://oreil.ly/de3mt). This section has a link to many popular developer
    communities, as shown in [Figure 1-5](#Figure-1-1-3) including Twitter, re:Post,
    Stack Overflow, Slack, GitHub, and Global AWS User Groups.^([8](ch01.xhtml#idm45599668457424))
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 .NET 开发者来说，将这个网站加入书签是明智的，因为它提供了有帮助的资源的策划视图。我最喜欢的部分之一是 [.NET 社区选项卡](https://oreil.ly/de3mt)。这一部分包含了许多流行的开发者社区的链接，如[图
    1-5](#Figure-1-1-3)所示，包括 Twitter、re:Post、Stack Overflow、Slack、GitHub 和全球 AWS 用户组。^([8](ch01.xhtml#idm45599668457424))
- en: '![doac 0105](assets/doac_0105.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![doac 0105](assets/doac_0105.png)'
- en: Figure 1-5\. Developer communities for .NET
  id: totrans-72
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-5\. .NET 的开发者社区
- en: One of the more valuable sections of the community portal is the links to YouTube
    channels and developer blogs. Finally, there are links to open source .NET projects
    that AWS invests in, including [.NET on AWS](https://github.com/aws/dotnet) and
    [AWS SDK for .NET](https://github.com/aws/aws-sdk-net).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 社区门户的一个更有价值的部分之一是到 YouTube 频道和开发者博客的链接。最后，还有 AWS 投资的开源 .NET 项目的链接，包括 [.NET on
    AWS](https://github.com/aws/dotnet) 和 [AWS SDK for .NET](https://github.com/aws/aws-sdk-net)。
- en: Next, let’s look at the AWS SDK for .NET documentation.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看 AWS SDK for .NET 文档。
- en: AWS SDK for .NET documentation
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AWS SDK for .NET 文档
- en: You can learn to develop and deploy applications with the AWS SDK for .NET at
    the [official website](https://aws.amazon.com/sdk-for-net). This website includes
    several essential guides, including the [Developer Guide](https://oreil.ly/4xmTZ),
    the [API Reference Guide](https://oreil.ly/EHPkN), and the [SDK Code Examples
    Guide](https://oreil.ly/Y0f0G).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过[官方网站](https://aws.amazon.com/sdk-for-net)了解如何使用 AWS SDK for .NET 开发和部署应用程序。该网站包含几个重要的指南，包括[开发者指南](https://oreil.ly/4xmTZ)，[API
    参考指南](https://oreil.ly/EHPkN)，和[SDK 代码示例指南](https://oreil.ly/Y0f0G)。
- en: Another essential resource is the necessary development .NET tools on AWS, shown
    in [Figure 1-6](#Figure-1-1-4). These include AWS Toolkit for Rider, AWS Toolkit
    for Visual Studio, AWS Toolkit for Visual Studio Code, and AWS Tools for Azure
    DevOps.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个重要资源是 AWS 上必要的开发 .NET 工具，如[图 1-6](#Figure-1-1-4)所示。这些工具包括 Rider 的 AWS Toolkit，Visual
    Studio 的 AWS Toolkit，Visual Studio Code 的 AWS Toolkit，以及 Azure DevOps 的 AWS 工具。
- en: '![doac 0106](assets/doac_0106.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![doac 0106](assets/doac_0106.png)'
- en: Figure 1-6\. Explore .NET tools on AWS
  id: totrans-79
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-6\. 探索 AWS 上的 .NET 工具
- en: We’ll dig into the AWS SDK later in the chapter. Next, let’s take a look at
    the AWS service documentation.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们稍后会深入研究本章的 AWS SDK。接下来，让我们看看 AWS 服务文档。
- en: AWS service documentation
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AWS 服务文档
- en: AWS has so many services that it can be overwhelming at first to understand
    which service is appropriate for the task at hand. Fortunately, there is a centralized
    web page, the [AWS documentation website](https://docs.aws.amazon.com), containing
    guides and API references, tutorials and projects, SDKs and toolkits, as well
    general resources like FAQs and links to case studies.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 有如此多的服务，初次理解哪种服务适合手头的任务可能有些困难。幸运的是，有一个集中的网页，[AWS 文档网站](https://docs.aws.amazon.com)，其中包括指南和
    API 参考、教程和项目、SDK 和工具包，以及常见问题解答和案例研究的链接。
- en: 'One item to call out is that AWS has many SDKs and toolkits, as shown in [Figure 1-7](#Figure-1-1-5),
    including the AWS CLI. It can be helpful for a .NET developer to see examples
    in many languages to get ideas for solutions you can build .NET. The [AWS Command
    Line Interface](https://aws.amazon.com/cli) is often the most efficient documentation
    for a service since it abstracts the concepts at a level that makes it easy to
    understand what is going on. An excellent example of this concept is the following
    command to copy a folder recursively into AWS S3 object storage:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 一个需要注意的项目是 AWS 拥有许多 SDK 和工具包，如[图 1-7](#Figure-1-1-5)所示，包括 AWS CLI。对于 .NET 开发者来说，看多种语言的示例以获取构建解决方案的想法是非常有帮助的。[AWS
    命令行界面](https://aws.amazon.com/cli)通常是服务的最有效文档，因为它以易于理解的方式抽象了概念。这个概念的一个很好的例子是以下递归复制文件夹到
    AWS S3 对象存储的命令：
- en: '[PRE0]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Each whitespace separates the command’s actions, i.e., `aws` then `s3` for the
    service, the action `s3`, and the rest of the command. There is no quicker way
    to learn a service on AWS than to invoke it from the command line in many cases.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 每个空格分隔命令的动作，例如，首先`aws`然后` s3`用于服务，`s3`动作，和其余命令。在许多情况下，从命令行调用 AWS 上的服务是学习的最快方式。
- en: '![doac 0107](assets/doac_0107.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![doac 0107](assets/doac_0107.png)'
- en: Figure 1-7\. Explore AWS SDK and toolkits
  id: totrans-87
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-7\. 探索 AWS SDK 和工具包
- en: Next, let’s talk about installing the AWS Command Line.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们谈谈安装AWS命令行。
- en: Using the AWS Command Line Interface
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用AWS命令行界面
- en: According to the [official AWS documentation](https://aws.amazon.com/cli), “The
    AWS Command Line Interface (CLI) is a unified tool to manage your AWS services.
    With just one tool to download and configure, you can control multiple AWS services
    from the command line and automate them through scripts.”
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 根据[官方AWS文档](https://aws.amazon.com/cli)，“AWS命令行界面（CLI）是一个统一的工具，用于管理您的AWS服务。只需下载并配置一个工具，您就可以从命令行控制多个AWS服务并通过脚本自动化它们。”
- en: There are four essential methods to interact with the AWS Command Line Interface.^([9](ch01.xhtml#idm45599667273312))
    Let’s discuss each briefly.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 有四种基本方法与AWS命令行界面进行交互。^([9](ch01.xhtml#idm45599667273312)) 让我们简要讨论每一种方法。
- en: AWS CloudShell
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: AWS CloudShell
- en: '[AWS CloudShell](https://aws.amazon.com/cloudshell) is a cloud native browser-based
    shell, meaning that it takes advantage of the unique properties of the cloud by
    preinstalling the AWS CLI for you. You can choose between the [Bash shell, PowerShell,
    or Z shell](https://oreil.ly/3prep).'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[AWS CloudShell](https://aws.amazon.com/cloudshell)是一款基于浏览器的云原生Shell，这意味着它利用云的独特属性为您预先安装了AWS
    CLI。您可以选择Bash Shell、PowerShell或Z Shell之间的任一种。'
- en: AWS Cloud9
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Cloud9
- en: '[AWS Cloud9](https://aws.amazon.com/cloud9) is a cloud native interactive development
    environment (IDE) that has deep hooks into AWS with unique development tools suited
    to developing not just for the cloud but inside the cloud itself.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '[AWS Cloud9](https://aws.amazon.com/cloud9)是一款云原生交互式开发环境（IDE），具有深入的AWS集成和适用于在云中进行开发的独特开发工具。'
- en: Linux shells
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Linux shells
- en: By using the [Amazon Linux 2 AMI](https://oreil.ly/rWRSi), you automatically
    get access to the command-line tools for AWS integration. Alternatively, you can
    install the AWS CLI on any [Linux system](https://oreil.ly/xVxX1).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用[Amazon Linux 2 AMI](https://oreil.ly/rWRSi)，您自动获得用于AWS集成的命令行工具。或者，您可以在任何[Linux系统](https://oreil.ly/xVxX1)上安装AWS
    CLI。
- en: Windows command line
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Windows命令行
- en: '[Managed AWS Windows AMIs](https://oreil.ly/iX5tt) come with AWS CLI. Alternatively,
    you can download and run the [64-bit Windows installer](https://oreil.ly/0qrv9).'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[托管的AWS Windows AMIs](https://oreil.ly/iX5tt)附带AWS CLI。或者，您可以下载并运行[64位Windows安装程序](https://oreil.ly/0qrv9)。'
- en: Next, let’s discuss the installation notes about each of these methods.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们讨论每种方法的安装说明。
- en: Note
  id: totrans-101
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: You can watch a more detailed walk-through of using the AWS CloudShell, including
    interacting with Bash, ZSH, PowerShell, S3, Lambda, Python, IPython, Pip, Boto3,
    DynamoDB, and Cloud9 on [YouTube](https://oreil.ly/F9y5o) or [O’Reilly](https://oreil.ly/4J4Me).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以观看关于如何使用AWS CloudShell的更详细演示，包括与Bash、ZSH、PowerShell、S3、Lambda、Python、IPython、Pip、Boto3、DynamoDB和Cloud9的交互，这些演示可在[YouTube](https://oreil.ly/F9y5o)或[O'Reilly](https://oreil.ly/4J4Me)上找到。
- en: How to install AWS CloudShell and AWS Cloud9
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如何安装AWS CloudShell和AWS Cloud9
- en: There is no installation process necessary for AWS CloudShell and AWS Cloud9
    because they are already included in the AWS Console experience, as shown in [Figure 1-8](#Figure-1-1-9).
    Notice that searching for both tools brings them both up in search results, allowing
    you to “star” (i.e., add them as favorites) or click on them. Finally, the terminal
    icon can also launch AWS CloudShell. One key advantage of these cloud native terminals
    is they are fully managed and up-to-date and automatically manage your credentials.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 对于AWS CloudShell和AWS Cloud9，无需安装过程，因为它们已包含在AWS控制台体验中，如[图1-8](#Figure-1-1-9)所示。注意，在搜索结果中同时找到这两个工具，允许您“标记”（即添加到收藏夹）或单击它们。最后，终端图标还可以启动AWS
    CloudShell。这些云原生终端的一个关键优势是它们是完全托管和自动更新的，并自动管理您的凭据。
- en: '![doac 0108](assets/doac_0108.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![doac 0108](assets/doac_0108.png)'
- en: Figure 1-8\. Selecting AWS Cloud9 and AWS CloudShell
  id: totrans-106
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1-8\. 选择AWS Cloud9和AWS CloudShell
- en: How to install the AWS CLI
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如何安装AWS CLI
- en: The AWS CLI installation comes with AWS Cloud9 or AWS CloudShell. If you need
    to install the AWS CLI locally on Windows, [a detailed guide](https://oreil.ly/JDsuk)
    is on the AWS website.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 'AWS CLI安装包含AWS Cloud9或AWS CloudShell。如果您需要在Windows本地安装AWS CLI，可以在AWS网站上找到[详细指南](https://oreil.ly/JDsuk)。  '
- en: How to install AWSPowerShell.NETCore for AWS
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如何安装AWSPowerShell.NETCore for AWS
- en: 'If you need to run PowerShell for AWS locally on Windows, Linux, or macOS,
    you can refer to the [PowerShell Gallery](https://oreil.ly/omRZp) to find the
    latest version of AWSPowerShell.NETCore and installation instructions for Windows,
    Linux, and macOS. AWSPowerShell.NETCore is the recommended version of PowerShell
    for working with AWS because it has comprehensive cross-platform support. Generally,
    though, you can install the following PowerShell command: `Install-Module -Name
    AWSPowerShell.NetCore`.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要在 Windows、Linux 或 macOS 上本地运行 AWS 的 PowerShell，你可以参考 [PowerShell Gallery](https://oreil.ly/omRZp)
    查找 AWSPowerShell.NETCore 的最新版本及安装说明。AWSPowerShell.NETCore 是推荐用于与 AWS 工作的 PowerShell
    版本，因为它具有全面的跨平台支持。通常情况下，你可以使用以下 PowerShell 命令进行安装：`Install-Module -Name AWSPowerShell.NetCore`。
- en: An alternative to installing PowerShell on a local operating system is using
    AWS CloudShell since it comes preinstalled. Next, let’s talk about how this process
    works.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在本地操作系统上安装 PowerShell 的替代方法是使用 AWS CloudShell，因为它预装了 PowerShell。接下来，让我们看看这个过程是如何运作的。
- en: Using PowerShell with AWS CloudShell
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 AWS CloudShell 中的 PowerShell
- en: An excellent guide for using AWS Tools for PowerShell lives on the [AWS website](https://oreil.ly/zOG86).
    Let’s look at a simple example to supplement the official documentation. In the
    following example, as shown in [Figure 1-9](#Figure-1-1-10), we create an AWS
    bucket by invoking the `New-S3Bucket` cmdlet to create a new Amazon S3 bucket.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 有关使用 AWS PowerShell 工具的优秀指南可以在 [AWS 网站](https://oreil.ly/zOG86) 上找到。让我们看一个简单的例子来补充官方文档。在以下示例中，如
    [图 1-9](#Figure-1-1-10) 所示，我们通过调用 `New-S3Bucket` cmdlet 来创建一个新的 Amazon S3 存储桶。
- en: '![doac 0109](assets/doac_0109.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![doac 0109](assets/doac_0109.png)'
- en: Figure 1-9\. Create AWS bucket in AWS PowerShell
  id: totrans-115
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-9\. 在 AWS PowerShell 中创建 AWS 存储桶
- en: Next, we can go to the AWS Console, select S3, and verify it appears, as shown
    in [Figure 1-10](#Figure-1-1-11).
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以转到 AWS 控制台，选择 S3，并验证其是否显示，如 [图 1-10](#Figure-1-1-11) 所示。
- en: '![doac 0110](assets/doac_0110.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![doac 0110](assets/doac_0110.png)'
- en: Figure 1-10\. Show AWS bucket in AWS S3 Console
  id: totrans-118
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-10\. 在 AWS S3 控制台中显示 AWS 存储桶
- en: It is worth mentioning that PowerShell for AWS offers a sophisticated and high-level
    interface to control and interact with services on AWS, including EC2, S3, Lambda,
    and more. You can further explore those in the [AWS documentation](https://oreil.ly/2V072).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 值得一提的是，AWS 的 PowerShell 提供了一个复杂和高级的界面，用于控制和与 AWS 的服务（包括 EC2、S3、Lambda 等）交互。你可以在
    [AWS 文档](https://oreil.ly/2V072) 中进一步探索这些功能。
- en: 'The AWS CloudShell supports three shells: PowerShell, Bash, and Z shell. To
    use PowerShell, you type **`pwsh`**. You can explore all AWS CloudShell features
    using the official [documentation](https://oreil.ly/z1CC4). The AWS CloudShell
    comes with 1 GB of persistent storage in */home/cloudshell-user*. The action menu,
    as shown in [Figure 1-11](#Figure-1-1-12), allows you to perform many practical
    actions, including downloading and uploading files, restarting the terminal, deleting
    the data in the home directory, and configuring the tabs layout of the terminal.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: AWS CloudShell 支持三种 shell：PowerShell、Bash 和 Z shell。要使用 PowerShell，你可以输入 **`pwsh`**。你可以通过官方的
    [文档](https://oreil.ly/z1CC4) 探索 AWS CloudShell 的所有功能。AWS CloudShell 提供了 1GB 的持久存储空间，位于
    */home/cloudshell-user*。如 [图 1-11](#Figure-1-1-12) 所示，操作菜单允许你执行许多实用操作，包括下载和上传文件、重新启动终端、删除主目录中的数据以及配置终端的标签布局。
- en: '![doac 0111](assets/doac_0111.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![doac 0111](assets/doac_0111.png)'
- en: Figure 1-11\. AWS CloudShell action menu
  id: totrans-122
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-11\. AWS CloudShell 操作菜单
- en: Fortunately, the AWS CloudShell PowerShell is straightforward, similar to local
    PowerShell. First, to use `AWSPowerShell.NetCore`, import it as shown in the following
    sequence, echo content into a file, and write it to the bucket created earlier.
    Finally, run `Get-S3Object` to verify the file’s creation in S3, which you can
    see in [Figure 1-12](#Figure-1-1-13).
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，AWS CloudShell 的 PowerShell 用法非常简单，类似于本地的 PowerShell。首先，要使用 `AWSPowerShell.NetCore`，请按以下顺序导入它，将内容回显到文件中，并将其写入先前创建的存储桶中。最后，运行
    `Get-S3Object` 来验证文件在 S3 中的创建情况，你可以在 [图 1-12](#Figure-1-1-13) 中看到。
- en: '[PRE1]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![doac 0112](assets/doac_0112.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![doac 0112](assets/doac_0112.png)'
- en: Figure 1-12\. AWS CloudShell create file S3
  id: totrans-126
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-12\. AWS CloudShell 创建文件 S3
- en: 'Another feature of the CloudShell and PowerShell environment is invoking C#
    code. To get started using PowerShell with C#, you can create a C# snippit and
    embed it in a script called *./hello-ps-c-sharp.ps1*. The C# code comes after
    the `$code = @"` block and then terminates at `"@`. The general idea is that if
    you are using PowerShell inside of AWS CloudShell, you can use existing snippets
    of helpful C# to enhance a PowerShell script without needing a full-fledged editor:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 云外壳（CloudShell）和 PowerShell 环境的另一个特性是调用 C# 代码。要开始使用 PowerShell 和 C#，你可以创建一个
    C# 片段并嵌入到名为 *./hello-ps-c-sharp.ps1* 的脚本中。C# 代码在 `$code = @"` 块之后，并在 `"@` 终止。总体思路是，如果你在
    AWS CloudShell 中使用 PowerShell，可以使用现有的有用 C# 片段来增强 PowerShell 脚本，而不需要完整的编辑器：
- en: '[PRE2]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Next, run it in your PowerShell prompt:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在你的 PowerShell 提示符中运行它：
- en: '[PRE3]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Consider using Bash and PowerShell, depending on which one makes more sense
    in a given context. If you are doing something with pure .NET capabilities, then
    PowerShell is an easy win. On the other hand, you may find some documentation
    for scripting a solution with Bash on the AWS website. Instead of rewriting the
    example, simply use it and extend in Bash, saving you time.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 根据特定情境选择使用 Bash 或 PowerShell。如果涉及纯粹的 .NET 功能，那么 PowerShell 是一个简单的选择。另一方面，你可能会在
    AWS 网站上找到一些关于使用 Bash 脚本解决方案的文档。与其重写示例，不如直接使用并在 Bash 中扩展，这样可以节省时间。
- en: 'In the following example, we use a Bash hash to store a list of Cloud9 IDs
    and then get information about them:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的示例中，我们使用一个 Bash 哈希来存储 Cloud9 的 ID 列表，然后获取关于它们的信息：
- en: '[PRE4]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We don’t have to use Bash in this particular situation because there is excellent
    documentation on how to solve the problem in PowerShell for AWS. PowerShell can
    do the same thing as Bash and has deep C# integration. Notice the following example
    shows the PowerShell method of looping through several IDs stored in a hash:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种特定情况下，我们不必使用 Bash，因为有关如何在 AWS 中使用 PowerShell 解决问题的优秀文档。PowerShell 可以像 Bash
    一样做同样的事情，并且具有深度的 C# 集成。请注意以下示例展示了通过 PowerShell 循环遍历存储在哈希中的多个 ID 的方法：
- en: '[PRE5]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: To summarize, the AWS CloudShell is a great companion for the C# developer,
    and it is worth having in your toolkit. Now let’s use Visual Studio for AWS, a
    preferred environment for experienced .NET developers who use AWS.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，AWS CloudShell 对于 C# 开发者来说是一个很好的伴侣，值得放入你的工具包中。现在让我们使用 Visual Studio 来开发
    AWS，这是有经验的 .NET 开发者使用 AWS 的首选环境。
- en: Using Visual Studio with AWS and AWS Toolkit for Visual Studio
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Visual Studio 开发 AWS 和 AWS Toolkit for Visual Studio
- en: Getting set up with Visual Studio with AWS is a straightforward process. The
    required components are an AWS account, a machine running a supported version
    of Windows, Visual Studio Community Edition or higher, and [AWS Toolkit for Visual
    Studio](https://aws.amazon.com/visualstudio). Please refer to this official AWS
    documentation for further details on setting up Visual Studio for AWS if this
    is your first time configuring it.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Visual Studio 开发 AWS 是一个简单直接的过程。所需组件包括 AWS 账号、运行受支持版本的 Windows 的机器、Visual
    Studio Community 版或更高版本，以及 [AWS Toolkit for Visual Studio](https://aws.amazon.com/visualstudio)。如果这是你第一次配置，请参阅官方
    AWS 文档以获取有关设置 Visual Studio 开发 AWS 的进一步细节。
- en: Note
  id: totrans-139
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: If you want to use the latest .NET 6 features, you need to use Visual Studio
    2022\. In practice, your best experience for Visual Studio with deep AWS integration
    is a Windows environment running the latest version of Visual Studio. For example,
    a Mac version of Visual Studio exists, but the AWS Toolkit does not work on Mac.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想使用最新的 .NET 6 特性，需要使用 Visual Studio 2022。在实践中，使用最新版本的 Visual Studio 在 Windows
    环境中可以获得最佳的 Visual Studio 与 AWS 深度集成体验。例如，有 Mac 版本的 Visual Studio，但 AWS Toolkit
    在 Mac 上无法工作。
- en: The AWS SDK for .NET has deep integration with the Visual Studio environment,
    as shown in [Figure 1-13](#Figure-1-6). It includes interacting with AWS Core
    Services, including Amazon S3 and Amazon EC2, through the AWS Explorer integration
    installed as part of AWS Toolkit for Visual Studio.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: AWS SDK for .NET 与 Visual Studio 环境深度集成，如 [Figure 1-13](#Figure-1-6) 所示。它包括通过作为
    AWS Toolkit for Visual Studio 一部分安装的 AWS Explorer 集成与 AWS 核心服务（包括 Amazon S3 和
    Amazon EC2）进行交互。
- en: '![doac 0113](assets/doac_0113.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![doac 0113](assets/doac_0113.png)'
- en: Figure 1-13\. AWS SDK for .NET
  id: totrans-143
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-13\. AWS SDK for .NET
- en: According to the official AWS documentation, the AWS Toolkit for Visual Studio
    is an extension for Microsoft Visual Studio running on Microsoft Windows that
    makes it “easier for developers to develop, debug, and deploy .NET applications
    using Amazon Web Services.” This integration includes multiple ways to deploy
    applications and manage services. A component of this integration manifests itself
    in the Server Explorer Toolbox, or AWS Explorer, as shown in [Figure 1-14](#Figure-1-7).
    The AWS Explorer lets you manage and interact with AWS resources like Amazon S3
    or EC2 instances within a Microsoft Windows Visual Studio environment.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 根据官方AWS文档，AWS Toolkit for Visual Studio是运行在Microsoft Windows上的Microsoft Visual
    Studio的扩展，使开发者能够“更轻松地使用亚马逊网络服务开发、调试和部署.NET应用程序”。此集成包括多种部署应用程序和管理服务的方法。这种集成的一个组件体现在服务器资源管理器工具箱或AWS
    Explorer中，如[图 1-14](#Figure-1-7)所示。AWS Explorer允许您在Microsoft Windows Visual Studio环境中管理和与AWS资源如Amazon
    S3或EC2实例交互。
- en: Notice how straightforward it is to dive into many popular AWS services with
    a mouse click.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，通过单击鼠标可以轻松进入许多热门的AWS服务。
- en: 'Visual Studio is a popular development for .NET for two reasons: it is both
    a fantastic editor and a rich ecosystem for .NET developers. The AWS Toolkit for
    Visual Studio taps into this ecosystem as an extension for Microsoft Visual Studio
    on Windows, making it easier for developers to develop, debug, and deploy .NET
    applications using Amazon Web Services. You can see a complete list of the features
    available by reviewing the [installer’s official documentation](https://oreil.ly/v2Xne).'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio是.NET的流行开发工具，有两个原因：它既是一款出色的编辑器，也是.NET开发者丰富的生态系统。AWS Toolkit for
    Visual Studio作为Microsoft Visual Studio在Windows上的扩展，融入了这一生态系统，使开发者能够更轻松地使用亚马逊网络服务开发、调试和部署.NET应用程序。您可以通过查阅[安装程序的官方文档](https://oreil.ly/v2Xne)来查看所有可用功能的完整列表。
- en: Note
  id: totrans-147
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Note that [Visual Studio Code](https://oreil.ly/yWme7) and [JetBrains Rider](https://oreil.ly/vVrq5)
    both have AWS Toolkits.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，[Visual Studio Code](https://oreil.ly/yWme7)和[JetBrains Rider](https://oreil.ly/vVrq5)都有AWS工具包。
- en: '![doac 0114](assets/doac_0114.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![doac 0114](assets/doac_0114.png)'
- en: Figure 1-14\. AWS Explorer
  id: totrans-150
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-14\. AWS Explorer
- en: The AWS Explorer installation does require three key steps:^([10](ch01.xhtml#idm45599658279568))
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 安装AWS Explorer确实需要三个关键步骤：^([10](ch01.xhtml#idm45599658279568))
- en: Install the AWS Toolkit for Visual Studio
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装AWS Toolkit for Visual Studio
- en: Download the [*AWS Toolkit for Visual Studio 2022*](https://oreil.ly/v2Xne)
    and install the package on your Windows machine that has a local installation
    of Visual Studio.
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 下载[*AWS Toolkit for Visual Studio 2022*](https://oreil.ly/v2Xne)并在安装了Microsoft
    Visual Studio的Windows机器上安装此软件包。
- en: Create an IAM user and download credentials
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建IAM用户并下载凭据
- en: Create an IAM user in the AWS Console and apply the *principle of least privilege*.^([11](ch01.xhtml#idm45599658273904))
    Ensure that you select the access key option, as shown in [Figure 1-15](#Figure-1-1-6),
    and then download the credentials in CSV format when prompted.
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在AWS控制台中创建IAM用户，并应用*最小特权原则*。^([11](ch01.xhtml#idm45599658273904)) 确保您选择访问密钥选项，如[图 1-15](#Figure-1-1-6)所示，并在提示时以CSV格式下载凭据。
- en: '![doac 0115](assets/doac_0115.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![doac 0115](assets/doac_0115.png)'
- en: Figure 1-15\. Create an IAM user for Visual Studio
  id: totrans-157
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-15\. 为Visual Studio创建IAM用户
- en: Add credentials to Visual Studio
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将凭据添加到Visual Studio
- en: Finally, add the credentials you downloaded in CSV form to AWS Explorer, as
    shown in [Figure 1-16](#Figure-1-1-7).
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后，在AWS Explorer中添加您以CSV格式下载的凭据，如[图 1-16](#Figure-1-1-7)所示。
- en: Note
  id: totrans-160
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Extra special consideration is needed in downloading keys from AWS to use on
    any local development machine because if they are compromised, the privileges
    of those keys are available to whoever owns them. Using the PLP, a developer should
    select IAM privileges that correspond only with the functions that are strictly
    necessary to develop the solutions you create on AWS.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在将AWS密钥下载到任何本地开发机器上时，需要特别注意，因为如果它们被 compromise，那么拥有它们的人就可以利用这些密钥的权限。使用PLP，开发者应该选择仅与在AWS上创建解决方案所需的功能严格对应的IAM权限。
- en: '![doac 0116](assets/doac_0116.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![doac 0116](assets/doac_0116.png)'
- en: Figure 1-16\. Add credentials
  id: totrans-163
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-16\. 添加凭据
- en: Once AWS Toolkit for Visual Studio installs, it is also good to be vigilant
    about updating the tool shown in [Figure 1-17](#Figure-1-1-8) since it is actively
    under development with new features from AWS. You will see new updates to the
    AWS Toolkit for Visual Studio as notifications in Visual Studio.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 AWS Toolkit for Visual Studio 安装完成，同样要注意及时更新工具，如 [图 1-17](#Figure-1-1-8)
    所示，因为它正在积极开发中，具有来自 AWS 的新功能。在 Visual Studio 中，您将会看到 AWS Toolkit for Visual Studio
    的新更新通知。
- en: '![doac 0117](assets/doac_0117.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![doac 0117](assets/doac_0117.png)'
- en: Figure 1-17\. Upgrading AWS Toolkit for Visual Studio
  id: totrans-166
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-17\. 升级 AWS Toolkit for Visual Studio
- en: Next, let’s look at getting started with the AWS SDK.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看如何开始使用 AWS SDK。
- en: Getting Started with the AWS SDK
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开始使用 AWS SDK
- en: 'The best method to learn a new technology is to build something. Let’s get
    started with the AWS SDK by making a Console App that targets .NET 6 using the
    AWSSDK.S3 package from NuGet. The steps are as follows:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 学习一项新技术的最佳方法是动手构建一些东西。让我们通过创建一个以 AWSSDK.S3 从 NuGet 获取的控制台应用程序来开始使用 AWS SDK。步骤如下：
- en: Create a new Console App targeting .NET 6.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的目标为 .NET 6 的控制台应用程序。
- en: Inside Visual Studio, create a new Console Application that serves as the vessel
    for the AWS S3 tool developed.
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 Visual Studio 中，创建一个新的控制台应用程序，作为开发的 AWS S3 工具的载体。
- en: Install AWSSDK.S3 via NuGet.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 NuGet 安装 AWSSDK.S3。
- en: With the newly created Console App loaded, choose Tools, then NuGet Package
    Manager, then Manage NuGet Packages for Solution. Search for AWSSDK.S3 and install
    it into your Console Project.
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 加载新创建的控制台应用程序后，选择“工具”，然后是 NuGet 包管理器，接着是“管理解决方案的 NuGet 包”。搜索 AWSSDK.S3 并将其安装到您的控制台项目中。
- en: Create the code.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建代码。
- en: Build the following Console App by replacing the *Program.cs* file with the
    content shown in the following example.
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过将 *Program.cs* 文件替换为以下示例中显示的内容来构建以下控制台应用程序。
- en: Tip
  id: totrans-176
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: Another way to install NuGet Packages is to right-click on the project and select
    Manage NuGet Packages.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种安装 NuGet 包的方法是右键单击项目，然后选择“管理 NuGet 包”。
- en: '[PRE6]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note
  id: totrans-179
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: 'For fans of the command line, it is worth noting that you can also use the
    `dotnet` command-line tool to create a Console Application as in the following
    snippet: `dotnet new console --framework net6.0`.^([12](ch01.xhtml#idm45599658141328))'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 对于命令行的爱好者，值得注意的是，您还可以使用 `dotnet` 命令行工具创建一个控制台应用程序，如以下片段所示：`dotnet new console
    --framework net6.0`^([12](ch01.xhtml#idm45599658141328))。
- en: The Console App result then details a list of S3 buckets that the AWS user who
    has run the .NET application had, as shown in [Figure 1-18](#Figure-1-9).
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台应用程序的结果详细列出了运行 .NET 应用程序的 AWS 用户拥有的 S3 存储桶列表，如 [图 1-18](#Figure-1-9) 所示。
- en: '![doac 0118](assets/doac_0118.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![doac 0118](assets/doac_0118.png)'
- en: Figure 1-18\. Async listing buckets
  id: totrans-183
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-18\. 异步列出存储桶
- en: Note
  id: totrans-184
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: You can also watch a walk-through of building this S3 Console Application from
    scratch on [O’Reilly](https://oreil.ly/itGcO) or [YouTube](https://youtu.be/DGI_Vd04DpM).
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以观看关于从头开始构建此 S3 控制台应用程序的视频教程，地址为 [O’Reilly](https://oreil.ly/itGcO) 或 [YouTube](https://youtu.be/DGI_Vd04DpM)。
- en: A follow-up step to this Console Application would be to extend the functionality
    to create buckets and not just list them, as shown in this [AWS tutorial](https://oreil.ly/jKBKl)
    for the AWS SDK for .NET.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 此控制台应用程序的后续步骤是扩展功能，不仅列出存储桶，还可以创建存储桶，如 AWS SDK for .NET 的此 [AWS 教程](https://oreil.ly/jKBKl)
    所示。
- en: Next, let’s wrap up everything covered in this chapter.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们总结本章涵盖的所有内容。
- en: Conclusion
  id: totrans-188
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Cloud computing is a crucial driver of innovation in technology because it opens
    up more efficient ways to work.^([13](ch01.xhtml#idm45599658130560)) By leveraging
    near-infinite resources and cloud native managed services, developers can enhance
    their productivity by focusing on the problem at hand versus issues unrelated
    to building a solution, like systems administration. This chapter covered how
    to start working with Amazon Cloud Services, first using a CloudShell, then moving
    to a full-fledged Visual Studio code environment.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 云计算是技术创新的关键驱动因素，因为它开启了更高效的工作方式^([13](ch01.xhtml#idm45599658130560))。通过利用几乎无限的资源和云原生托管服务，开发人员可以通过专注于问题本身而非与构建解决方案无关的问题（如系统管理），从而提高生产力。本章介绍了如何使用云外壳开始使用亚马逊云服务，首先使用
    CloudShell，然后转移到完整的 Visual Studio 代码环境。
- en: The Visual Studio environment benefits from the AWS Toolkit, which has advanced
    features for interacting with the AWS Cloud. The AWS SDK is available directly
    inside Visual Studio via the NuGet package manager. The AWS SDK allows for straightforward
    integration into Visual Studio solutions like Console Applications. We used the
    AWS SDK to build out Console Applications with low-level services like AWS S3
    and high-level AI APIs like AWS Comprehend.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio环境受益于AWS Toolkit，该工具包具有与AWS Cloud交互的高级功能。AWS SDK可以直接通过NuGet软件包管理器在Visual
    Studio中使用。AWS SDK允许直接集成到像控制台应用程序这样的Visual Studio解决方案中。我们使用AWS SDK构建了利用AWS S3等低级服务和AWS
    Comprehend等高级AI API的控制台应用程序。
- en: A recommended next step for readers is to view the critical thinking discussion
    questions to reflect on how you could leverage the full power of AWS. You can
    take these questions and discuss them with your team or a coworker learning AWS.
    Additionally, several challenge exercise suggestions below serve as good practice
    for building AWS services that target .NET 6\. Some of these services are not
    covered in detail yet, so you are welcome to skip them until they are covered
    in later chapters.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 对读者的推荐下一步是查看批判性思维讨论问题，反思如何利用AWS的全部功能。您可以使用这些问题与团队或正在学习AWS的同事讨论。此外，下面的几个挑战练习建议也是构建针对.NET
    6的AWS服务的良好实践。其中一些服务尚未详细介绍，因此您可以在稍后的章节中跳过它们。
- en: Next up, in [Chapter 2](ch02.xhtml#Chapter2), we cover AWS Core Services. These
    include AWS Storage, EC2 Compute, and services like DynamoDB. These services are
    the foundation for building cloud native applications that leverage the power
    of the .NET ecosystem.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在[第2章](ch02.xhtml#Chapter2)，我们将介绍AWS核心服务。这些包括AWS存储、EC2计算以及像DynamoDB之类的服务。这些服务是构建利用.NET生态系统强大功能的云原生应用程序的基础。
- en: Critical Thinking Discussion Questions
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 批判性思维讨论问题
- en: What are the key differences between using Bash versus PowerShell in the AWS
    Cloudshell?
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在AWS Cloudshell中使用Bash与PowerShell有哪些关键区别？
- en: When would it be advantageous to use PowerShell versus Bash and vice versa?
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 何时使用PowerShell而不是Bash以及反之，将会带来什么优势？
- en: How could mastering the command-line `dotnet` tools improve productivity?
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何通过掌握命令行工具`dotnet`来提高生产力？
- en: Could the AWS Toolkit for Visual Studio benefit even nondevelopers in your organization,
    e.g., the operations team? Why or why not?
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS Toolkit for Visual Studio对您的组织中的非开发人员，如运营团队，是否有好处？为什么？
- en: What are the advantages of prototyping C# web services by deploying right from
    Visual Studio?
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用从Visual Studio直接部署的方法原型化C# Web服务有什么优势？
- en: Challenge Exercises
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 挑战练习
- en: Build a C# or an F# Console App and deploy to AWS CloudShell. Consider how the
    unique properties of a cloud-based development environment could help you automate
    workflows on the AWS Cloud, considering they don’t require API keys and are available
    without needing to deploy to AWS compute services to run.
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建一个C#或F#控制台应用程序并部署到AWS CloudShell。考虑云端开发环境的独特属性如何帮助您在AWS云上自动化工作流程，考虑到它们不需要API密钥，而且可以在不需要部署到AWS计算服务的情况下使用。
- en: Refer to the [AWS CDK](https://oreil.ly/EKZqZ)^([14](ch01.xhtml#idm45599658100944))
    in C# documentation and create an S3 bucket via CDK.
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参考AWS CDK文档（C#）并通过CDK创建一个S3存储桶。
- en: Build and deploy an Elastic Beanstalk application using Visual Studio and the
    [AWS Toolkit for Visual Studio Code](https://oreil.ly/yWme7).
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Visual Studio和[AWS Toolkit for Visual Studio Code](https://oreil.ly/yWme7)构建和部署一个Elastic
    Beanstalk应用程序。
- en: Install one of the 600+ packages available for [AWS with NuGet inside of Visual
    Studio](https://oreil.ly/82yRo).
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Visual Studio中使用NuGet安装600多个可用的AWS包之一。
- en: Create a hello world AWS Lambda function using the AWS Console in any supported
    language, then invoke it via VS Code and the AWS Toolkit for Visual Studio Code.
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用AWS控制台创建一个hello world AWS Lambda函数，然后通过VS Code和AWS Toolkit for Visual Studio
    Code调用它。
- en: ^([1](ch01.xhtml#idm45599667298000-marker)) You can read more about EFS and
    spot instances in Chapter 6 in [*Python for DevOps*](https://learning.oreilly.com/library/view/python-for-devops/9781492057680/ch06.xhtml)
    (O’Reilly).
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch01.xhtml#idm45599667298000-marker)) 您可以在《Python for DevOps》（O’Reilly）的第6章中详细了解EFS和spot实例。
- en: ^([2](ch01.xhtml#idm45599668321152-marker)) The [AWS whitepaper “Developing
    and Deploying .NET Applications on AWS”](https://oreil.ly/Y2dEQ) explains AWS
    Lambda’s mechanisms.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch01.xhtml#idm45599668321152-marker)) AWS白皮书“在AWS上开发和部署.NET应用程序”解释了AWS
    Lambda的机制。
- en: ^([3](ch01.xhtml#idm45599666833136-marker)) You can read more detail about how
    AWS sees cloud computing in their [“Overview of Amazon Web Services” whitepaper](https://oreil.ly/aPuLH).
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: ^([3](ch01.xhtml#idm45599666833136-marker)) 您可以在他们的[“Amazon Web Services概述”白皮书](https://oreil.ly/aPuLH)中详细了解AWS对云计算的看法。
- en: ^([4](ch01.xhtml#idm45599666815792-marker)) The AWS Identity and Access Management
    guide has a detailed list of [*https://oreil.ly/x90WL*](https://oreil.ly/x90WL)
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: ^([4](ch01.xhtml#idm45599666815792-marker)) AWS身份和访问管理指南列有详细的列表[*https://oreil.ly/x90WL*](https://oreil.ly/x90WL)。
- en: ^([5](ch01.xhtml#idm45599666813856-marker)) To create an admin IAM user, follow
    the [official AWS guide](https://oreil.ly/ogmRn).
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: ^([5](ch01.xhtml#idm45599666813856-marker)) 要创建管理员IAM用户，请参阅[官方AWS指南](https://oreil.ly/ogmRn)。
- en: ^([6](ch01.xhtml#idm45599666810048-marker)) See the [AWS multifactor authentication
    guide](https://oreil.ly/6a24r).
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: ^([6](ch01.xhtml#idm45599666810048-marker)) 参见[AWS多因素认证指南](https://oreil.ly/6a24r)。
- en: ^([7](ch01.xhtml#idm45599666801440-marker)) You can read more about the AWS
    Management Console in the [in the official documentation](https://oreil.ly/UT4d1).
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: ^([7](ch01.xhtml#idm45599666801440-marker)) 您可以在[官方文档中](https://oreil.ly/UT4d1)详细了解AWS管理控制台。
- en: ^([8](ch01.xhtml#idm45599668457424-marker)) Additionally, there are links to
    famous .NET developers like [Norm Johanson](https://oreil.ly/P9DOO), [François
    Bouteruche](https://oreil.ly/AcSmE), and [Steve Roberts](https://oreil.ly/rV9m7).
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: ^([8](ch01.xhtml#idm45599668457424-marker)) 此外，还有一些链接指向著名的.NET开发者，如[Norm Johanson](https://oreil.ly/P9DOO)、[François
    Bouteruche](https://oreil.ly/AcSmE)和[Steve Roberts](https://oreil.ly/rV9m7)。
- en: ^([9](ch01.xhtml#idm45599667273312-marker)) There is a detailed [user guide](https://oreil.ly/XmZuZ)
    to interacting with the AWS Command Line Interface.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: ^([9](ch01.xhtml#idm45599667273312-marker)) 有一份详细的[用户指南](https://oreil.ly/XmZuZ)，介绍如何与AWS命令行界面交互。
- en: ^([10](ch01.xhtml#idm45599658279568-marker)) There is a [detailed set-up guide](https://oreil.ly/9ikNn)
    available for AWS Toolkit for Visual Studio.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: ^([10](ch01.xhtml#idm45599658279568-marker)) 有一份详细的[AWS Toolkit for Visual Studio设置指南](https://oreil.ly/9ikNn)可供参考。
- en: ^([11](ch01.xhtml#idm45599658273904-marker)) There is a [detailed guide](https://oreil.ly/4kG24)
    about the concept of principle of least privilege (PLP) in the AWS documentation.
    The core idea of PLP is only to give out permissions when needed.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: ^([11](ch01.xhtml#idm45599658273904-marker)) 在AWS文档中有一份关于最小权限原则（PLP）概念的[详细指南](https://oreil.ly/4kG24)。PLP的核心思想是只在需要时授予权限。
- en: ^([12](ch01.xhtml#idm45599658141328-marker)) Other services like AWS Lambda
    also offer a convenient way to [create an application from the command line](https://oreil.ly/cagaL).
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: ^([12](ch01.xhtml#idm45599658141328-marker)) AWS Lambda等其他服务也提供了一个便捷的方式来[通过命令行创建应用程序](https://oreil.ly/cagaL)。
- en: ^([13](ch01.xhtml#idm45599658130560-marker)) In part, Amazon is the leader in
    cloud computing due to its culture, which describes itself in its leadership principles.
    These principles include frugality, customer obsession, and invent and simplify,
    among a few. You can read more about [Amazon’s leadership principles](https://www.amazon.jobs/en/principles).
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: ^([13](ch01.xhtml#idm45599658130560-marker)) 亚马逊在云计算领域的领导地位部分归因于其文化，其领导原则包括节俭、客户至上、发明和简化等。您可以在[亚马逊的领导原则](https://www.amazon.jobs/en/principles)中了解更多。
- en: ^([14](ch01.xhtml#idm45599658100944-marker)) AWS CDK is a library that automates
    the deployment of resources in AWS.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: ^([14](ch01.xhtml#idm45599658100944-marker)) AWS CDK是一个库，自动化部署AWS资源。
