- en: 'Unity Lab #6 Scene Navigation'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Unity实验室#6 场景导航
- en: In the last Unity Lab, you created a scene with a floor (a plane) and a player
    (a sphere nested under a cylinder), and you used a NavMesh, a NavMesh Agent, and
    raycasting to get your player to follow your mouse clicks around the scene.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个Unity实验室中，你创建了一个带有地板（一个平面）和玩家（一个球体嵌套在圆柱体下）的场景，并使用了NavMesh、NavMesh Agent和射线投射让你的玩家根据鼠标点击在场景中移动。
- en: Now we’ll pick up where the last Unity Lab left off. The goal of these labs
    is to get you familiar with Unity’s **pathfinding and navigation system**, a sophisticated
    AI system that lets you create characters that can find their way around the worlds
    you create. In this lab, you’ll use Unity’s navigation system to make your GameObjects
    move themselves around a scene.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将继续上一个Unity实验室的工作。这些实验室的目标是让你熟悉Unity的**寻路和导航系统**，这是一个复杂的AI系统，可以让你创建能够在你创建的世界中找到路的角色。在这个实验室中，你将使用Unity的导航系统使你的游戏对象在场景中自动移动。
- en: 'Along the way you’ll learn about useful tools: you’ll create a more complex
    scene and bake a NavMesh that lets an agent navigate it, you’ll create static
    and moving obstacles, and most importantly, you’ll **get more practice writing
    C# code**.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在此过程中，你将学习到一些有用的工具：你将创建一个更复杂的场景，并烘焙一个NavMesh以让一个代理人在其中导航，你将创建静态和移动障碍物，而且最重要的是，你将**得到更多编写C#代码的实践**。
- en: Let’s pick up where the last Unity Lab left off
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让我们继续上一个Unity实验室的工作
- en: In the last Unity Lab, you created a player out of a sphere head nested under
    a cylinder body. Then you added a NavMesh Agent component to move the player around
    the scene, using raycasting to find the point on the floor that the player clicked.
    In this lab, you’ll pick up where the last one left off. You’ll add GameObjects
    to the scene, including stairs and obstacles so you can see how Unity’s navigation
    AI handles them. Then you’ll add a moving obstacle to really put that NavMesh
    Agent through its paces.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个Unity实验室中，你通过一个球形头部嵌套在圆柱体身体下创建了一个玩家。然后，你添加了NavMesh Agent组件，用于使玩家在场景中移动，使用射线投射来找到玩家点击的地板上的点。在这个实验室中，你将继续上一个实验室的工作。你将向场景中添加游戏对象，包括楼梯和障碍物，以便观察Unity的导航AI如何处理它们。然后，你将添加一个移动障碍物，真正测试NavMesh
    Agent的性能。
- en: So go ahead and **open the Unity project** that you saved at the end of the
    last Unity Lab. If you’ve been saving up the Unity Labs to do them back to back,
    then you’re probably ready to jump right in! But if not, take a few minutes and
    flip through the last Unity Lab again—and also look through the code that you
    wrote for it.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，打开你在上一个Unity实验室结尾保存的Unity项目。如果你一直在保存Unity实验室以便一口气做完，那么你现在可能已经准备好立即开始了！但如果不是，请花几分钟再翻阅一下上一个Unity实验室，并查看你为其编写的代码。
- en: '![Images](assets/pg652.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg652.png)'
- en: Note
  id: totrans-8
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: If you’re using our book because you’re preparing to be a professional developer,
    being able to go back and read and refactor the code in your old projects is a
    really important skill—and not just for game development!
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在使用我们的书籍，因为你正在准备成为一名专业开发者，那么能够回顾和重构你旧项目中的代码是一个非常重要的技能——不仅仅是为了游戏开发！
- en: Add a platform to your scene
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向你的场景添加一个平台
- en: 'Let’s do a little experimentation with Unity’s navigation system. To help us
    do that, we’ll add more GameObjects to build a platform with stairs, a ramp, and
    an obstacle. Here’s what it will look like:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一些对Unity导航系统的实验来进行一些试验。为了帮助我们做到这一点，我们将添加更多的游戏对象来建立一个带有楼梯、斜坡和障碍物的平台。这是它将会看起来的样子：
- en: '![Images](assets/pg653-1.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg653-1.png)'
- en: It’s a little easier to see what’s going on if we switch to an **isometric**
    view, or a view that doesn’t show perspective. In a **perspective** view, objects
    that are further away look small, while closer objects look large. In an isometric
    view, objects are always the same size no matter how far away they are from the
    camera.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们切换到**等距**视图或者不显示透视的视图，更容易看清楚正在发生的事情。在**透视**视图中，远处的物体看起来较小，而近处的物体看起来较大。在等距视图中，无论物体距离摄像机有多远，它们始终保持相同大小。
- en: '![Images](assets/pg653-2.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg653-2.png)'
- en: Note
  id: totrans-15
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**Sometimes it’s easier to see what’s going on in your scene if you switch
    to an isometric view. You can always reset the layout if you lose track of the
    view.**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**有时，如果切换到等距视图，你能更容易地看到场景中正在发生的事情。如果你迷失了视角，你可以随时重置布局。**'
- en: '**Add 10 GameObjects** to your scene. **Create a new material called *Platform***
    in your Materials folder with albedo color CC472F, and add it to all of the GameObjects
    except for Obstacle, which uses a **new material called *8 Ball*** with the 8
    Ball Texture map from the first Unity Lab. This table shows their names, types,
    and positions:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**将 10 个游戏对象** 添加到你的场景中。在你的材质文件夹中创建一个名为 *Platform* 的新材质，使用Albedo颜色 CC472F，并将其添加到除了障碍物之外的所有游戏对象上，障碍物则使用来自第一个
    Unity 实验室的 **名为 *8 Ball* 的新材质**，并且带有 8 Ball 纹理映射。这张表展示了它们的名称、类型和位置：'
- en: '![Images](assets/pg653-3.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![Images](assets/pg653-3.png)'
- en: Use bake options to make the platform walkable
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用烘焙选项使平台可行走
- en: Use Shift-click to select all of the new GameObjects that you added to the scene,
    then use Control-click (or Command-click on a Mac) to deselect Obstacle. Go to
    the Navigation window and click the Object button, then **make them all walkable
    by** checking Navigation Static and setting the Navigation Area to Walkable. **Make
    the Obstacle GameObject not walkable** by selecting it, clicking Navigation Static,
    and setting Navigation Area to Not Walkable.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Shift+点击选择你在场景中添加的所有新游戏对象，然后使用 Control+点击（或者在 Mac 上使用 Command+点击）取消选择障碍物。转到导航窗口并点击对象按钮，然后
    **通过** 勾选导航静态并设置导航区域为可行走来 **使它们全部可以行走**。通过选择障碍物，点击导航静态，并将导航区域设置为不可行走来 **使障碍物游戏对象不可行走**。
- en: '![Images](assets/pg654-1.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![Images](assets/pg654-1.png)'
- en: 'Now follow the same steps that you used before to **bake the NavMesh**: click
    the Bake button at the top of the Navigation window to switch to the Bake view,
    then click the Bake button at the bottom.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在按照之前使用的相同步骤来 **烘焙NavMesh**：点击导航窗口顶部的烘焙按钮切换到烘焙视图，然后点击底部的烘焙按钮。
- en: '![Images](assets/pg654-2.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![Images](assets/pg654-2.png)'
- en: It looks like it worked! The NavMesh now appears on top of the platform, and
    there’s space around the obstacle. Try running the game. Click on top of the platform
    and see what happens.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来好像奏效了！NavMesh 现在显示在平台的顶部，并且障碍物周围有空间。试着运行游戏。点击平台的顶部看看会发生什么。
- en: Hmm, hold on. Things aren’t working the way we expected them to. When you click
    on top of the platform, the player goes ***under*** it. If you look closely at
    the NavMesh that’s displayed when you’re viewing the Navigation window, you’ll
    see that it also has space around the stairs and ramp, but doesn’t actually include
    either of them in the NavMesh. The player has no way to get to the point you clicked
    on, so the AI gets it as close as it can.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，等等。事情并没有按我们预期的方式运行。当你点击平台顶部时，玩家却在其***下方***。如果你仔细观察在导航窗口查看时显示的NavMesh，你会发现它周围有楼梯和坡道的空间，但实际上并没有将它们包含在NavMesh中。玩家无法到达你点击的点，所以AI尽其所能靠近该点。
- en: '![Images](assets/pg654-3.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![Images](assets/pg654-3.png)'
- en: Include the stairs and ramp in your NavMesh
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在你的NavMesh中包括楼梯和坡道
- en: An AI that couldn’t get your player up or down a ramp or stairs wouldn’t be
    very intelligent. Luckily, Unity’s pathfinding system can handle both of those
    cases. We just need to make a few small adjustments to the options when we bake
    the NavMesh. Let’s start with the stairs. Go back to the Bake window and notice
    that the default value of Step Height is 0.4\. Take a careful look at the measurements
    for your steps—they’re all 0.5 units tall. So to tell the navigation system to
    include steps that are 0.5 units, **change the Step Height to 0.5**. You’ll see
    the picture of the step in the diagram get taller, and the number above it change
    from the default 0.4 value to 0.5.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 一个不能将你的玩家上下坡或楼梯的AI不会很智能。幸运的是，Unity 的路径finding系统可以处理这两种情况。我们只需要在烘焙NavMesh时对选项进行一些小的调整。让我们从楼梯开始。返回到烘焙窗口并注意步高的默认值是
    0.4。仔细查看你的台阶测量值 —— 它们都是 0.5 单位高。因此，为了告诉导航系统包括高度为 0.5 单位的台阶，**将步高改为 0.5**。你会看到图表中的台阶图片变高，上面的数字从默认的
    0.4 改变为 0.5。
- en: We still need to include the ramp in the NavMesh. When you created the GameObjects
    for the platform, you gave the ramp an X rotation of –46, which means that it’s
    a 46-degree incline. The Max Slope setting defaults to 45, which means it will
    only include ramps, hills, or other slopes with at most a 45-degree incline. So
    **change Max Slope to 46**, then **bake the NavMesh again**. Now it will include
    the ramp and stairs.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们仍然需要将坡道包含在NavMesh中。当你为平台创建游戏对象时，将坡道的 X 旋转设置为 -46，这意味着它是一个46度的斜坡。最大坡度设置默认为45，这意味着它只会包括最多45度的坡道、山坡或其他斜坡。所以
    **将最大坡度更改为 46**，然后 **再次烘焙NavMesh**。现在它将包括坡道和楼梯。
- en: '![Images](assets/pg655.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![Images](assets/pg655.png)'
- en: Start your game and test out your new NavMesh changes.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 启动你的游戏，测试一下你的新NavMesh更改。
- en: Fix height problems in the NavMesh
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 修复NavMesh中的高度问题
- en: Now that we’ve got control of the camera, we can get a good look at what’s going
    on under the platform—and something doesn’t look quite right. Start your game,
    then rotate the camera and zoom in so you can get a clear view of the obstacle
    sticking out under the platform. Click the floor on one side of the obstacle,
    then the other. It looks like the player is going right through the obstacle!
    And it goes right through the end of the ramp, too.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们控制了摄像机，可以清楚地看到平台下面发生了什么问题。启动游戏，然后旋转摄像机并放大视角，以清晰查看障碍物在平台下方的情况。点击障碍物一侧的地面，然后点击另一侧。看起来玩家直接穿过了障碍物！而且还穿过了坡道的尽头。
- en: '![Images](assets/pg657-1.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg657-1.png)'
- en: But if you move the player back to the top of the platform, it avoids the obstacle
    just fine. What’s going on?
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果你把玩家移回平台顶部，它会很好地避开障碍物。出了什么问题？
- en: Look closely at the parts of the NavMesh above and below the obstacle. Notice
    any differences between them?
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细观察障碍物上下的NavMesh部分。注意它们之间有什么区别吗？
- en: '![Images](assets/pg657-2.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg657-2.png)'
- en: Go back to the part of the last lab where you set up the NavMesh Agent component—specifically,
    the part where you set the Height to 3\. Now you just need to do the same for
    the NavMesh. Go back to the Bake options in the Navigation window and **set the
    Agent Height to 3, then bake your mesh again**.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 回到上一个实验的部分，那里你设置了NavMesh Agent组件，具体来说是设置了高度为3。现在你只需要对NavMesh做同样的设置。返回导航窗口的烘焙选项，**将代理高度设置为3，然后重新烘焙你的网格**。
- en: '![Images](assets/pg657-3.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg657-3.png)'
- en: This created a gap in the NavMesh under the obstacle and expanded the gap under
    the ramp. Now the player doesn’t hit either the obstacle or the ramp when moving
    around under the platform.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这在障碍物下面的NavMesh中创建了一个缺口，并扩展了坡道下面的空隙。现在玩家在平台下移动时既不会撞到障碍物也不会撞到坡道。
- en: Add a NavMesh Obstacle
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加一个NavMesh障碍物
- en: 'You already added a static obstacle in the middle of your platform: you created
    a stretched-out capsule and marked it non-walkable, and when you baked your NavMesh
    it had a hole around the obstacle so the player has to walk around it. What if
    you want an obstacle that moves? Try moving the obstacle—the NavMesh doesn’t change!
    It still has a hole *where the obstacle was*, not where it currently is. If you
    bake it again, it just creates a hole around the obstacle’s new location. To add
    an obstacle that moves, add a **NavMesh Obstacle component** to a GameObject.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经在平台中间添加了一个静态障碍物：你创建了一个拉长的胶囊并标记为不可行走，当你烘焙NavMesh时，围绕障碍物有一个空洞，所以玩家必须绕过它。如果你想要一个移动的障碍物呢？试试移动障碍物——NavMesh不会改变！它仍然在障碍物*原来的位置*创建了一个空洞，而不是它当前所在的位置。如果重新烘焙，它只会在障碍物新位置周围创建一个空洞。要添加一个移动的障碍物，给游戏对象添加一个**NavMesh障碍组件**。
- en: Let’s do that right now. **Add a Cube to your scene** with position (–5.75,
    1, –1) and scale (2, 2, 0.25). Create a new material for it with a dark gray color
    (333333) and name your new GameObject *Moving Obstacle*. This will act as a kind
    of gate at the bottom of the ramp that can move up out of the way of the player
    or down to block it.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在就来做吧。**向场景中添加一个立方体**，位置为（-5.75, 1, -1），缩放为（2, 2, 0.25）。为它创建一个新的材质，颜色设为深灰色（333333），并命名你的新游戏对象为*移动障碍物*。这将充当坡道底部的一种门，可以向上移动以让玩家通过，或向下以阻挡玩家。
- en: '![Images](assets/pg658-1.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg658-1.png)'
- en: We just need one more thing. Click the Add Component button at the bottom of
    the Inspector window and choose Navigation >> Nav Mesh Obstacle to **add a NavMesh
    Obstacle component** to your Cube GameObject.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只需要再做一件事。在检视器窗口底部点击“添加组件”按钮，选择导航 >> Nav Mesh Obstacle，为你的立方体游戏对象**添加NavMesh障碍组件**。
- en: '![Images](assets/pg658-2.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg658-2.png)'
- en: If you leave all of the options at their default settings, you get an obstacle
    that the NavMesh Agent can’t get through. Instead, the Agent hits it and stops.
    **Check the Carve box**—this causes the obstacle to ***create a moving hole in
    the NavMesh*** that follows the GameObject. Now your Moving Obstacle GameObject
    can block the player from navigating up and down the ramp. Since the NavMesh height
    is set to 3, if the obstacle is less than 3 units above the floor it will create
    a hole in the NavMesh underneath it. If it goes above that height, the hole disappears.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你保留所有选项的默认设置，你将得到一个 NavMesh 代理无法穿过的障碍物。相反，代理会撞上它并停下来。**勾选雕刻框**——这会导致障碍物***在
    NavMesh 中创建一个随着 GameObject 移动的移动洞口***。现在你的移动障碍物 GameObject 可以阻止玩家在斜坡上下移动。由于 NavMesh
    的高度设置为 3，如果障碍物低于地面 3 单位，它将在其下创建一个 NavMesh 中的洞口。如果它的高度超过这个高度，洞口就会消失。
- en: Note
  id: totrans-48
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**The Unity Manual has thorough—and readable!—explanations for the various
    components. Click the Open Reference button (![Images](assets/pg658-3.png) ) at
    the top of the Nav Mesh Obstacle panel in the Inspector to open up the manual
    page. Take a minute to read it—it does a great job of explaining the options.**'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**Unity 手册详细且易读地解释了各种组件。点击检视器中 Nav Mesh 障碍物面板顶部的打开参考按钮（![Images](assets/pg658-3.png)）以打开手册页面。花点时间阅读它——它很好地解释了这些选项。**'
- en: Add a script to move the obstacle up and down
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加一个脚本来上下移动障碍物
- en: This script uses the **OnMouseDrag** method. It works just like the OnMouseDown
    method you used in the last lab, except that it’s called when the GameObject is
    dragged.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本使用**OnMouseDrag**方法。它的工作方式类似于你在上一个实验中使用的OnMouseDown方法，只是当 GameObject 被拖动时调用它。
- en: '![Images](assets/pg659-1.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![Images](assets/pg659-1.png)'
- en: Note
  id: totrans-53
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**The first if statement keeps the block from moving below the floor, and the
    second keeps it from moving too high. Can you figure out how they work?**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**第一个 if 语句阻止块移动到地板下方，第二个阻止它移动太高。你能搞清楚它们是如何工作的吗？**'
- en: '**Drag your script onto the Moving Obstacle GameObject** and run the game—uh-oh,
    something’s wrong. You can click and drag the obstacle up and down, but it also
    moves the player. Fix this by **adding a tag** to the GameObject.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**将你的脚本拖放到移动障碍物 GameObject 上**并运行游戏——哎呀，出了些问题。你可以点击并拖动障碍物上下移动，但这也会移动玩家。通过**给
    GameObject 添加标签**来修复这个问题。'
- en: '![Images](assets/pg659-3.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![Images](assets/pg659-3.png)'
- en: 'Then **modify your MoveToClick script** to check for the tag:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 然后**修改你的 MoveToClick 脚本**以检查标签：
- en: '![Images](assets/pg659-2.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![Images](assets/pg659-2.png)'
- en: 'Run your game again. If you click on the obstacle you can drag it up and down,
    and it stops when it hits the floor or gets too high. Click anywhere else, and
    the player moves just like before. Now you can **experiment with the NavMesh Obstacle
    options** (this is easier if you reduce the Speed in the Player’s NavMesh Agent):'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 再次运行你的游戏。如果你点击障碍物，你可以拖动它上下移动，并且当它碰到地面或者高度过高时会停下来。在其他任何地方点击，玩家会像以前一样移动。现在你可以**尝试使用
    NavMesh 障碍物选项进行实验**（如果你减少玩家的 NavMesh 代理速度会更容易）：
- en: Start your game. Click on *Moving Obstacle* in the Hierarchy window and **uncheck
    the Carve option**. Move your player to the top of the ramp, then click at the
    bottom of the ramp—the player will bump into the obstacle and stop. Drag the obstacle
    up, and the player will continue moving.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始你的游戏。在层级窗口中点击*移动障碍物*，然后**取消勾选雕刻选项**。将你的玩家移到斜坡顶部，然后点击斜坡底部—玩家将会撞到障碍物并停下。拖动障碍物向上移动，玩家将继续移动。
- en: Now **check Carve** and try the same thing. As you move the obstacle up and
    down, the player will recalculate its route, taking the long way around to avoid
    the obstacle if it’s down, and changing course in real time as you move the obstacle.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在**勾选雕刻框**并尝试同样的操作。当你上下移动障碍物时，玩家将重新计算其路线，绕开障碍物的长路，实时改变航线。
- en: Get creative!
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发挥创意！
- en: 'Can you find ways to improve your game and get practice writing code? Here
    are some ideas to help you get creative:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 你能找到改进游戏并练习编写代码的方法吗？以下是一些创意建议帮助你：
- en: Build out the scene—add more ramps, stairs, platforms, and obstacles. Find creative
    ways to use materials. Search the web for new texture maps. Make it look interesting!
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展场景——添加更多的斜坡、楼梯、平台和障碍物。寻找使用材料的创意方式。搜索网络以找到新的纹理地图。让它看起来有趣！
- en: Make the NavMesh Agent move faster when the player holds down the Shift key.
    Search for “KeyCode” in the Scripting Reference to find the left/right Shift key
    codes.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当玩家按住 Shift 键时使 NavMesh 代理移动更快。在脚本参考中搜索“KeyCode”以找到左/右 Shift 键的代码。
- en: You used OnMouseDown, Rotate, RotateAround, and Destroy in the last lab. See
    if you can use them to create obstacles that rotate or disappear when you click
    them.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你在上次实验中使用了OnMouseDown、Rotate、RotateAround和Destroy。看看你能否使用它们创建旋转或在点击时消失的障碍物。
- en: We don’t actually have a game just yet, just a player navigating around a scene.
    Can you find a way to **turn your program into a timed obstacle course**?
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们实际上还没有一个游戏，只是一个在场景中导航的玩家。你能找到方法**把你的程序变成一个计时障碍课程**吗？
- en: '***You already know enough about Unity to start building interesting games—and
    that’s a great way to get practice so you can keep getting better as a developer.***'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '***你已经掌握了足够的Unity知识来开始构建有趣的游戏——这是一个很好的练习方式，让你可以不断提高作为开发者的水平。***'
- en: '**This is your chance to experiment. Using your creativity is a really effective
    way to quickly build up your coding skills.**'
  id: totrans-69
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**这是你实验的机会。发挥你的创造力是快速提升编码技能的有效方式。**'
- en: 'Downloadable exercise: Animal match boss battle'
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可下载的练习：动物匹配老板战
- en: '![Images](assets/com25.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/com25.png)'
- en: If you’ve played a lot of video games (and we’re pretty sure that you have!),
    then you’ve had to play through a whole lot of boss battles—those fights at the
    end of a level or section where you face off against an opponent that’s bigger
    and stronger than what you’ve seen so far. We have one last challenge for you
    before the end of the book—consider it the *Head First C#* boss battle.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你玩过很多视频游戏（我们非常确定你玩过！），那么你一定经历过很多老板战——那些在关卡或章节结束时，你要面对比你之前见过的更大更强的对手的战斗。在本书结束前，我们为你准备了最后一个挑战——把它看作是*Head
    First C#*的老板战。
- en: In [#start_building_with_chash_build_somethin](ch01.html#start_building_with_chash_build_somethin)
    you built an animal matching game. It was a great start, but it’s missing... something.
    Can you figure out how to turn your animal matching game into a memory game? Go
    to our GitHub page and download the PDF for this project—or if you want to play
    this boss battle in Hard mode, just dive right in and see if you can do it on
    your own.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在[#start_building_with_chash_build_somethin](ch01.html#start_building_with_chash_build_somethin)中，你构建了一个动物匹配游戏。这是一个很好的开始，但缺少了一些东西。你能想出如何将你的动物匹配游戏变成记忆游戏吗？去我们的GitHub页面下载这个项目的PDF文件——或者如果你想在困难模式下进行这场老板战斗，就直接开始尝试看看你是否能独自完成。
- en: '![Images](assets/pg661.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg661.png)'
- en: '**There’s so much more downloadable material! The book may be over, but we
    can keep the learning going. We’ve put together even more downloadable material
    on important C# topics. We’ve also continued the Unity learning path with additional
    Unity Labs and even a Unity boss battle.**'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**这里有更多的可下载材料！书籍已经结束，但我们可以继续学习。我们为重要的C#主题准备了更多可下载材料。我们还通过额外的Unity实验室甚至是一个Unity老板战继续Unity学习路径。**'
- en: '**We hope you’ve learned a lot—and even more importantly, we hope your C# learning
    journey is just beginning. Great developers never stop learning.**'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**我们希望你学到了很多——更重要的是，我们希望你的C#学习之旅才刚刚开始。优秀的开发者永远不会停止学习。**'
- en: '**Head to our GitHub page for more: [https://github.com/head-first-csharp/fourth-edition](https://github.com/head-first-csharp/fourth-edition).**'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**请访问我们的GitHub页面获取更多信息：[https://github.com/head-first-csharp/fourth-edition](https://github.com/head-first-csharp/fourth-edition)。**'
- en: Thank you for reading our book!
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 感谢阅读我们的书！
- en: Pat yourself on the back—this is a real accomplishment! We hope this journey
    has been as rewarding for you as it has been for us, and that you’ve enjoyed all
    of the projects and the code that you’ve written along the way.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 为自己喝彩吧——这是一个真正的成就！我们希望这段旅程对你和我们一样有意义，并且希望你享受沿途编写的所有项目和代码。
- en: But wait, there’s more! Your journey’s just begun...
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 但是等等，还有更多！你的旅程才刚刚开始……
- en: 'In some chapters we gave you additional projects that you could download from
    our GitHub page: [https://github.com/head-first-csharp/fourth-edition](https://github.com/head-first-csharp/fourth-edition).'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在一些章节中，我们提供了一些额外的项目，你可以从我们的GitHub页面下载：[https://github.com/head-first-csharp/fourth-edition](https://github.com/head-first-csharp/fourth-edition)。
- en: '![Images](assets/pg662-1.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg662-1.png)'
- en: Note
  id: totrans-83
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注
- en: Check out these great C# and .Net resources!
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 检查这些优秀的C#和.NET资源！
- en: 'Get connected with the .NET Developer Community: [https://dotnet.microsoft.com/platform/community](https://dotnet.microsoft.com/platform/community).'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到.NET开发者社区：[https://dotnet.microsoft.com/platform/community](https://dotnet.microsoft.com/platform/community)。
- en: 'Watch live streams and chat with the team that builds .NET and C#: [https://dotnet.microsoft.com/platform/community/standup](https://dotnet.microsoft.com/platform/community/standup).'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 观看直播和与构建.NET和C#的团队交流：[https://dotnet.microsoft.com/platform/community/standup](https://dotnet.microsoft.com/platform/community/standup).
- en: 'Learn more in the docs: [https://docs.microsoft.com/en-us/dotnet](https://docs.microsoft.com/en-us/dotnet).'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在文档中了解更多信息：[https://docs.microsoft.com/en-us/dotnet](https://docs.microsoft.com/en-us/dotnet).
- en: The GitHub page contains **lots of additional material**. There’s still more
    to learn, and more projects to do!
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub页面包含**大量额外资料**。仍有更多知识可以学习，更多项目可以实施！
- en: '***Keep your C# learning journey going*** by downloading PDFs that continue
    the *Head First C#* story and cover **essential C# topics**, including:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '***继续你的C#学习之旅***，下载PDF继续*Head First C#*的故事，并涵盖**C#的基本主题**，包括：'
- en: Event handlers
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事件处理程序
- en: Delegates
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 委托
- en: The MVVM pattern (including a retro arcade game project)
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MVVM模式（包括复古街机游戏项目）
- en: '***...and more!***'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***......还有更多！***'
- en: 'And while you’re there, there’s **more to learn about Unity**. You can download:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在这里时，还有**更多关于Unity的学习**。你可以下载：
- en: PDF versions of all of the Unity Labs in this book
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此书中所有Unity实验室的PDF版本
- en: '***Even more Unity Labs*** that cover physics, collisions, and more!'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***还有更多的Unity实验室***，涵盖物理学、碰撞等内容！'
- en: A **Unity Lab boss battle** to put your Unity development skills to the test
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**Unity实验室的老板战**，以测试你的Unity开发技能
- en: A complete **Unity Lab project** to create a game from the ground up
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个完整的**Unity实验室项目**，从头开始创建游戏
- en: And check out these essential (and amazing!) books by some of our friends and
    colleagues, also published by O’REILLY
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还可以查看这些由我们的朋友和同事撰写的基础（和令人惊叹！）书籍，这些书籍也由O’REILLY出版。
- en: '![Images](assets/pg662-2.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg662-2.png)'
