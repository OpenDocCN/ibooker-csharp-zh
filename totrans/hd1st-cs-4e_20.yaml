- en: 'Appendix A. ASP.NET Core Blazor projects: *Visual Studio for Mac Learner’s
    Guide*'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录 A. ASP.NET Core Blazor 项目：*Visual Studio for Mac 学习指南*
- en: '![Images](assets/pg663.png)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![图像](assets/pg663.png)'
- en: '**Your Mac is a first-class citizen of the C# and .NET world.**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**你的 Mac 是 C# 和 .NET 世界的一流公民。**'
- en: We wrote *Head First C#* with our Mac readers in mind, and that’s why we created
    this special **learner’s guide** just for you. Most projects in this book are
    .NET Core console apps, which work on **both Windows and Mac**. Some chapters
    have a project built with a technology used for desktop Windows apps. This learner’s
    guide has **replacements** for all of those projects—including a *complete replacement
    for [#start_building_with_chash_build_somethin](ch01.html#start_building_with_chash_build_somethin)*—that
    use **C# to create Blazor WebAssembly apps** that run in your browser and are
    equivalent to the Windows apps. You’ll do it all with **Visual Studio for Mac**,
    a great tool for writing code and a **valuable learning tool** for exploring C#.
    Let’s dive right in and get coding!
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在编写 *Head First C#* 时考虑了我们的 Mac 读者，这就是为什么我们为你们专门创建了这个特别的 **学习指南**。本书中的大多数项目都是
    .NET Core 控制台应用程序，可以在 **Windows 和 Mac** 上运行。一些章节有一个使用桌面 Windows 应用程序技术构建的项目。这个学习指南为所有这些项目提供了
    **替代方案**，包括一个 *完整替代 [#start_building_with_chash_build_somethin](ch01.html#start_building_with_chash_build_somethin)*，使用
    **C# 创建 Blazor WebAssembly 应用程序**，这些应用程序在浏览器中运行，与 Windows 应用程序等效。你将使用 **Visual
    Studio for Mac** 来完成所有这些工作，这是一个编写代码的好工具，也是探索 C# 的 **宝贵学习工具**。让我们立即开始编码吧！
- en: Why you should learn C#
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么你应该学习 C#
- en: C# is a simple, modern language that lets you do incredible things. When you
    learn C#, you’re learning more than just a language. C# unlocks the whole world
    of .NET, an incredibly powerful open-source platform for building all sorts of
    applications.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: C# 是一种简单、现代的语言，让你可以做很多令人惊讶的事情。当你学习 C# 时，你不仅仅是在学习一种语言。C# 开启了 .NET 的整个世界，这是一个非常强大的开源平台，用于构建各种应用程序。
- en: Visual Studio is your gateway to C#
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Visual Studio 是你进入 C# 的大门
- en: If you haven’t installed Visual Studio 2019 yet, this is the time to do it.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有安装 Visual Studio 2019，现在就是时候了。
- en: Go to [https://visualstudio.microsoft.com](https://visualstudio.microsoft.com)
    and **download Visual Studio for Mac**. (If it’s already installed, run the Visual
    Studio for Mac Installer to update your installed options.)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 前往 [https://visualstudio.microsoft.com](https://visualstudio.microsoft.com)
    并 **下载 Visual Studio for Mac**。（如果已安装，请运行 Visual Studio for Mac 安装程序以更新已安装的选项。）
- en: Install .NET Core
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 .NET Core
- en: Once you’ve downloaded the Visual Studio for Mac installer, run it to install
    Visual Studio. Make sure the **.NET Core** target is checked.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦下载了 Visual Studio for Mac 安装程序，请运行它以安装 Visual Studio。确保已选中 **.NET Core** 目标。
- en: '![Images](assets/pg664.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![图像](assets/pg664.png)'
- en: Note
  id: totrans-12
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Make sure you’re installing Visual Studio for Mac, and not installing Visual
    Studio Code.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你安装的是 Visual Studio for Mac，而不是 Visual Studio Code。
- en: Note
  id: totrans-14
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Visual Studio Code is an amazing open source, crossplatform code editor, but
    it’s not tailored to .NET development the way Visual Studio is. That’s why we
    can use Visual Studio throughout this book as a tool for learning and exploration.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio Code 是一个令人惊叹的开源、跨平台代码编辑器，但它并不像 Visual Studio 那样专为 .NET 开发量身定制。这就是为什么在本书中我们可以使用
    Visual Studio 作为学习和探索工具。
- en: You can also use Visual Studio for Windows to build Blazor web applications
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你也可以使用 Visual Studio for Windows 来构建 Blazor Web 应用程序
- en: Most of the projects in *Head First C#* are .NET Core console apps, which you
    can create using either macOS or Windows. Some of the chapters also include a
    Windows desktop app project that’s built using Windows Presentation Foundation
    (WPF). Since WPF is a technology that only works with Windows, we wrote this *Visual
    Studio for Mac Learner’s Guide* so you can create equivalent projects on your
    Mac using web technologies—specifically, ASP.NET Core Blazor WebAssembly projects.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*Head First C#* 中的大多数项目都是 .NET Core 控制台应用程序，你可以使用 macOS 或 Windows 创建这些应用程序。有些章节还包括一个使用
    Windows Presentation Foundation (WPF) 构建的 Windows 桌面应用项目。由于 WPF 是一种仅适用于 Windows
    的技术，我们编写了这个 *Visual Studio for Mac 学习指南*，以便你可以使用 Web 技术—具体来说是 ASP.NET Core Blazor
    WebAssembly 项目—在 Mac 上创建等效的项目。'
- en: What if you’re a Windows reader and want to learn to build rich web applications
    using Blazor? Then you’re in luck! ***You can build the projects in this guide
    using Visual Studio for Windows***. Go to the Visual Studio installer and make
    sure that **“ASP.NET and web development” option is checked**. Your IDE screenshots
    won’t exactly match the ones in this guide, but all of the code will be the same.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是Windows用户，并想学习使用Blazor构建丰富的Web应用程序，那么你很幸运！***你可以使用Windows的Visual Studio来完成本指南中的项目***。前往Visual
    Studio安装程序，并确保选择了**“ASP.NET和Web开发”选项**。虽然你的IDE截图可能与本指南中的不完全相同，但所有的代码都是一样的。
- en: Visual Studio is a tool for writing code and exploring C#
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Visual Studio是一个编写代码和探索C#的工具
- en: You could use TextEdit or another text editor to write your C# code, but there’s
    a better way. An **IDE**—that’s short for ***integrated development environment***—is
    a text editor, visual designer, file manager, debugger...it’s like a multitool
    for everything you need to write code.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用TextEdit或其他文本编辑器来编写你的C#代码，但有一个更好的选择。一个**IDE**——这是***集成开发环境***的缩写——是一个文本编辑器、视觉设计器、文件管理器、调试器……它就像一个你需要编写代码所需的多功能工具。
- en: 'These are just a few of the things that Visual Studio helps you do:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这些只是Visual Studio帮助你完成的一些事情：
- en: '**Build an application, FAST.** The C# language is flexible and easy to learn,
    and the Visual Studio IDE makes it easier by doing a lot of manual work for you
    automatically. Here are just a few things that Visual Studio does for you:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**快速构建应用程序。** C#语言灵活且易于学习，而Visual Studio IDE通过自动完成大量手动工作，使得学习变得更加容易。以下只是Visual
    Studio为你做的一些事情：'
- en: Manages all your project files
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理所有你的项目文件
- en: Makes it easy to edit your project’s code
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简化编辑项目代码的过程
- en: Keeps track of your project’s graphics, audio, icons, and other resources
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跟踪你项目的图形、音频、图标和其他资源
- en: Helps you debug your code by stepping through it line by line
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过逐行调试来帮助你调试代码
- en: '![Images](assets/pg665.png)'
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_IMG
  zh: '![Images](assets/pg665.png)'
- en: '**Write and run your C# code.** The Visual Studio IDE is one of the easiest-to-use
    tools out there for writing code. The team at Microsoft who develop it have put
    a huge amount of work into making your job of writing code as easy as possible.'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**编写和运行你的C#代码。** Visual Studio IDE是目前为止使用最简单的编写代码工具之一。微软开发团队在使你编写代码的工作尽可能简单方面投入了大量的工作。'
- en: '**Build visually stunning web applications.** In this Visual Studio for Mac
    Learner’s Guide, you’ll be building web applications that run in your browser.
    You’ll use **Blazor**, a technology that lets you build interactive web apps using
    C#. When you **combine C# with HTML and CSS**, you’ve got an impressive toolkit
    for web development.'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**构建视觉效果出色的Web应用程序。** 在这本Visual Studio for Mac学习指南中，你将构建能在浏览器中运行的Web应用程序。你将使用**Blazor**，这是一种使用C#构建交互式Web应用程序的技术。当你**结合C#与HTML和CSS**时，你将拥有一个强大的Web开发工具包。'
- en: '**Learn and explore C# and .NET.** Visual Studio is a world-class development
    tool, but lucky for us it’s also a fantastic learning tool. ***We’re going to
    use the IDE to explore C#***, which gives us a fast track for getting important
    programming concepts into your brain.'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**学习和探索C#与.NET。** Visual Studio不仅是一个世界级的开发工具，还是一个出色的学习工具。***我们将使用IDE来探索C#***，这将使我们更快速地掌握重要的编程概念。'
- en: Note
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: We’ll often refer to Visual Studio as just “the IDE” throughout this book.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在本书中，我们经常将Visual Studio简称为“IDE”。
- en: '**Visual Studio is an amazing development environment, but we’re also going
    to use it as a learning tool to explore C#.**'
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Visual Studio是一个令人惊叹的开发环境，但我们还将把它作为学习工具来探索C#。**'
- en: Create your first project in Visual Studio for Mac
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Visual Studio for Mac中创建你的第一个项目
- en: The best way to learn C# is to start writing code, so we’re going to use Visual
    Studio to **create a new project**... and start writing code immediately!
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 学习C#的最佳方式是开始编写代码，因此我们将使用Visual Studio来**创建一个新项目**……并立即开始编写代码！
- en: Note
  id: totrans-36
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '***Do this!***'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '***执行此操作！***'
- en: Note
  id: totrans-38
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**When you see Do this! (or Now do this!, or Debug this!, etc.), go to Visual
    Studio and follow along. We’ll tell you exactly what to do, and point out what
    to look for to get the most out of the example we show you.**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**当你看到“Do this!”（或“Now do this!”或“Debug this!”等），前往Visual Studio并跟着操作。我们会告诉你确切的操作步骤，并指出需要注意的示例中的内容，以便让你得到最大的收益。**'
- en: '**Create a new Console Project.**'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建一个新的控制台项目。**'
- en: Start up Visual Studio 2019 for Mac. When it starts, it shows you a window that
    lets you create a new project or open an existing one. **Click New** to create
    a new project. Don’t worry if you dismiss the window—you can always get it back
    by choosing *File >> New Solution...* (![Images](assets/pg666-3.png)) from the
    menu.
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启动 Visual Studio 2019 for Mac。当它启动时，会显示一个窗口，让你创建一个新项目或打开一个现有项目。**点击“新建”**来创建一个新项目。如果你不小心关闭了窗口，别担心——你可以通过选择*文件
    >> 新建解决方案...*（![图片](assets/pg666-3.png)）菜单项来重新打开它。
- en: '![Images](assets/pg666-1.png)'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg666-1.png)'
- en: '**Select .NET** from the panel on the left, then choose **Console Project**:'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**从左侧面板选择.NET**，然后选择**控制台项目**：'
- en: '![Images](assets/pg666-2.png)'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg666-2.png)'
- en: '**Name your project MyFirstConsoleApp.**'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**将项目命名为 MyFirstConsoleApp。**'
- en: Enter **MyFirstConsoleApp** in the Project Name box and click the **Create button**
    to create the project.
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在“项目名称”框中输入**MyFirstConsoleApp**，然后点击**创建按钮**来创建项目。
- en: '![Images](assets/pg667-1.png)'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg667-1.png)'
- en: '**Look at the code for your new app.**'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**查看你的新应用的代码。**'
- en: 'When Visual Studio creates a new project, it gives you a starting point that
    you can build on. As soon as it finishes creating the new files for the app, it
    opens and displays a file called *Program.cs* with this code:'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当 Visual Studio 创建一个新项目时，它会为你提供一个可以构建的起点。一旦它完成创建应用程序的新文件，它会打开并显示一个名为*Program.cs*的文件，其中包含以下代码：
- en: '![Images](assets/pg667-2.png)'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg667-2.png)'
- en: Use the Visual Studio IDE to explore your app
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Visual Studio IDE 探索你的应用程序
- en: '**Explore the Visual Studio IDE—and the files that it created for you.**'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**探索 Visual Studio IDE——以及它为你创建的文件。**'
- en: When you created the new project, Visual Studio created several files for you
    automatically and bundled them into a **solution**. The Solution window on the
    left side of the IDE shows you these files, with the solution (MyFirstConsoleApp)
    at the top. The solution contains a **project** that has the same name as the
    solution.
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当你创建新项目时，Visual Studio 会自动为你创建几个文件，并将它们捆绑成一个**解决方案**。IDE 左侧的解决方案窗口显示这些文件，解决方案（MyFirstConsoleApp）位于顶部。解决方案包含一个与解决方案同名的**项目**。
- en: '![Images](assets/pg668.png)'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg668.png)'
- en: '**Run your new app.**'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**运行你的新应用。**'
- en: 'The app that Visual Studio for Mac created for you is ready to run. At the
    top of the Visual Studio IDE, find the Run button (with a “play” triangle). **Click
    that button** to run your app:'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Visual Studio for Mac 为你创建的应用程序已经准备就绪。在 Visual Studio IDE 的顶部找到“运行”按钮（带有“播放”三角形）。**点击该按钮**来运行你的应用程序：
- en: '![Images](assets/pg669-1.png)'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg669-1.png)'
- en: '**Look at your program’s output.**'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**查看你程序的输出。**'
- en: 'When you run your program, the **Terminal window** will appear at the bottom
    of the IDE and display the output of the program:'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当你运行程序时，**终端窗口**会出现在IDE底部，并显示程序的输出：
- en: '![Images](assets/pg669-2.png)'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg669-2.png)'
- en: The best way to learn a language is to write a lot of code in it, so you’re
    going to build a lot of programs in this book. Many of them will be Console App
    projects, so let’s have a closer look at what you just did.
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 学习一门语言的最佳方法是大量编写代码，所以你将在这本书中构建许多程序。其中许多将是控制台应用程序项目，所以让我们更仔细地看看你刚刚做了什么。
- en: At the top of the Terminal window is the **output of the program:**
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 终端窗口顶部显示着**程序的输出：**
- en: '[PRE0]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Click anywhere in the code to hide the Terminal window. Then press the ![Images](assets/pg669-3.png)
    button at the bottom of the IDE to open it again—you’ll see the same output from
    your program. The IDE automatically hides the Terminal window after your app exits.
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 点击代码中的任何位置来隐藏终端窗口。然后再次按下底部的![图片](assets/pg669-3.png)按钮来重新打开它——你会看到程序的相同输出。IDE
    在你的应用程序退出后会自动隐藏终端窗口。
- en: Press the Run button to run your program again. Then choose Start Debugging
    from the Run menu, or use its shortcut (![Images](assets/pg669-4.png)). This is
    how you’ll run all of the Console App projects throughout the book.
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 按下运行按钮再次运行你的程序。然后从运行菜单中选择“开始调试”，或者使用其快捷键（![图片](assets/pg669-4.png)）。这是你在整本书中运行所有控制台应用程序项目的方式。
- en: Let’s build a game!
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让我们来构建一个游戏！
- en: You’ve built your first C# app, and that’s great! Now that you’ve done that,
    let’s build something a little more complex. We’re going to build an **animal
    matching game**, where a player is shown a grid of 16 animals and needs to click
    on pairs to make them disappear.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经构建了你的第一个 C# 应用程序，这太棒了！既然你已经做到了，那么让我们构建一个稍微复杂一点的东西。我们将创建一个**动物配对游戏**，玩家会看到一个包含
    16 只动物的网格，需要点击成对的动物使它们消失。
- en: '![Images](assets/pg670.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg670.png)'
- en: Your animal matching game is a Blazor WebAssembly app
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你的动物配对游戏是一个 Blazor WebAssembly 应用程序
- en: Console apps are great if you just need to input and output text. If you want
    a visual app that’s displayed on a browser page, you’ll need to use a different
    technology. That’s why your animal matching game will be a **Blazor WebAssembly
    app**. Blazor lets you create rich web applications that can run in any modern
    browser. Most of the chapters in this book will feature a Blazor app. The goal
    of this project is to introduce you to Blazor and give you tools to build rich
    web applications as well as console apps.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只需要输入和输出文本，控制台应用程序非常适合。如果你想要一个显示在浏览器页面上的视觉应用程序，你需要使用不同的技术。这就是为什么你的动物匹配游戏将是一个**Blazor
    WebAssembly 应用程序**。Blazor让你可以创建可以在任何现代浏览器中运行的丰富Web应用程序。本书的大部分章节将涉及到一个Blazor应用程序。这个项目的目标是向你介绍Blazor，并为你提供构建丰富Web应用程序以及控制台应用程序的工具。
- en: Note
  id: totrans-71
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**Building different kinds of projects is an important tool in your C# learning
    toolbox. We chose Blazor for the Mac projects in this book because it gives you
    tools to design rich web applications that run on any modern browser.**'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**在你的C#学习工具箱中，构建不同类型的项目是一个重要的工具。我们在本书的Mac项目中选择了Blazor，因为它为您提供了设计可以在任何现代浏览器上运行的丰富Web应用程序的工具。**'
- en: '**But C# isn’t just for web development and console apps! Every project in
    this Mac learner’s guide has an equivalent Windows project.**'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**但是C#不仅仅适用于Web开发和控制台应用程序！在这本Mac学习指南中的每个项目都有一个相应的Windows项目。**'
- en: '**Are you a Windows user, but still want to learn Blazor and build web applications
    with C#? Well then, you’re in luck! All of the projects in the Mac Learner’s Guide
    can also be done with Visual Studio for Windows.**'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**你是Windows用户，但仍然想学习Blazor并使用C#构建Web应用程序吗？那么你很幸运！本Mac学习指南中的所有项目也可以在Visual Studio
    for Windows中完成。**'
- en: '**By the time you’re done with this project, you’ll be a lot more familiar
    with the tools that you’ll rely on throughout this book to learn and explore C#.**'
  id: totrans-75
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**完成这个项目后，您将更加熟悉本书中学习和探索C#所依赖的工具。**'
- en: Here’s how you’ll build your game
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下面是如何构建你的游戏的方法
- en: 'The rest of this chapter will walk you through building your animal matching
    game, and you’ll be doing it in a series of separate parts:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的其余部分将指导你逐步构建你的动物匹配游戏，你将在一系列单独的部分完成：
- en: First you’ll create a new Blazor WebAssembly App project in Visual Studio.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，您将在Visual Studio中创建一个新的Blazor WebAssembly App项目。
- en: Then you’ll lay out the page and write C# code to shuffle the animals.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，您将布置页面，并编写C#代码来洗牌动物。
- en: The game needs to let the user click on pairs of emoji to match them.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 游戏需要让用户点击一对表情符号来匹配它们。
- en: You’ll write more C# code to detect when the player has won the game.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将编写更多的C#代码来检测玩家何时赢得游戏。
- en: Finally, you’ll make the game more exciting by adding a timer.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，通过添加计时器使游戏更加令人兴奋。
- en: Note
  id: totrans-83
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: This project can take anywhere from 15 minutes to an hour, depending on how
    quickly you type. We learn better when we don’t feel rushed, so give yourself
    plenty of time.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目可能需要15分钟到一个小时不等的时间，具体取决于您打字的速度。我们在不感到赶时间的情况下学得更好，所以请给自己足够的时间。
- en: '![Images](assets/pg671.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![图像](assets/pg671.png)'
- en: Note
  id: totrans-86
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Keep an eye out for these “Game design... and beyond” elements scattered throughout
    the book. We’ll use game design principles as a way to learn and explore important
    programming concepts and ideas that apply to any kind of project, not just video
    games.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，书中散布的这些“游戏设计...以及更多”元素。我们将使用游戏设计原则作为学习和探索重要编程概念和想法的途径，这些概念和想法适用于任何类型的项目，而不仅仅是视频游戏。
- en: Create a Blazor WebAssembly App in Visual Studio
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Visual Studio中创建一个Blazor WebAssembly App
- en: The first step in building your game is to create a new project in Visual Studio.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 构建游戏的第一步是在Visual Studio中创建一个新项目。
- en: Choose **File >> New Solution... (![Images](assets/pg672-3a.png))** from the
    menu to bring up the New Project window. It’s the same way you started out your
    Console App project.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从菜单中选择**文件 >> 新建解决方案... (![图像](assets/pg672-3a.png))**以打开新项目窗口。这与您开始Console
    App项目的方式相同。
- en: '![Images](assets/pg672-1.png)'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图像](assets/pg672-1.png)'
- en: Click **App** under “Web and Console” on the left, then choose **Blazor WebAssembly
    App** and click **Next**.
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在左侧的“Web和Console”下点击**App**，然后选择**Blazor WebAssembly App**并点击**下一步**。
- en: The IDE will give you a page with options.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: IDE将会给你一个带有选项的页面。
- en: '![Images](assets/pg672-2.png)'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图像](assets/pg672-2.png)'
- en: Leave all of the options set to their default values and click **Next.**
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将所有选项保持默认值并点击**下一步**。
- en: '![Images](assets/pg672-3.png)'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图像](assets/pg672-3.png)'
- en: '**If you run into any trouble with this project, go to our GitHub page and
    look for a link to a video walkthrough:**'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**如果您在这个项目中遇到任何问题，请访问我们的GitHub页面，并寻找视频教程链接：**'
- en: '[https://github.com/head-first-csharp/fourth-edition](https://github.com/head-first-csharp/fourth-edition)'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://github.com/head-first-csharp/fourth-edition](https://github.com/head-first-csharp/fourth-edition)'
- en: Enter **BlazorMatchGame** as the project name, just like you did with your Console
    App project.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 **BlazorMatchGame** 作为项目名称，就像您的控制台应用程序一样。
- en: '![Images](assets/pg673-1.png)'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg673-1.png)'
- en: Then **click Create** to create the project solution.
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后**单击创建**以创建项目解决方案。
- en: '![Images](assets/pg673-2.png)'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg673-2.png)'
- en: The IDE will create a new BlazorMatchGame project and show you its contents,
    just like it did with your first console app. **Expand the Pages folder** in the
    Solution window to view its contents, then **double-click *Index.razor*** to open
    it in an editor.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: IDE 将创建一个新的 BlazorMatchGame 项目，并显示其内容，就像您的第一个控制台应用程序一样。**展开解决方案窗口中的 Pages 文件夹**以查看其内容，然后**双击
    *Index.razor*** 以在编辑器中打开它。
- en: '![Images](assets/pg673-3.png)'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg673-3.png)'
- en: Run your Blazor web app in a browser
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在浏览器中运行您的 Blazor Web 应用程序
- en: 'When you run a Blazor web app, there are two parts: a **server** and a **web
    application**. Visual Studio launches them both with one button.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 Blazor Web 应用程序时，有两部分：一个**服务器**和一个**Web 应用程序**。Visual Studio 通过一个按钮同时启动它们。
- en: Note
  id: totrans-107
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '***Do this!***'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '***就这样！***'
- en: '**Choose the browser to run your web application.**'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**选择要运行您的 Web 应用程序的浏览器。**'
- en: 'Find the triangle-shaped Run button at the top of the Visual Studio IDE:'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 Visual Studio IDE 顶部找到三角形形状的运行按钮：
- en: '![Images](assets/pg674-1.png)'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg674-1.png)'
- en: Your default browser should be listed next to `Debug >`. Click the browser name
    to see a dropdown of installed browsers and **choose either Microsoft Edge or
    Google Chrome**.
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 应调试>旁边列出您的默认浏览器。单击浏览器名称以查看已安装浏览器的下拉列表，并**选择 Microsoft Edge 或 Google Chrome**
    中的任一浏览器。
- en: '**Run your web application.**'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**运行您的 Web 应用程序。**'
- en: Click the **Run button** to start your application. You can also choose Start
    Debugging ![Images](assets/pg674-2.png) from the Run menu. The IDE will first
    open a Build Output window (at the bottom, just like it opened the Terminal window),
    and then an Application Output window. After that, it will pop up a browser running
    your app.
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 单击**运行按钮**启动您的应用程序。您也可以从运行菜单中选择**开始调试 ![图片](assets/pg674-2.png)**。IDE 首先会打开一个生成输出窗口（底部，就像打开终端窗口一样），然后是一个应用程序输出窗口。之后，它将弹出一个运行您的应用程序的浏览器。
- en: '![Images](assets/pg674-3.png)'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg674-3.png)'
- en: '**Compare the code in *Index.razor* with what you see in your browser.**'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**将 *Index.razor* 中的代码与浏览器中看到的内容进行比较。**'
- en: 'The web app in your browser has two parts: a **navigation menu** on the left
    side with links to different pages (Home, Counter, and Fetch data), and a page
    displayed on the right side. Compare the HTML markup in the *Index.razor* file
    with the app displayed in the browser.'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您的浏览器中的 Web 应用程序有两部分：左侧有导航菜单，其中包含指向不同页面（主页、计数器和获取数据）的链接，右侧显示一个页面。将 *Index.razor*
    文件中的 HTML 标记与浏览器中显示的应用程序进行比较。
- en: '![Images](assets/pg675-1.png)'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg675-1.png)'
- en: '**Change “Hello, world!” to something else.**'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**将“Hello, world!”更改为其他内容。**'
- en: 'Change the third line of the *Index.razor* file so it says something else:'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更改 *Index.razor* 文件的第三行，使其显示其他内容：
- en: '[PRE1]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Now go back to your browser and reload the page. Wait a minute, nothing changed—it
    still says “Hello, world!” That’s because you changed your code, ***but you never
    updated the server.***
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在返回浏览器并重新加载页面。等一下，什么都没变化 - 它仍然显示“Hello, world！”这是因为您更改了代码，***但您从未更新服务器。***
- en: '**Click the Stop button** ![Images](assets/pg675-2.png) or choose Stop ![Images](assets/pg675-3.png)
    from the Run menu. Now go back and reload your browser—since you stopped your
    app, it displays its “Site can’t be reached” page.'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**单击**停止按钮 ![图片](assets/pg675-2.png)或从运行菜单中选择**停止 ![图片](assets/pg675-3.png)**。现在返回并重新加载浏览器
    - 由于您已停止应用程序，它会显示“网站无法访问”的页面。'
- en: '**Start your app again**, then reload your page in the browser. Now you’ll
    see the updated text.'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**重新启动您的应用程序**，然后在浏览器中重新加载页面。现在您将看到更新后的文本。'
- en: '![Images](assets/pg675-4.png)'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg675-4.png)'
- en: '**Do you have extra instances of your browser open? Visual Studio opens a new
    browser each time you run your Blazor web app. Get in the habit of closing the
    browser (![Images](assets/pg675-5.png)) before you stop your app (![Images](assets/pg675-6.png)).**'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**是否有额外的浏览器实例打开？每次运行 Blazor Web 应用程序时，Visual Studio 都会打开一个新的浏览器。养成在停止应用程序（![图片](assets/pg675-6.png)）之前关闭浏览器（![图片](assets/pg675-5.png)）的习惯。**'
- en: '![Images](assets/pg676-1.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg676-1.png)'
- en: Now you’re ready to start writing code for your game
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 现在，您已准备好开始为游戏编写代码了。
- en: You’ve created a new app, and Visual Studio generated a bunch of files for you.
    Now it’s time to add C# code to start making your game work (as well as HTML markup
    to make it look right).
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 你创建了一个新的应用程序，Visual Studio为你生成了一堆文件。现在是时候添加C#代码来让你的游戏开始运行（以及HTML标记来使它看起来正确）。
- en: '![Images](assets/pg676-2.png)![Images](assets/pg677-1.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg676-2.png)![图片](assets/pg677-1.png)'
- en: How the page layout in your animal matching game will work
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你的动物配对游戏页面布局是如何工作的
- en: Your animal matching game is laid out in a grid—or, at least, that’s how it
    looks. It’s actually made up of 16 square buttons. If you make your browser very
    narrow, it will rearrange them so they’re in one long column.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 你的动物配对游戏按网格布局排列——或者说看起来是这样。实际上，它由16个正方形按钮组成。如果你把浏览器变得非常窄，它们将重新排列成一个长列。
- en: '![Images](assets/pg677-2.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg677-2.png)'
- en: 'You’ll lay out the page by creating a container that’s 400 pixels wide (a CSS
    “pixel” is 1/96 inch when the browser is at default scale) that contains 100-pixel-wide
    buttons. We’ll give you all of the C# and HTML code to enter into the IDE. **Keep
    an eye out for this code** that you’ll add to your project ***soon***—it’s where
    the “magic” happens, by mixing C# code with HTML:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 你将通过创建一个宽度为400像素的容器来布置页面（当浏览器处于默认缩放时，CSS“像素”为1/96英寸），其中包含100像素宽的按钮。我们将提供所有输入到IDE的C#和HTML代码。**请注意这段代码**，很快将其添加到您的项目***中***—通过将C#代码与HTML混合，实现了“魔法”：
- en: '![Images](assets/pg677-3.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg677-3.png)'
- en: Visual Studio helps you write C# code
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Visual Studio帮助你编写C#代码
- en: Blazor lets you create rich, interactive apps that combine HTML markup and C#
    code. Luckily, the Visual Studio IDE has useful features to help you write that
    C# code.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: Blazor让你创建丰富、交互式的应用程序，结合了HTML标记和C#代码。幸运的是，Visual Studio IDE有很多有用的功能帮助你编写这些C#代码。
- en: '**Add C# code to your Index.razor file.**'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**向*Index.razor*文件添加C#代码。**'
- en: 'Start by **adding a @code block** to the end of your *Index.razor* file. (Keep
    the existing contents of the file there for now—you’ll delete them later.) Go
    to the last line of the file and type `@code {`. The IDE will fill in the closing
    curly bracket `}` for you. Press Enter to add a line between the two brackets:'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 首先**在*Index.razor*文件末尾添加一个@code块**。（暂时保留文件的现有内容—稍后将删除它们。）转到文件的最后一行，键入`@code
    {`。IDE会为您填写右大括号`}`。按Enter在两个括号之间添加一行：
- en: '![Images](assets/pg678-1.png)'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg678-1.png)'
- en: '**Use the IDE’s IntelliSense window to help you write C#.**'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**使用IDE的IntelliSense窗口帮助你编写C#代码。**'
- en: 'Position your cursor on the line between the `{` brackets `}` and type the
    letter `**L**`. The IDE will pop up an **IntelliSense window** with autocomplete
    suggestions. Choose `List<>` from the pop-up:'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将光标定位在`{`大括号之间的行上，并键入字母`**L**`。IDE将弹出一个**IntelliSense窗口**，显示自动完成建议。从弹出窗口中选择`List<>`：
- en: '![Images](assets/pg678-2.png)'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg678-2.png)'
- en: The IDE will fill in `List`. Add an **opening angle bracket** (greater-than
    sign) `<`—the IDE will automatically fill in the closing bracket `>` and leave
    your cursor positioned between them.
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: IDE将填写`List`。添加一个**尖括号**（大于号）—IDE将自动填写闭合尖括号，并将光标定位在它们之间。
- en: '**Start creating a List to store your animal emoji.**'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**开始创建一个列表来存储你的动物表情符号。**'
- en: '**Type s** to bring up another IntelliSense window:'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**输入s**来显示另一个IntelliSense窗口：'
- en: '![Images](assets/pg678-3.png)'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg678-3.png)'
- en: Choose `string`—the IDE will add it between the brackets. Press the **right
    arrow and then the space bar**, then **type** `animalEmoji = new`. Press the space
    bar again to pop up another IntelliSense window. **Press Enter** to choose the
    default value, `List<string>`, from the options.
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 选择`string`—IDE会在括号之间添加它。按下**右箭头然后空格键**，然后**输入** `animalEmoji = new`。再次按下空格键以弹出另一个IntelliSense窗口。**按Enter**选择选项中的默认值，`List<string>`。
- en: '![Images](assets/pg678-4.png)'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg678-4.png)'
- en: 'Your code should now look like this: `List<string> animalEmoji = new List<string>`'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在你的代码应该看起来像这样：`List<string> animalEmoji = new List<string>`
- en: '**Finish creating the List of animal emoji.**'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**完成创建动物表情符号的列表。**'
- en: 'Start by **adding a `@code` block** to the end of your *Index.razor* file.
    Go to the last line and **type `@code {.`** The IDE will fill in the closing curly
    bracket `}` for you. Press Enter to add a line between the brackets, then:'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 首先**在*Index.razor*文件末尾添加一个`@code`块**。转到最后一行，键入**`@code {.`** IDE会为您填写右大括号`}`。按Enter在两个大括号之间添加一行，然后：
- en: Type an **opening parenthesis **(**—the IDE will fill in the closing one.**
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 键入一个**开括号**（左圆括号）—IDE将填写右圆括号。
- en: '**Press the right arrow** to move past the parentheses.'
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**按右箭头**移动到括号后面。'
- en: Type an **opening curly bracket** `{`—again, the IDE will fill in the closing
    one.
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入一个 **左大括号 {**—IDE 将自动添加右大括号。
- en: Press Enter to add a line between the brackets, then **add a semicolon ;** after
    the closing bracket.
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按 Enter 在括号之间添加一行，然后在右括号后添加一个**分号 ;**。
- en: 'The last six lines at the very bottom of your *Index.razor* file should now
    look like this:'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您的 *Index.razor* 文件底部的最后六行现在应该如下所示：
- en: '![Images](assets/pg679-1.png)'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg679-1.png)'
- en: '**Use the Character Viewer to enter emoji.**'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**使用字符查看器输入表情符号。**'
- en: Next, **choose Edit >> Emoji & Symbols** (![Images](assets/pg679-2a.png)Space)
    from the menu to bring up the macOS Character Viewer. Position your cursor between
    the quotes, then go to the Character Viewer and **search for “dog”:**
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，选择 Edit >> Emoji & Symbols (![图片](assets/pg679-2a.png) 空格) 从菜单中打开 macOS
    字符查看器。将光标放在引号之间，然后在字符查看器中搜索“dog”：
- en: '![Images](assets/pg679-2.png)'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg679-2.png)'
- en: 'The last six lines at the bottom of your *Index.razor* file should now look
    like this:'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您的 *Index.razor* 文件底部的最后六行现在应该如下所示：
- en: '![Images](assets/pg679-3.png)'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg679-3.png)'
- en: Finish creating your emoji list and display it in the app
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 完成您的表情符号列表并在应用程序中显示它
- en: 'You just added a dog emoji to your `animalEmoji` list. Now add a **second dog
    emoji** by adding a comma after the second quote, then a space, another quote,
    another dog emoji, another quote, and a comma:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 您刚刚将一只狗表情符号添加到您的 `animalEmoji` 列表中。现在通过在第二个引号后添加逗号、空格、另一个引号、另一只狗表情符号和逗号，再添加一个**第二只狗表情符号**：
- en: '![Images](assets/pg680-1.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg680-1.png)'
- en: 'Now **add a second line right after it** that’s exactly the same, except with
    a pair of wolf emoji instead of dogs. Then add six more lines with pairs of cows,
    foxes, cats, lions, tigers, and hamsters. You should now have eight pairs of emoji
    in your `animalEmoji` list:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在其后**添加第二行**，与之前完全相同，只是用一对狼表情符号替换狗表情符号。然后再添加六行，每行分别包含一对牛、狐狸、猫、狮子、老虎和仓鼠表情符号。您现在的
    `animalEmoji` 列表中应该有八对表情符号：
- en: '![Images](assets/pg680-2.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg680-2.png)'
- en: Replace the contents of the page
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 替换页面的内容
- en: '**Delete these lines** from the top of the page:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '**删除页面顶部的这些行**：'
- en: '![Images](assets/pg680-3.png)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg680-3.png)'
- en: 'Then put your cursor on the third line of the page and **type** `<st`—the IDE
    will pop up an IntelliSense window:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 然后将光标放在页面的第三行上，并**输入** `<st`—IDE 将弹出 IntelliSense 窗口：
- en: '![Images](assets/pg680-4.png)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg680-4.png)'
- en: 'Choose **`style`** from the list, then **type >**. The IDE will add a closing
    *HTML tag*: **`<style></style>`**'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 从列表中选择 **`style`**，然后**输入 >**。IDE 将添加一个闭合的 *HTML 标签*：**`<style></style>`**
- en: Put your cursor between `<style>` and `</style>` and press Enter, then **carefully
    enter all of the following code**. Make sure the code in your app matches it exactly.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 将光标放在 `<style>` 和 `</style>` 之间，按 Enter，然后**仔细输入以下所有代码**。确保您的应用程序中的代码与其完全匹配。
- en: '![Images](assets/pg681-1.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg681-1.png)'
- en: 'Go to the next line and use the IntelliSense to **enter an opening and closing
    <div> tag**, just like you did with `<style>` earlier. Then **carefully enter
    the code below**, making sure it matches exactly:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 转到下一行，使用 IntelliSense **输入一个开放和闭合的 <div> 标签**，就像之前使用 `<style>` 一样。然后**仔细输入下面的代码**，确保完全匹配：
- en: '![Images](assets/pg681-2.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg681-2.png)'
- en: Note
  id: totrans-179
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注
- en: '**Make sure your app looks like this screenshot when you run it. Once it does,
    you’ll know you entered all of the code without any typos.**'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '**确保在运行应用程序时它看起来像这张屏幕截图一样。一旦看到这个界面，您就知道已经输入了所有代码而没有任何拼写错误。**'
- en: Shuffle the animals so they’re in a random order
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将动物随机排序以创建一个新的顺序
- en: Our match game would be too easy if the pairs of animals were all next to each
    other. Let’s add C# code to shuffle the animals so they appear in a different
    order each time the player reloads the page.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 如果动物对都排在一起，我们的匹配游戏将会太简单。让我们添加 C# 代码来打乱动物的顺序，以便每次玩家重新加载页面时它们都会以不同的顺序出现。
- en: 'Place your cursor just after the semicolon `;` just above the closing bracket
    `}` near the bottom of *Index.razor* and **press Enter twice**. Then use the IntelliSense
    pop-ups just like you did earlier to enter the following line of code:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将光标放在底部 *Index.razor* 附近的右大括号 `}` 上方的分号 `;` 后面，按 Enter 两次。然后像之前一样使用 IntelliSense
    弹出窗口输入以下行代码：
- en: '[PRE2]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Next **type `protected override`** (the IntelliSense can autocomplete those
    keywords). As soon as you enter that and type a space, you’ll get an IntelliSense
    pop-up—**select OnInitialized()** from the list:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步 **输入 `protected override`** （IntelliSense 可以自动完成这些关键字）。一旦输入并键入空格，您将看到 IntelliSense
    弹出窗口—从列表中**选择 OnInitialized()**：
- en: '![Images](assets/pg682-1.png)'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg682-1.png)'
- en: 'The IDE will fill in code for a **method** called OnInitialized (we’ll talk
    more about methods in [#dive_into_chash_statementscomma_classesc](ch02.html#dive_into_chash_statementscomma_classesc)):'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: IDE将填充一个名为OnInitialized的**方法**的代码（我们将在[#dive_into_chash_statementscomma_classesc](ch02.html#dive_into_chash_statementscomma_classesc)中更多地讨论方法）：
- en: '![Images](assets/pg682-2a.png)'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg682-2a.png)'
- en: '**Replace `base.OnInitialized() with SetUpGame()`** so your method looks like
    this:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**用`SetUpGame()`替换`base.OnInitialized()`**，这样你的方法看起来像这样：'
- en: '[PRE3]'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Then **add this SetUpGame method** just below your OnInitialized method—again,
    the IntelliSense window will help you get it right:'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后**在你的OnInitialized方法下面添加这个SetUpGame方法**——再次，智能感知窗口将帮助你正确地完成它：
- en: '![Images](assets/pg682-2.png)'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg682-2.png)'
- en: As you type in the SetUpGame method, you’ll notice that the IDE pops up many
    IntelliSense windows to help you enter your code more quickly. The more you use
    Visual Studio to write C# code, the more helpful these windows will become—you’ll
    eventually find that they significantly speed things up. For now, use them to
    keep from entering typos—your code needs to ***match our code exactly*** or your
    app won’t run.
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当你在SetUpGame方法中输入代码时，你会注意到IDE弹出许多智能感知窗口，帮助你更快地输入代码。你使用Visual Studio编写C#代码的次数越多，这些窗口就会变得越有帮助——最终你会发现它们显著加快速度。现在，利用它们来避免输入拼写错误——你的代码需要***与我们的代码完全匹配***，否则你的应用程序将无法运行。
- en: 'Scroll back up to the HTML and find this code: `@foreach (var animal in animalEmoji)`'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动回到HTML并找到这段代码：`@foreach (var animal in animalEmoji)`
- en: '**Double-click `animalEmoji`** to select it, then **type s**. The IDE will
    pop up an IntelliSense window. Choose `shuffledAnimals` from the list:'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**双击`animalEmoji`**来选择它，然后**输入s**。IDE将弹出一个智能感知窗口。从列表中选择`shuffledAnimals`：'
- en: '![Images](assets/pg683-1.png)'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg683-1.png)'
- en: Now **run your app again**. Your animals should be shuffled so they’re in a
    random order. **Reload the page** in the browser—they’ll be shuffled in a different
    order. Each time you reload, it reshuffles the animals.
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在**再次运行你的应用程序**。你的动物应该被洗牌，所以它们是随机顺序的。在浏览器中**重新加载页面**——它们将以不同的顺序重新洗牌。每次重新加载，它都会重新洗牌动物。
- en: '![Images](assets/pg683-2.png)'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg683-2.png)'
- en: Note
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**Again, make sure your app looks like this screenshot when you run it. Once
    it does, you’ll know you entered all of the code without any typos. Don’t move
    on until your game is reshuffling the animals every time you reload the browser
    page.**'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**再次确保当你运行时你的应用程序看起来像这个截图。一旦它这样做了，你就会知道你输入了所有的代码而没有任何拼写错误。在你的游戏在重新加载浏览器页面时每次都在重新洗牌之前不要继续。**'
- en: You’re running your game in the debugger
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你正在调试你的游戏
- en: When you click the Run button ![Images](assets/pg684-1.png) or choose Start
    Debugging ![Images](assets/pg684-2.png) from the Run menu to start your program
    running, you’re putting Visual Studio into **debugging mode**.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 当你点击运行按钮 ![图片](assets/pg684-1.png) 或选择从运行菜单中选择开始调试 ![图片](assets/pg684-2.png)
    来启动程序运行时，你就把Visual Studio置于**调试模式**。
- en: You can tell that you’re debugging an app when you see the **debug controls**
    appear in the toolbar. The Start button has been replaced with the square Stop
    button ![Images](assets/pg684-3.png), the dropdown to choose which browser to
    launch is grayed out, and an extra set of controls has appeared.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 当你看到工具栏中出现**调试控件**时，你可以知道你正在调试一个应用程序。开始按钮已被方形的停止按钮 ![图片](assets/pg684-3.png)
    替换，选择要启动的浏览器的下拉菜单变灰，还出现了一组额外的控件。
- en: 'Hover your mouse cursor over the Pause Execution button to see its tooltip:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 将鼠标悬停在暂停执行按钮上以查看其工具提示：
- en: '![Images](assets/pg684-4.png)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg684-4.png)'
- en: You can stop your app clicking the Stop button or choosing Stop ![Images](assets/pg684-5.png)
    from the Run menu.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过点击停止按钮或从运行菜单中选择停止 ![图片](assets/pg684-5.png) 来停止你的应用程序。
- en: '![Images](assets/pg684-6.png)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg684-6.png)'
- en: '**You’ve set the stage for the next part that you’ll add.**'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '**你已经为接下来要添加的部分做好了准备。**'
- en: When you build a new game, you’re not just writing code. You’re also running
    a project. A really effective way to run a project is to build it in small increments,
    taking stock along the way to make sure things are going in a good direction.
    That way you have plenty of opportunities to change course.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 当你构建一个新游戏时，你不仅仅是在编写代码。你也在运行一个项目。一个非常有效的运行项目的方式是逐步构建它，沿途检查确保事情朝着良好的方向发展。这样你就有很多机会改变方向。
- en: Note
  id: totrans-210
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Here’s a pencil-and-paper exercise. It’s absolutely worth your time to do all
    of them because they’ll help get important C# concepts into your brain faster.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个纸笔练习。把所有这些练习都做完绝对值得，因为它们将帮助你更快地掌握重要的C#概念。
- en: '![Images](assets/pg687.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![Images](assets/pg687.png)'
- en: '**Working on your code comprehension skills will make you a better developer.**'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '**提高你的代码理解能力将使你成为一个更好的开发者。**'
- en: 'The pencil-and-paper exercises are **not optional**. They give your brain a
    different way to absorb the information. But they do something even more important:
    they give you opportunities to ***make mistakes***. Making mistakes is a part
    of learning, and we’ve all made plenty of mistkaes (you may even find one or two
    typos in this book!). Nobody writes perfect code the first time—really good programmers
    always assume that the code that they write today will probably need to change
    tomorrow. In fact, later in the book you’ll learn about *refactoring*, or programming
    techniques that are all about improving your code after you’ve written it.'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 铅笔和纸上的练习**不是可选的**。它们让你的大脑以不同的方式吸收信息。但更重要的是：它们给了你**犯错**的机会。犯错是学习的一部分，我们都犯过很多错误（你甚至可能在这本书中找到一两个拼写错误！）。没有人第一次写出完美的代码
    —— 真正优秀的程序员总是假设他们今天写的代码可能明天就需要修改。事实上，书中的后面部分会介绍*重构*，即改进已编写代码的编程技术。
- en: Note
  id: totrans-215
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: We’ll add bullet points like this to give a quick summary of many of the ideas
    and tools that you’ve seen so far.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将添加类似这样的项目要点，以快速总结你到目前为止看到的许多想法和工具。
- en: Add your new project to source control
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将你的新项目添加到源代码控制中
- en: 'You’re going to be building a lot of different projects in this book. Wouldn’t
    it be great if there was an easy way to back them up and access them from anywhere?
    What if you make a mistake—wouldn’t it be super convenient if you could roll back
    to a previous version of your code? Well, you’re in luck! That’s exactly what
    **source control** does: it gives you an easy way to back up all of your code,
    and keeps track of every change that you make. Visual Studio makes it easy for
    you to add your projects to source control.'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，你将建立许多不同的项目。如果有一种简单的方法可以备份它们并随时访问它们，那不是很好吗？如果你犯了错误，如果你能方便地回滚到以前的代码版本，那不是非常方便吗？好吧，你很幸运！这正是**源代码控制**做的事情：它为你提供了一种简单的方法来备份你的所有代码，并跟踪你所做的每一个更改。Visual
    Studio让你很容易地将你的项目添加到源代码控制中。
- en: '**Git** is a popular version control system, and Visual Studio will publish
    your source to any Git **repository** (or **repo**). We think **GitHub** is one
    of the easiest Git providers to use. You’ll need a GitHub account to push code
    to it, so if you don’t already have one, go to [https://github.com](https://github.com)
    and create it now.'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '**Git**是一个流行的版本控制系统，而Visual Studio会将你的源代码发布到任何Git **存储库**（或**repo**）。我们认为**GitHub**是使用最简单的Git提供者之一。你需要一个GitHub账号来向其推送代码，所以如果你还没有，请访问[https://github.com](https://github.com)并创建。'
- en: 'Once you have your GitHub account set up, you can use the built-in version
    control features of the IDE. **Choose *Version Control >> Publish in Version Control...*
    from the menu** to bring up the Clone Repository window:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 设置好你的GitHub账号后，你可以使用IDE的内置版本控制功能。从菜单中选择**版本控制 >> 发布到版本控制...** 来打开克隆存储库窗口：
- en: '![Images](assets/pg688.png)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![Images](assets/pg688.png)'
- en: Note
  id: totrans-222
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**The Visual Studio for Mac documentation has a complete guide to creating
    projects on GitHub and publishing them from Visual Studio. It includes step-by-step
    instructions for creating a remote repo on GitHub and publishing your projects
    to Git directly from Visual Studio. We think it’s a great idea to publish all
    of your *Head First C#* projects to GitHub—that way you can easily go back to
    them later. [https://docs.microsoft.com/en-us/visualstudio/mac/set-up-git-repository](https://docs.microsoft.com/en-us/visualstudio/mac/set-up-git-repository).**'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '**Visual Studio for Mac文档完整介绍了在GitHub上创建项目并从Visual Studio发布的步骤。它包括了为在GitHub上创建远程仓库和直接从Visual
    Studio向Git发布项目提供逐步说明。我们认为将所有*Head First C#*项目发布到GitHub是一个好主意，这样你以后可以轻松地返回到它们。[https://docs.microsoft.com/en-us/visualstudio/mac/set-up-git-repository](https://docs.microsoft.com/en-us/visualstudio/mac/set-up-git-repository)。**'
- en: '![Images](assets/pg689-1.png)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![Images](assets/pg689-1.png)'
- en: Add C# code to handle mouse clicks
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加C#代码来处理鼠标点击
- en: 'You’ve got buttons with random animal emoji. Now you need them to do something
    when the player clicks them. Here’s how it will work:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 你有带有随机动物表情符号的按钮。现在你需要点击它们时让它们做一些事情。操作方式如下：
- en: '![Images](assets/pg689-2.png)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![Images](assets/pg689-2.png)'
- en: Add click event handlers to your buttons
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 给你的按钮添加点击事件处理程序
- en: When you click a button, it needs to do something. In web pages, a click is
    an **event**. Web pages have other events, too, like when a page finishes loading,
    or when an input changes. An **event handler** is C# code that gets executed any
    time a specific event happens. We’ll add an event handler that implements the
    button functionality.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 当你点击一个按钮时，它需要做一些事情。在网页中，点击是一个**事件**。网页还有其他事件，比如当页面完成加载时，或者当输入框发生变化时。一个**事件处理程序**是一段在特定事件发生时执行的
    C# 代码。我们将添加一个事件处理程序来实现按钮的功能。
- en: Here’s the code for the event handler
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 这是事件处理程序的代码
- en: 'Add this code to the bottom of your Razor page, just above the closing `**}**`
    at the bottom:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 将这段代码添加到你的 Razor 页面底部，就在底部的 `**}**` 上方：
- en: '![Images](assets/pg690-1.png)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg690-1.png)'
- en: Hook up your event handler to the buttons
  id: totrans-233
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将你的事件处理程序连接到按钮上
- en: 'Now you just need to modify your buttons to call the ButtonClick method when
    clicked:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你只需要修改按钮，使其在点击时调用 ButtonClick 方法：
- en: '![Images](assets/pg690-2.png)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg690-2.png)'
- en: Note
  id: totrans-236
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**When we ask you to update one thing in a block of code, we might make the
    rest of the code a lighter shade and make the part of the code you change boldface**.'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '**当我们要求你在代码块中更新一个内容时，我们可能会使其余的代码变得浅一些，并使你修改的部分变为粗体。**'
- en: Note
  id: totrans-238
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**Uh-oh—there’s a bug in this code! Can you spot it? We’ll track it down and
    fix it in the next section.**'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '**哎呀——这段代码中有一个 bug！你能找出来吗？我们将在下一节追踪并修复它。**'
- en: Test your event handler
  id: totrans-240
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试你的事件处理程序
- en: Run your app again. When it comes up, test your event handler by clicking on
    a button, then clicking on the button with the matching emoji. They should both
    disappear.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 再次运行你的应用程序。当它启动时，通过单击按钮来测试你的事件处理程序，然后再单击带有匹配表情符号的按钮。它们应该都会消失。
- en: '![Images](assets/pg692-1.png)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg692-1.png)'
- en: Click on another, then another, then another. You should be able to keep clicking
    on pairs until all of the buttons are blank. Congratulations, you found all the
    pairs!
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 依次单击另一个，然后再依次单击另一个。你应该能够继续单击成对，直到所有按钮都变空。恭喜，你找到了所有的配对！
- en: '![Images](assets/pg692-2.png)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg692-2.png)'
- en: But what happens if you click on the same button twice?
  id: totrans-245
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 但是如果你连续点击同一个按钮会发生什么？
- en: Reload the page in your browser to reset the game. But this time instead of
    finding a pair, **click twice on the same button**. Hold on—***there’s a bug in
    the game!*** It should have ignored the click, but instead, it acted like you
    got a match.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中重新加载页面以重置游戏。但这一次，而不是找到一对，**连续点击两次同一个按钮**。等等——***游戏中有一个 bug！*** 它本应忽略点击，但实际上像你找到了一对一样。
- en: '![Images](assets/pg692-3.png)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg692-3.png)'
- en: Use the debugger to troubleshoot the problem
  id: totrans-248
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用调试器来解决问题
- en: 'You might have heard the word “bug” before. You might have even said something
    like this to your friends at some point in the past: “That game is really buggy,
    it has so many glitches.” Every bug has an explanation—everything in your program
    happens for a reason—but not every bug is easy to track down.'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能以前听过“bug”这个词。你甚至可能曾经对你的朋友说过类似的话：“那个游戏有很多 bug，有这么多故障。”每个 bug 都有一个解释——你程序中的每件事都有其原因——但不是每个
    bug 都容易追踪。
- en: '***Understanding a bug is the first step in fixing it.*** Luckily, the Visual
    Studio debugger is a great tool for that. (That’s why it’s called a debugger:
    it’s a tool that helps you get rid of bugs!)'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '***理解 bug 是修复它的第一步。*** 幸运的是，Visual Studio 调试器是一个很好的工具。(这就是为什么它被称为调试器：它是帮助你消除
    bug 的工具！)'
- en: '**Think about what’s going wrong.**'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**考虑一下出了什么问题。**'
- en: 'The first thing to notice is that your bug is **reproducible**: any time you
    click on the same button twice, it always acts like you clicked a matching pair.'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 首先要注意的是，你的 bug 是**可复现的**：每次你连续单击相同的按钮两次时，它总是像你点击了一个匹配的对。
- en: The second thing to notice is that you have a **pretty good idea** where the
    bug is. The problem only happened *after* you added the code to handle the Click
    event, so that’s a great place to start.
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 第二件需要注意的事情是，你对 bug 的位置有一个**相当好的想法**。问题只发生在你添加了处理 Click 事件的代码之后，所以那是一个很好的起点。
- en: '**Add a breakpoint to the Click event handler code that you just wrote.**'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**为你刚刚编写的 Click 事件处理程序的代码添加断点。**'
- en: 'Click on the first line of the ButtonClick method and **choose Run >> Toggle
    Breakpoint** (![Images](assets/box1.png)) from the menu. The line will change
    color and you’ll see a dot in the left margin:'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 点击 ButtonClick 方法的第一行，然后从菜单中选择 Run >> Toggle Breakpoint (![图片](assets/box1.png))。该行将改变颜色，并在左边缘看到一个点：
- en: '![Images](assets/pg693-1.png)'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg693-1.png)'
- en: Keep debugging your event handler
  id: totrans-257
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 继续调试你的事件处理程序
- en: Now that your breakpoint is set, use it to get a handle on what’s going on with
    your code.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你的断点已经设置好了，使用它来了解代码的运行情况。
- en: '**Click on an animal to trigger the breakpoint.**'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**点击一个动物以触发断点。**'
- en: 'If your app is already running, stop it and close all browser windows. Then
    **run your app** again and **click any animal button**. Visual Studio should pop
    into the foreground. The line where you toggled the breakpoint should now be highlighted
    in a different color:'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你的应用程序已经在运行，请停止它并关闭所有浏览器窗口。然后再次**运行你的应用程序**并**点击任何一个动物按钮**。Visual Studio应该弹出到前景。你切换了断点的行应该现在以不同的颜色高亮显示：
- en: '![Images](assets/pg694-1.png)'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg694-1.png)'
- en: 'Move your mouse to the first line of the method, which starts `private void`,
    and **hover your cursor over animal**. A small window will pop up that shows you
    the animal that you clicked on:'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将鼠标移动到方法的第一行，该行以`private void`开头，并**将光标悬停在animal上**。将弹出一个小窗口，显示你点击的动物：
- en: '![Images](assets/pg694-2.png)'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg694-2.png)'
- en: 'Press the **Step Over** button or choose Run >> Step Over (![Images](assets/pg693-2.png))
    from the menu. The highlight will move down to the `**{**` line. Step over again
    to move the highlight to the next statement:'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 按下**Step Over**按钮或选择Run >> Step Over (![图片](assets/pg693-2.png))菜单。高亮将移动到`**{**`行。再次跨过以将高亮移至下一个语句：
- en: '![Images](assets/pg694-3.png)'
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg694-3.png)'
- en: 'Step over one more time to execute that statement, then hover over `lastAnimalFound`:'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 再次跨过一次以执行该语句，然后悬停在`lastAnimalFound`上：
- en: '![Images](assets/pg694-4.png)'
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg694-4.png)'
- en: The statement that you stepped over set the value of `lastAnimalFound` so it
    matches `animal`.
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你刚刚跨过的声明将`lastAnimalFound`的值设为与`animal`相匹配。
- en: '***That’s how the code keeps track of the first animal that the player clicked.***'
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '***这就是代码如何跟踪玩家点击的第一个动物。***'
- en: '**Continue execution.**'
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**继续执行。**'
- en: Press the **Continue Execution** button or choose Run >> Continue Debugging
    (![Images](assets/pg694-5.png)) from the menu. Switch back to the browser—your
    game will keep going until it hits the breakpoint again.
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 按下**Continue Execution**按钮或选择Run >> Continue Debugging (![图片](assets/pg694-5.png))菜单。切换回浏览器
    - 你的游戏将继续进行直到再次触发断点。
- en: '**Click the matching animal in the pair.**'
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**点击配对中的相匹配动物。**'
- en: 'Find the button with the matching emoji and **click it**. The IDE will trigger
    the breakpoint and pause the app again. Press **Step Over**—it will skip the first
    block and jump to the second:'
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 找到具有匹配表情符号的按钮并**点击它**。IDE将触发断点并再次暂停应用程序。按下**Step Over** - 它会跳过第一个块并跳转到第二个：
- en: '![Images](assets/pg695-1.png)'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg695-1.png)'
- en: '**Hover over `lastAnimalFound` and `animal`**—they should both have the same
    emoji. That’s how the event handler knows that you found a match. **Step over
    three more times**:'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**悬停在`lastAnimalFound`和`animal`上** — 它们应该都有相同的表情符号。这就是事件处理程序知道你找到匹配项的方式。**再跨过三次**：'
- en: '![Images](assets/pg695-2.png)'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg695-2.png)'
- en: Now **hover over `shuffledAnimals`. You’ll see several items in the window that
    pops up. Click the triangle next to `shuffledAnimals` to expand it, then **expand**
    `_items` to see all the animals:**
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在**悬停在`shuffledAnimals`上**。你会看到弹出窗口中有几个项目。点击`shuffledAnimals`旁边的三角形以展开它，然后**展开**
    `_items` 以查看所有动物：
- en: '![Images](assets/pg695-3.png)'
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg695-3.png)'
- en: 'Press **Step Over** one more time to execute the statement that removes the
    matches from the list. Then **hover over** `**shuffledAnimals**` **again** and
    look at its items. There are now two (*null*) values where the matched emoji used
    to be:'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 再次按下**Step Over**以执行从列表中移除匹配项的语句。然后**再次悬停在** `**shuffledAnimals**` **上** 并查看它的项目。现在匹配表情符号的位置有两个（*null*）值：
- en: '![Images](assets/pg695-4.png)'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg695-4.png)'
- en: '**We’ve sifted through a lot of evidence and gathered some important clues.
    What do you think is causing the problem?**'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**我们已经筛选了大量证据并收集了一些重要线索。你认为问题的根源是什么？**'
- en: Track down the bug that’s causing the problem...
  id: totrans-282
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 追踪引起问题的错误...
- en: So what happens if you click the same animal button twice? Let’s find out! **Repeat
    the same steps you just did**, except this time **click the same animal twice**.
    Watch what happens when you get to step ![Images](assets/pg696a.png).
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 那么如果你两次点击相同的动物按钮会发生什么呢？让我们找出来！**重复刚才做过的步骤**，但这次**两次点击相同的动物**。观察当你到达步骤![图片](assets/pg696a.png)时发生了什么。
- en: Hover over `animal` and `lastAnimalFound`, just like you did before. They’re
    the same! That’s because the event handler ***doesn’t have a way to distinguish
    between different buttons with the same animal***.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 悬停在`animal`和`lastAnimalFound`上，就像之前一样。它们是相同的！这是因为事件处理程序***没有办法区分不同按钮上相同的动物***。
- en: '...and fix the bug!'
  id: totrans-285
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '...并修复错误！'
- en: 'Now that we know what’s causing the bug, we know how to fix it: give the event
    handler a way to distinguish between the two buttons with the same emoji.'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道是什么导致了这个错误，我们知道如何修复它：给事件处理程序一种区分两个具有相同表情符号按钮的方法。
- en: 'First, **make these changes** to the ButtonCick event handler (make sure you
    don’t miss any changes):'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，**对ButtonClick事件处理程序进行这些更改**（确保不会漏掉任何更改）：
- en: '![Images](assets/pg696-1.png)'
  id: totrans-288
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg696-1.png)'
- en: 'Then **replace the `foreach loop`** with a different kind of loop, a `for`
    loop—this for loop counts the animals:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 然后用另一种循环替换`foreach循环`，即`for`循环——这个for循环计算动物的数量：
- en: '![Images](assets/pg696-2.png)'
  id: totrans-290
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg696-2.png)'
- en: Now debug through the app again, just like you did before. This time when you
    click the same animal twice it will skip down to the end of the event handler.
    ***The bug is fixed!***
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 现在再次通过应用程序进行调试，就像之前一样。这次当你两次点击相同的动物时，它会跳到事件处理程序的末尾。***错误已修复！***
- en: '![Images](assets/pg698-1.png)'
  id: totrans-292
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg698-1.png)'
- en: Add code to reset the game when the player wins
  id: totrans-293
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 当玩家赢得比赛时，添加重置游戏的代码
- en: The game is coming along—your player starts out with a grid full of animals
    to match, and they can click on pairs of animals that disappear when they’re matched.
    But what happens when all of the matches are found? We need a way to reset the
    game so the player gets another chance.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏进行得很顺利——你的玩家从一个充满动物的网格开始匹配，他们可以点击成对的动物，当它们匹配时它们会消失。但是当所有匹配项都被找到时会发生什么？我们需要一种重置游戏的方式，让玩家有第二次机会。
- en: '![Images](assets/pg698-2.png)'
  id: totrans-295
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg698-2.png)'
- en: Note
  id: totrans-296
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: When you see a Brain Power element, take a minute and really think about the
    question that it’s asking.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 当你看到脑力元素时，花一分钟时间真正思考它问的问题。
- en: '![Images](assets/pg701-1.png)'
  id: totrans-298
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg701-1.png)'
- en: Finish the game by adding a timer
  id: totrans-299
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过添加计时器完成游戏
- en: Your animal matching game will be more exciting if players can try to beat their
    best time. We’ll add a **timer** that “ticks” after a fixed interval by repeatedly
    calling a method.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 如果玩家可以尝试击败他们的最佳时间，你的动物匹配游戏将会更加令人兴奋。我们将添加一个**计时器**，通过重复调用方法在固定间隔后“滴答”。
- en: '![Images](assets/pg701-3.png)![Images](assets/pg701-2.png)'
  id: totrans-301
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg701-3.png)![图片](assets/pg701-2.png)'
- en: Note
  id: totrans-302
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**Timers “tick” every time interval by calling methods over and over again.
    You’ll use a timer that starts when the player starts the game and ends when the
    last animal is matched.**'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '**计时器通过反复调用方法以固定间隔“滴答”。你将使用一个计时器，当玩家开始游戏时启动，最后一个动物匹配时结束。**'
- en: Add a timer to your game’s code
  id: totrans-304
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在你游戏的代码中添加一个计时器
- en: '***Add this!***'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '***添加这个！***'
- en: 'Start by finding this line at the very top of the *Index.razor* file: `@page
    "/"`'
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先找到*Index.razor*文件的顶部这一行：`@page "/"`
- en: '**Add this line just below it**—you need it in order to use a Timer in your
    C# code:'
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**在下面添加这行代码** —— 你需要它来在你的C#代码中使用计时器：'
- en: '[PRE4]'
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**You’ll need to update the HTML markup to display the time. Add this just
    below the first block that you added in the exercise:**'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你需要更新HTML标记以显示时间。将其添加到练习中第一个添加的代码块的下面：**'
- en: '[PRE5]'
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Your page will need a timer. It will also need to keep track of the elapsed
    time:'
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的页面需要一个计时器。它还需要跟踪经过的时间：
- en: '[PRE6]'
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You need to tell the timer how frequently to “tick” and what method to call.
    You’ll do this in the OnInitialized method, which is called once after the page
    is loaded:'
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要告诉计时器每隔多久“滴答”一次以及调用什么方法。你将在OnInitialized方法中做这些，这个方法在页面加载后调用一次：
- en: '[PRE7]'
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Reset the timer when you set up the game:'
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你设置游戏时重置计时器：
- en: '[PRE8]'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You need to stop and start your timer. Add this line of code near the top of
    the ButtonClick method to start the timer when the player clicks the first button:'
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要停止并重新启动计时器。在ButtonClick方法的顶部附近添加这行代码来在玩家点击第一个按钮时启动计时器：
- en: '[PRE9]'
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'And finally, add these two lines further down in the ButtonClick method to
    stop the timer and display a “Play Again?” message after the player finds the
    last match:'
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后，在ButtonClick方法的更深处添加这两行代码来停止计时器，并在玩家找到最后一对匹配后显示“再玩一次？”消息：
- en: '[PRE10]'
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Finally, your timer needs to know what to do each time it ticks. Just like
    buttons have Click event handlers, timers have Tick event handlers: methods that
    get executed every time the timer ticks.'
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，你的计时器需要知道每次滴答时该做什么。就像按钮有Click事件处理程序一样，计时器有Tick事件处理程序：每次计时器滴答时执行的方法。
- en: '**Add this code at the very bottom of the page**, just above the closing bracket
    `}`:'
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**将此代码添加到页面的最底部**，就在闭合大括号 `}` 的上方：'
- en: '[PRE11]'
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Note
  id: totrans-324
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**The timer starts when the player clicks the first animal and stops when the
    last match is found. This doesn’t fundamentally change the way the game works,
    but makes it more exciting.**'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '**当玩家点击第一个动物时计时器开始计时，并且当找到最后一对匹配时停止。这并不会从根本上改变游戏的运行方式，但会让游戏更加令人兴奋。**'
- en: Clean up the navigation menu
  id: totrans-326
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 清理导航菜单
- en: Your game is working! But did you notice that there are other pages in your
    app? Try clicking on “Counter” or “Fetch data” in the navigation menu on the left
    side. When you created the Blazor WebAssembly App project, Visual Studio added
    these additional sample pages. You can safely remove them.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 你的游戏正在运行！但是你是否注意到你的应用中还有其他页面？尝试在左侧导航菜单中点击“Counter”或“Fetch data”。在创建Blazor WebAssembly应用程序项目时，Visual
    Studio添加了这些额外的示例页面。你可以安全地将它们移除。
- en: 'Start by expanding the **wwwroot** **folder** and editing *index.html*. Find
    the line that starts `<title>` and **modify it** so it looks like this: `<title>
    Animal Matching Game </title>`'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，展开**wwwroot文件夹**并编辑*index.html*。找到以`<title>`开头的行并**修改它**，使其看起来像这样：`<title>
    动物配对游戏 </title>`
- en: 'Next, expand the **Shared folder** in the solution and **double-click *NavMenu.razor***.
    Find this line:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，展开解决方案中的**Shared文件夹**，并**双击 *NavMenu.razor***。找到这一行：
- en: '[PRE12]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: and **replace it with this:**
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 并**用这个替换它：**
- en: '[PRE13]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Then **delete these lines:**
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 然后**删除这些行：**
- en: '![Images](assets/pg704-1.png)'
  id: totrans-334
  prefs: []
  type: TYPE_IMG
  zh: '![Images](assets/pg704-1.png)'
- en: 'Finally, hold down ![Images](assets/pg704-2.png) (Command) and **click to multiselect
    these files** in the Solution window: ***Counter.razor*** and ***FetchData.razor***
    in the Pages folder, ***SurveyPrompt.razor*** in the Shared folder, and the **entire
    sample-data** folder inside the wwwroot folder. Once they’re all selected, right-click
    on one of them and **choose Delete** (![Images](assets/pg704-3.png)) from the
    menu to delete them.'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，按住 ![Images](assets/pg704-2.png)（Command键）并**点击以多选这些文件**在解决方案窗口中：在Pages文件夹中的***Counter.razor***和***FetchData.razor***，在Shared文件夹中的***SurveyPrompt.razor***，以及在wwwroot文件夹中的**整个sample-data**文件夹。一旦它们全部选择完毕，右键单击其中一个并从菜单中**选择删除**（![Images](assets/pg704-3.png)图标）来删除它们。
- en: '***And now your game is done!***'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '***现在你的游戏完成了！***'
- en: '![Images](assets/pg704.png)'
  id: totrans-337
  prefs: []
  type: TYPE_IMG
  zh: '![Images](assets/pg704.png)'
- en: '**Whenever you have a large project, it’s always a good idea to break it into
    smaller pieces.**'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '**每当你有一个大项目时，将其拆分成小部分总是一个好主意。**'
- en: One of the most useful programming skills that you can develop is the ability
    to look at a large and difficult problem and break it down into smaller, easier
    problems.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以培养的最有用的编程技能之一是能够看待一个庞大而困难的问题，并将其分解成更小、更容易解决的问题。
- en: It’s really easy to be overwhelmed at the beginning of a big project and think,
    “Wow, that’s just so...big!” But if you can find a small piece that you can work
    on, then you can get started. Once you finish that piece, you can move on to another
    small piece, and then another, and then another. As you build each piece, you
    learn more and more about your big project along the way.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始一个大项目时很容易感到不知所措，然后想，“哇，这太大了！”但如果你能找到一个小部分可以着手，然后你就可以开始了。完成了那一部分后，你可以继续下一个小部分，然后下一个，再下一个。随着每个部分的建设，你会在途中了解更多关于你的大项目的信息。
- en: Even better ifs...
  id: totrans-341
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更好的建议...
- en: 'Your game is pretty good! But every game—in fact, pretty much every program—can
    be improved. Here are a few things that we thought of that could make the game
    better:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 你的游戏做得相当不错！但每个游戏——事实上，几乎每个程序——都可以改进。以下是我们考虑到的一些可以让游戏变得更好的建议：
- en: Add different kinds of animals so the same ones don’t show up each time.
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加不同种类的动物，这样每次不会出现相同的动物。
- en: Keep track of the player’s best time so they can try to beat it.
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录玩家的最佳时间，这样他们可以尝试超越它。
- en: Make the timer count down instead of counting up so the player has a limited
    amount of time.
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 让计时器倒计时而不是计时上升，这样玩家就有限定的时间了。
- en: Note
  id: totrans-346
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: We’re serious—take a few minutes and do this. Stepping back and thinking about
    the project you just finished is a great way to seal the lessons you learned into
    your brain.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 我们是认真的——花几分钟时间去做这件事。退后一步，思考一下你刚刚完成的项目，这是将学到的经验融入你的大脑的好方法。
- en: '![Images](assets/pg705.png)'
  id: totrans-348
  prefs: []
  type: TYPE_IMG
  zh: '![Images](assets/pg705.png)'
- en: '*from [#dive_into_chash_statementscomma_classesc](ch02.html#dive_into_chash_statementscomma_classesc)*
    dive into C#'
  id: totrans-349
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*来自[#dive_into_chash_statementscomma_classesc](ch02.html#dive_into_chash_statementscomma_classesc)*
    深入学习C#'
- en: Note
  id: totrans-350
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: This is the Blazor version of the Windows desktop project in [#dive_into_chash_statementscomma_classesc](ch02.html#dive_into_chash_statementscomma_classesc).
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 这是[#dive_into_chash_statementscomma_classesc](ch02.html#dive_into_chash_statementscomma_classesc)
    中 Windows 桌面项目的 Blazor 版本。
- en: Note
  id: totrans-352
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**The last part of [#dive_into_chash_statementscomma_classesc](ch02.html#dive_into_chash_statementscomma_classesc)
    is a Windows project to experiment with different kinds of controls. We’ll use
    Blazor to build a similar project to experiment with web controls.**'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '**[#dive_into_chash_statementscomma_classesc](ch02.html#dive_into_chash_statementscomma_classesc)
    的最后一部分是一个 Windows 项目，用于尝试不同类型的控件。我们将使用 Blazor 来构建一个类似的项目，以尝试 Web 控件。**'
- en: Controls drive the mechanics of your user interfaces
  id: totrans-354
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 控件驱动用户界面的机制
- en: 'In the last chapter, you built a game using Button **controls**. But there
    are a lot of different ways that you can use controls, and the choices you make
    about what controls to use can really change your app. Does that sound weird?
    It’s actually really similar to the way we make choices in game design. If you’re
    designing a tabletop game that needs a random number generator, you can choose
    to use dice, a spinner, or cards. If you’re designing a platformer, you can choose
    to have your player jump, double jump, wall jump, or fly (or do different things
    at different times). The same goes for apps: if you’re designing an app where
    the user needs to enter a number, you can choose from different control to let
    them do that—***and that choice affects how your user experiences the app.***'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，你使用了按钮**控件**来制作了一个游戏。但是有很多不同的方式可以使用控件，而你选择使用哪些控件会真正改变你的应用。听起来很奇怪吗？其实这与我们在游戏设计中做选择的方式非常相似。如果你设计一个需要随机数生成器的桌面游戏，你可以选择使用骰子、旋转器或者卡片。如果你设计一个平台游戏，你可以选择让你的玩家跳跃、双重跳跃、墙壁跳跃或者飞行（或者在不同时间做不同的事情）。对应用程序也是一样的：如果你设计一个用户需要输入数字的应用程序，你可以选择不同的控件让他们这样做
    —— ***而这个选择会影响用户体验应用程序的方式***。
- en: '![Images](assets/pg706-1.png)'
  id: totrans-356
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg706-1.png)'
- en: A **text box** lets a user enter any text they want. But we need a way to make
    sure they’re only entering numbers and not just any text.
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文本框** 允许用户输入任何文本。但我们需要一种方法来确保他们只输入数字，而不是任意文本。'
- en: '![Images](assets/pg706-2.png)'
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg706-2.png)'
- en: '**Sliders** are used exclusively to choose a number. Phone numbers are just
    numbers, too, so *technically* you could use a slider to choose a phone number.
    Do you think that’s a good choice?'
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**滑块** 专门用于选择数字。电话号码也只是数字，所以从技术上讲，你可以使用滑块来选择电话号码。你认为这是一个好的选择吗？'
- en: '![Images](assets/pg706-3.png)'
  id: totrans-360
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg706-3.png)'
- en: '**Pickers** are controls that are specially built to pick a specific type of
    value from a list. For example, **date pickers** let you specify a date by picking
    its year, month, and day, and **color pickers** let you choose a color using a
    spectrum slider or by its numeric value.'
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**选择器** 是专门设计用来从列表中选择特定类型值的控件。例如，**日期选择器** 允许你通过选择年、月和日来指定日期，而 **颜色选择器** 则允许你使用色谱滑块或其数值来选择颜色。'
- en: '![Images](assets/pg706-4.png)'
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg706-4.png)'
- en: '**Radio buttons** let you restrict the user’s choice. They often look like
    circles with dots in them, but you can style them to look like regular buttons
    too.'
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**单选按钮** 允许你限制用户的选择。它们通常看起来像有点的圆圈，但你也可以将它们样式化成普通按钮的样子。'
- en: '![Images](assets/pg706-5.png)![Images](assets/pg706-6.png)'
  id: totrans-364
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg706-5.png)![图片](assets/pg706-6.png)'
- en: Create a new Blazor WebAssembly App project
  id: totrans-365
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个新的 Blazor WebAssembly 应用程序项目
- en: Earlier in this ***Visual Studio for Mac Learner’s Guide***, you created a Blazor
    WebAssembly App project for your animal matching game. You’ll do the same thing
    for this project, too.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 在此***Visual Studio for Mac 学习指南*** 的前面，你为你的动物匹配游戏创建了一个 Blazor WebAssembly 应用程序项目。你也将为这个项目做同样的事情。
- en: '***Here’s a concise set of steps to follow to create a Blazor WebAssembly App
    project, change the title text for the main page, and remove the extra files that
    Visual Studio creates. We won’t repeat this for every additional project in this
    guide—you should be able to follow these same instructions for all of the future
    Blazor WebAssembly App projects.***'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: '***这里是创建 Blazor WebAssembly 应用程序项目、更改主页标题文本和删除 Visual Studio 创建的额外文件的简洁步骤集。我们不会在本指南的每个附加项目中重复这些步骤
    —— 你应该能够对所有未来的 Blazor WebAssembly 应用程序项目都使用相同的指令。***'
- en: '**Create a new Blazor WebAssembly App project.**'
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建一个新的 Blazor WebAssembly 应用程序项目。**'
- en: Either start up Visual Studio 2019 for Mac or choose *File >> New Solution...*
    (![Images](assets/pg707-01.png)) from the menu to **bring up the New Project window.
    Click New** to create a new project. Name it **ExperimentWithControlsBlazor**.
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要么启动 Visual Studio 2019 for Mac，或者从菜单中选择 *File >> New Solution...*（![图片](assets/pg707-01.png)）来**打开新项目窗口。点击
    New** 创建一个新项目。将其命名为 **ExperimentWithControlsBlazor**。
- en: '**Change the title and navigation menu.**'
  id: totrans-370
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**更改标题和导航菜单。**'
- en: 'At the end of the animal matching game project, you modified the title and
    navigation bar text. Do the same for this project. Expand the **wwwroot folder**
    and edit *Index.html*. Find the line that starts `<title>` and **modify it** so
    it looks like this: `<title> **Experiment with Controls** </title>`'
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在动物匹配游戏项目的结尾，您修改了标题和导航栏文本。对于此项目，也要执行相同的操作。展开 **wwwroot 文件夹** 并编辑 *Index.html*。找到以
    `<title>` 开头的行，并**修改它**，使其看起来像这样：`<title> **Experiment with Controls** </title>`
- en: 'Expand the **Shared folder** in the solution and **double-click on *NavMenu.razor*.**
    Find this line:'
  id: totrans-372
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在解决方案中扩展 **Shared 文件夹** 并**双击 *NavMenu.razor*。** 找到这一行：
- en: '[PRE14]'
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: and **replace it with this:**
  id: totrans-374
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 并**用此代码替换它**：
- en: '[PRE15]'
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '**Remove the extra navigation menu options and their corresponding files.**'
  id: totrans-376
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**删除额外的导航菜单选项及其对应的文件。**'
- en: This is just like what you did at the end of the animal matching game project.
    **Double-click on *NavMenu.razor* and delete these lines:**
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这就像您在动物匹配游戏项目的结尾所做的那样。**双击 *NavMenu.razor* 并删除这些行：**
- en: '![Images](assets/pg707.png)'
  id: totrans-378
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg707.png)'
- en: 'Then hold down ![Images](assets/pg707-1.png) (Command) and **click to multiselect
    these files** in the Solution window: ***Counter.razor*** and ***FetchData.razor***
    in the Pages folder, ***SurveyPrompt.razor*** in the Shared folder, and the **entire
    sample-data** folder inside the wwwroot folder. Once they’re all selected, right-click
    on one of them and **choose Delete** ( ![Images](assets/pg707-2.png) ) from the
    menu to delete them.'
  id: totrans-379
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后按住 ![图片](assets/pg707-1.png)（Command 键），并**单击以多选这些文件**在解决方案窗口中：在 Pages 文件夹中的
    ***Counter.razor*** 和 ***FetchData.razor***，在 Shared 文件夹中的 ***SurveyPrompt.razor***，以及
    wwwroot 文件夹中的 **entire sample-data** 文件夹。一旦它们都被选中，右键单击其中一个文件，然后从菜单中选择 **Delete**（
    ![图片](assets/pg707-2.png) ）来删除它们。
- en: Create a page with a slider control
  id: totrans-380
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个带有滑块控件的页面
- en: Many of your programs will need the user to input numbers, and one of the most
    basic controls to input a number is a **slider**, also known as a **range input**.
    Let’s create a new Razor page that uses a slider to update a value.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 您的许多程序都需要用户输入数字，而输入数字的最基本控件之一是**滑块**，也称为**范围输入**。让我们创建一个新的 Razor 页面，使用滑块来更新一个值。
- en: '**Replace the Index.razor page.**'
  id: totrans-382
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**替换 Index.razor 页面。**'
- en: Open *Index.razor* and **replace** all of its contents with **this HTML markup:**
  id: totrans-383
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 打开 *Index.razor* 并**用此 HTML 标记替换**其所有内容：
- en: '![Images](assets/pg708-1.png)'
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg708-1.png)'
- en: '**Run your app.**'
  id: totrans-385
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**运行您的应用程序。**'
- en: Run your app just like you did with the app in [#start_building_with_chash_build_somethin](ch01.html#start_building_with_chash_build_somethin).
    Compare the HTML markup with the page displayed in the browser—match up the individual
    `<div>` blocks with what’s displayed on the page.
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 运行您的应用程序，就像您在 [#start_building_with_chash_build_somethin](ch01.html#start_building_with_chash_build_somethin)
    中所做的那样。将 HTML 标记与浏览器中显示的页面进行比较 - 将各个 `<div>` 块与页面上显示的内容匹配起来。
- en: '![Images](assets/pg708-2.png)'
  id: totrans-387
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg708-2.png)'
- en: '**Add C# code to your page.**'
  id: totrans-388
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**将 C# 代码添加到您的页面中。**'
- en: 'Go back to *Index.razor* and **add this C# code** to the bottom of the file:'
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回到 *Index.razor* 并在文件底部**添加此 C# 代码**：
- en: '![Images](assets/pg709-1.png)'
  id: totrans-390
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg709-1.png)'
- en: '**Hook up your range control to the Change event handler you just added.**'
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**将您的范围控件连接到刚刚添加的 Change 事件处理程序。**'
- en: 'Add an `@onchange` attribute to your range control:'
  id: totrans-392
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为您的范围控件添加一个 `@onchange` 属性：
- en: '![Images](assets/pg709-2.png)'
  id: totrans-393
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg709-2.png)'
- en: Add a text input to your app
  id: totrans-394
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向您的应用程序添加一个文本输入
- en: The goal of this project is to experiment with different kinds of controls,
    so let’s add a **text input control** so users can type text into the app and
    have it display at the bottom of the page.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目的目标是尝试不同类型的控件，因此让我们添加一个**文本输入控件**，使用户可以在应用程序中输入文本并在页面底部显示。
- en: '**Add a text input control to your page’s HTML markup.**'
  id: totrans-396
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**向您页面的 HTML 标记中添加一个文本输入控件。**'
- en: '**Add an** `**<input ... />**` **tag** that’s almost identical to the one you
    added for the slider. The only difference is that you’ll set the `type` attribute
    to `"text"` instead of `"range"`. Here’s the HTML markup:'
  id: totrans-397
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**添加一个** `**<input ... />**` **标签**，几乎与您为滑块添加的标签相同。唯一的区别在于，您将 `type` 属性设置为
    `"text"` 而不是 `"range"`。以下是 HTML 标记：'
- en: '![Images](assets/pg710-1.png)'
  id: totrans-398
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg710-1.png)'
- en: '**Run your app again**—now it has a text input control. Any text you enter
    will show up at the bottom of the page. Try changing the text, then moving the
    slider, then changing the text again. The value at the bottom will change each
    time you modify a control.'
  id: totrans-399
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**再次运行你的应用程序** —— 现在它有一个文本输入控件。无论你输入什么文本，它都会显示在页面底部。尝试修改文本，然后移动滑块，然后再次修改文本。每次修改控件时，页面底部的值都会更改。'
- en: '![Images](assets/pg710-2.png)'
  id: totrans-400
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图像](assets/pg710-2.png)'
- en: '**Add an event handler method that only accepts numeric values.**'
  id: totrans-401
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**添加一个仅接受数值的事件处理方法。**'
- en: 'What if you only want to accept numeric input from your users? **Add this method**
    to the code between the brackets at the bottom of the Razor page:'
  id: totrans-402
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你只想从用户那里接受数值输入，那该怎么办？**在 Razor 页面底部的大括号之间添加此方法：**
- en: '![Images](assets/pg711-1.png)'
  id: totrans-403
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图像](assets/pg711-1.png)'
- en: '**Change the text input to use the new event handler method.**'
  id: totrans-404
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**更改文本输入框以使用新的事件处理程序方法。**'
- en: 'Modify your text control’s `@onchange` attribute to call the new event handler:'
  id: totrans-405
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修改你的文本控件的 `@onchange` 属性，以调用新的事件处理程序：
- en: '[PRE16]'
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Now try entering text into the text input—it won’t update the value at the bottom
    of the page unless the text that you enter is an integer value.
  id: totrans-407
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在尝试将文本输入到文本输入框中 —— 除非你输入的文本是整数值，否则它不会更新页面底部的值。
- en: '![Images](assets/pg712.png)'
  id: totrans-408
  prefs: []
  type: TYPE_IMG
  zh: '![图像](assets/pg712.png)'
- en: Add color and date pickers to your app
  id: totrans-409
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为你的应用添加颜色选择器和日期选择器
- en: Pickers are just different types of inputs. A **date picker** has the input
    type `"date"` and a **color picker** has the input type `"color"`—other than that,
    the HTML markup for those input types is identical.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 选择器只是不同类型的输入。**日期选择器**的输入类型是 `"date"`，**颜色选择器**的输入类型是 `"color"` — 除此之外，这些输入类型的
    HTML 标记是相同的。
- en: 'Modify your app to **add a date picker and a color picker**. Here’s the HTML
    markup—add it just above the `<div>` tag that contains the display value:'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 修改你的应用程序，**添加一个日期选择器和一个颜色选择器**。这是 HTML 标记 — 将它添加到包含显示值的 `<div>` 标记的上方：
- en: '![Images](assets/pg713-1.png)![Images](assets/pg713-2.png)'
  id: totrans-412
  prefs: []
  type: TYPE_IMG
  zh: '![图像](assets/pg713-1.png)![图像](assets/pg713-2.png)'
- en: Note
  id: totrans-413
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**That’s the end of the project—great job! You can pick up [#dive_into_chash_statementscomma_classesc](ch02.html#dive_into_chash_statementscomma_classesc)
    at the very end, where there’s a person in a chair thinking this: THERE ARE SO
    MANY DIFFERENT WAYS FOR USERS TO CHOOSE NUMBERS!**'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: '**这就是项目的结尾 — 做得很棒！你可以在结尾处继续学习 [#dive_into_chash_statementscomma_classesc](ch02.html#dive_into_chash_statementscomma_classesc)，在那里有一个坐在椅子上思考的人，他在想：用户有很多不同的选择数字的方式！**'
- en: from [#objectshellipget_orientedexclamation_mar](ch03.html#objectshellipget_orientedexclamation_mar)
    objects...get oriented!
  id: totrans-415
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 来自 [#objectshellipget_orientedexclamation_mar](ch03.html#objectshellipget_orientedexclamation_mar)
    的对象…… 以获取方向！
- en: Note
  id: totrans-416
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: This is the Blazor version of the Windows desktop project in [#objectshellipget_orientedexclamation_mar](ch03.html#objectshellipget_orientedexclamation_mar).
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 Windows 桌面项目在 [#objectshellipget_orientedexclamation_mar](ch03.html#objectshellipget_orientedexclamation_mar)
    的 Blazor 版本。
- en: Note
  id: totrans-418
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**Partway through [#objectshellipget_orientedexclamation_mar](ch03.html#objectshellipget_orientedexclamation_mar),
    there’s a project where you build a Windows version of the card picker app. We’ll
    use Blazor to build a web-based version of the same app.**'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: '**在 [#objectshellipget_orientedexclamation_mar](ch03.html#objectshellipget_orientedexclamation_mar)
    的中途，有一个项目，你将构建一个 Windows 版本的卡片选择器应用程序。我们将使用 Blazor 来构建同样功能的基于 Web 的版本。**'
- en: 'Up next: build a Blazor version of your card picking app'
  id: totrans-420
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接下来：构建你的卡片选择应用的 Blazor 版本
- en: 'In the next project, you’ll build a Blazor app called PickACardBlazor. It will
    use a slider to let you choose the number of random cards to pick and display
    those cards in a list. Here’s what it will look like:'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的项目中，你将构建一个名为 PickACardBlazor 的 Blazor 应用程序。它将使用滑块来让你选择随机抽取的卡片数量，并在列表中显示这些卡片。以下是它的外观：
- en: '![Images](assets/pg714.png)'
  id: totrans-422
  prefs: []
  type: TYPE_IMG
  zh: '![图像](assets/pg714.png)'
- en: Reuse your CardPicker class in a new Blazor app
  id: totrans-423
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在一个新的 Blazor 应用中重用你的 CardPicker 类
- en: '***Reuse this!***'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: '***重用这个！***'
- en: If you’ve written a class for one program, you’ll often want to use the same
    behavior in another. That’s why one of the big advantages of using classes is
    that they make it easier to **reuse** your code. Let’s give your card picker app
    a shiny new user interface, but keep the same behavior by reusing your CardPicker
    class.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经为一个程序编写了一个类，你通常会希望在另一个程序中使用相同的行为。这就是使用类的一个重要优势 — 它们使得代码**重用**更加容易。让我们为你的卡片选择器应用程序设计一个闪亮的新用户界面，但通过重用你的
    CardPicker 类来保持相同的行为。
- en: '**Create a new Blazor WebAssembly App project called PickACardBlazor.**'
  id: totrans-426
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建一个名为 PickACardBlazor 的新 Blazor WebAssembly 应用项目。**'
- en: 'You’ll follow exactly the same steps you used to create your animal matching
    game in [#start_building_with_chash_build_somethin](ch01.html#start_building_with_chash_build_somethin):'
  id: totrans-427
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你将按照创建动物匹配游戏中使用的完全相同的步骤来创建你的应用程序[#start_building_with_chash_build_somethin](ch01.html#start_building_with_chash_build_somethin)：
- en: Open Visual Studio and create a new project.
  id: totrans-428
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打开Visual Studio并创建一个新项目。
- en: Select **Blazor WebAssembly App**, just like you did with your previous Blazor
    apps.
  id: totrans-429
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择**Blazor WebAssembly App**，就像你之前在其他Blazor应用程序中做的那样。
- en: Name your new app **PickACardBlazor**. Visual Studio will create the project.
  id: totrans-430
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 给你的新应用程序取名为**PickACardBlazor**。Visual Studio将创建该项目。
- en: '**Add the CardPicker class that you created for your Console App project.**'
  id: totrans-431
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**添加CardPicker类，该类是你为控制台应用程序项目创建的。**'
- en: 'Right-click on the project name and choose **Add >> Existing Files...** from
    the menu:'
  id: totrans-432
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 右键单击项目名称，然后从菜单中选择**添加 >> 现有文件...**：
- en: '![Images](assets/pg715-1.png)'
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg715-1.png)'
- en: Navigate to the folder with your console app and **click on** ***CardPicker.cs***
    to add it to your project. Visual Studio will ask you if you want to copy, move,
    or link to the file. Tell Visual Studio to **copy the file**. Your project should
    now have a copy of the *CardPicker.cs* file from your console app.
  id: totrans-434
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 转到包含你的控制台应用程序的文件夹，然后**单击*CardPicker.cs***将其添加到你的项目中。Visual Studio会询问你是否要复制、移动或链接文件。告诉Visual
    Studio**复制文件**。你的项目现在应该有来自控制台应用程序的*CardPicker.cs*文件的副本。
- en: '**Change the namespace for the CardPicker class.**'
  id: totrans-435
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**更改CardPicker类的命名空间。**'
- en: '**Double-click on *CardPicker.cs*** in the Solution window. It still has the
    namespace from the console app. **Change the namespace** to match your project
    name:'
  id: totrans-436
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**双击*CardPicker.cs***在解决方案窗口中。它仍然具有来自控制台应用程序的命名空间。**更改命名空间**以匹配你的项目名称：'
- en: '![Images](assets/pg715-2.png)'
  id: totrans-437
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg715-2.png)'
- en: '***Congratulations, you’ve reused your CardPicker class!*** You should see
    the class in the Solution window, and you’ll be able to use it in the code for
    your Blazor app.'
  id: totrans-438
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '***恭喜，你已经重用了你的CardPicker类！*** 你应该在解决方案窗口中看到这个类，并且可以在你的Blazor应用程序的代码中使用它。'
- en: The page is laid out with rows and columns
  id: totrans-439
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 页面使用行和列布局。
- en: 'The Blazor apps in [#start_building_with_chash_build_somethin](ch01.html#start_building_with_chash_build_somethin)
    and [#dive_into_chash_statementscomma_classesc](ch02.html#dive_into_chash_statementscomma_classesc)
    used HTML markup to create rows and columns, and this new app does the same thing.
    Here’s a picture that shows you how your app will be laid out:'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 在[#start_building_with_chash_build_somethin](ch01.html#start_building_with_chash_build_somethin)和[#dive_into_chash_statementscomma_classesc](ch02.html#dive_into_chash_statementscomma_classesc)中使用HTML标记来创建行和列，而这个新应用程序也是如此。下面是显示应用程序布局的图片：
- en: '![Images](assets/pg716.png)'
  id: totrans-441
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg716.png)'
- en: The slider uses data binding to update a variable
  id: totrans-442
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 滑块使用数据绑定来更新一个变量。
- en: 'The code at the bottom of the page will start with a variable called `numberOfCards`:'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 页面底部的代码将从一个名为`numberOfCards`的变量开始：
- en: '[PRE17]'
  id: totrans-444
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'You *could* use an event handler to update `numberOfCards`, but Blazor has
    a better way: **data binding**, which lets you set up your input controls to automatically
    update your C# code, and can automatically insert values from your C# code back
    into the page.'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 你*可以*使用事件处理程序来更新`numberOfCards`，但是Blazor有更好的方法：**数据绑定**，它允许你设置输入控件以自动更新你的C#代码，并且可以自动将你的C#代码的值插入页面中。
- en: 'Here’s the HTML markup for the header, the range input, and the text next to
    it that shows its value:'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是页眉、范围输入和显示其值的文本的HTML标记：
- en: '![Images](assets/pg717-1.png)'
  id: totrans-447
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg717-1.png)'
- en: Take a closer look at the attributes for the `input` tag. The `min` and `max`
    attributes restrict the input to values from 1 to 15\. The `**@bind**` attribute
    sets up the data binding, so any time the slider changes Blazor automatically
    updates `numberOfCards`.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细查看`<input>`标签的属性。`min`和`max`属性限制输入值为1到15之间。`**@bind**`属性设置数据绑定，因此每当滑块更改时，Blazor会自动更新`numberOfCards`。
- en: 'The `input` tag is followed by `<div class="col-2">**@numberOfCards</div>**`—that
    markup adds text (with `ml-2` adding space to the left margin). This also uses
    data binding, but to go in the other direction: every time the `numberOfCards`
    field is updated, Blazor automatically updates the text inside that `div` tag.'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: '`<input>`标签后面是`<div class="col-2">**@numberOfCards</div>**`—这段标记添加了文本（`ml-2`在左边距添加了空间）。这也使用数据绑定，但是反向操作：每当`numberOfCards`字段更新时，Blazor会自动更新该`<div>`标签内的文本。'
- en: Note
  id: totrans-450
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**That’s the end of the project—nice work! You can go back to [#objectshellipget_orientedexclamation_mar](ch03.html#objectshellipget_orientedexclamation_mar)
    and resume at the section with this heading: *Ana’s prototypes look great...***'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: '**这就是项目的结束——干得好！你可以回到[#objectshellipget_orientedexclamation_mar](ch03.html#objectshellipget_orientedexclamation_mar)并在标题为“Ana''s
    prototypes look great...”的部分继续。**'
- en: from [#types_and_references_getting_the_referen](ch04.html#types_and_references_getting_the_referen)
    types and references
  id: totrans-452
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 来自[#types_and_references_getting_the_referen](ch04.html#types_and_references_getting_the_referen)类型和引用
- en: Note
  id: totrans-453
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: This is the Blazor version of the Windows desktop project in [#types_and_references_getting_the_referen](ch04.html#types_and_references_getting_the_referen).
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Windows桌面项目的Blazor版本，位于[#types_and_references_getting_the_referen](ch04.html#types_and_references_getting_the_referen)。
- en: '**At the end of [#types_and_references_getting_the_referen](ch04.html#types_and_references_getting_the_referen)
    there’s a Windows project. We’ll build a Blazor version of it.**'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: '**在[#types_and_references_getting_the_referen](ch04.html#types_and_references_getting_the_referen)的结尾有一个Windows项目。我们将构建其Blazor版本。**'
- en: Welcome to Sloppy Joe’s Budget House o’ Discount Sandwiches!
  id: totrans-456
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 欢迎来到Sloppy Joe's Budget House o' Discount Sandwiches！
- en: Sloppy Joe has a pile of meat, a whole lotta bread, and more condiments than
    you can shake a stick at. What he doesn’t have is a menu! Can you build a program
    that makes a new *random* menu for him every day? You definitely can... with a
    **new Blazor WebAssembly App project**, some arrays, and a couple of useful new
    techniques.
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: Sloppy Joe有一堆肉，一大堆面包，比你能想象的调味品还多。但他没有菜单！你能建立一个每天为他制作新的*随机*菜单的程序吗？你绝对可以……通过一个**新的Blazor
    WebAssembly应用程序项目**，一些数组和一些有用的新技术。
- en: '***Do this!***'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: '***做这个！***'
- en: '![Images](assets/pg720.png)'
  id: totrans-459
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/pg720.png)'
- en: '**Add a new MenuItem class to your project and add its fields.**'
  id: totrans-460
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**向你的项目添加一个新的MenuItem类，并添加其字段。**'
- en: 'Have a look at the class diagram. It has six fields: an instance of Random,
    three arrays to hold the various sandwich parts, and string fields to hold the
    description and price. The array fields use **collection initializers**, which
    let you define the items in an array by putting them inside curly braces.'
  id: totrans-461
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 看一看类图。它有六个字段：一个Random实例，三个数组来保存各种三明治部件，以及用于保存描述和价格的字符串字段。数组字段使用**集合初始化器**，让你可以通过将项目放在大括号内来定义数组中的项目。
- en: '[PRE18]'
  id: totrans-462
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '**Add the Generate method to the MenuItem class.**'
  id: totrans-463
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**将Generate方法添加到MenuItem类中。**'
- en: This method uses the same Random.Next method you’ve seen many times to pick
    random items from the arrays in the Proteins, Condiments, and Breads fields and
    concatenate them together into a string.
  id: totrans-464
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此方法使用了你多次看到的Random.Next方法，从Proteins、Condiments和Breads字段的数组中随机选择项目，并将它们连接成一个字符串。
- en: '[PRE19]'
  id: totrans-465
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Note
  id: totrans-466
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**The Generate method makes a random price between 2.01 and 5.97 by converting
    two random ints to decimals. Have a close look at the last line—it returns `price.ToString("c")`.
    The parameter to the ToString method is a format. In this case, the `"c"` format
    tells ToString to format the value with the local currency: if you’re in the United
    States you’ll see a $; in the UK you’ll get a £, in the EU you’ll see €, etc.**'
  id: totrans-467
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**Generate方法通过将两个随机整数转换为小数来生成介于2.01到5.97之间的随机价格。仔细看最后一行——它返回`price.ToString("c")`。ToString方法的参数是一个格式。在这种情况下，`"c"`格式告诉ToString使用本地货币格式化值：如果你在美国，你会看到$；在英国，你会看到£；在欧盟，你会看到€等等。**'
- en: '**Add the page layout to your Index.razor file.**'
  id: totrans-468
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**将页面布局添加到你的Index.razor文件中。**'
- en: The menu page is made up of a series of Bootstrap rows, one for each menu item.
    Each row has two columns, a `col-9` with the menu item description and a `col-3`
    with the price. There’s one last row on the bottom with a centered `col-6` for
    the guacamole.
  id: totrans-469
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 菜单页面由一系列Bootstrap行组成，每个菜单项一个。每行有两列，`col-9`显示菜单项描述，`col-3`显示价格。页面底部有最后一行，`col-6`居中显示鳄梨酱。
- en: '![Images](assets/pg721.png)'
  id: totrans-470
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](assets/pg721.png)'
- en: Note
  id: totrans-471
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**That’s the end of the project! Resume at the Bullet Points at the very end
    of [#types_and_references_getting_the_referen](ch04.html#types_and_references_getting_the_referen).**'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: '**项目结束了！在[#types_and_references_getting_the_referen](ch04.html#types_and_references_getting_the_referen)的最后的项目符号处继续。**'
