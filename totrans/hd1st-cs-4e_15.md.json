["```cs\n    var writer = new StreamWriter(\"toaster oven.txt\", true);\n    ```", "```cs\n    writer.WriteLine($\"The {appliance} is set to {temp} degrees.\");\n    ```", "```cs\n    writer.Close();\n    ```", "```cs\nsw.WriteLine(\"Clone #{0} attacks {1}\",\n          number, location);\n```", "```cs\nHow I'll defeat Captain Amazing\nAnother genius secret plan by The Swindler\nI'll unleash my army of clones upon the citizens of\nObjectville.\nClone #1 attacks the mall\nClone #2 attacks downtown\nClone #3 attacks the mall\nClone #4 attacks downtown\nClone #5 attacks the mall\n```", "```cs\nstatic void Main(string[] args) {\n    Flobbo f = new Flobbo(\"blue yellow\");\n    StreamWriter sw = f.Snobbo();\n    f.Blobbo(f.Blobbo(f.Blobbo(sw), sw), sw);\n}\n```", "```cs\nstatic void Main(string[] args) {\n    Flobbo f = new Flobbo(\"blue yellow\");\n    StreamWriter sw = f.Snobbo();\n    f.Blobbo(f.Blobbo(f.Blobbo(sw), sw), sw);\n}\n```", "```cs\nTo: CaptainAmazing@objectville.net\nFrom: Commissioner@objectville.net\nSubject: Can you save the day... again?\n\nWe've discovered the Swindler's terrible plan:\nThe plan -> How I'll defeat Captain Amazing\nThe plan -> Another genius secret plan by The Swindler\nThe plan -> I'll unleash my army of clones upon the citizens of Objectville.\nThe plan -> Clone #1 attacks the mall\nThe plan -> Clone #2 attacks downtown\nThe plan -> Clone #3 attacks the mall\nThe plan -> Clone #4 attacks downtown\nThe plan -> Clone #5 attacks the mall\n\nCan you help us?\n```", "```cs\nusing (var reader = new StreamReader(\"secret_plan.txt\"))\nusing (var writer = new StreamWriter(\"email.txt\"))\n{\n     // statements that use reader and writer\n}\n```", "```cs\n    class Guy {\n        public string Name { get; set; }\n        public HairStyle Hair { get; set; }\n        public Outfit Clothes { get; set; }\n        public override string ToString() => $\"{Name} with {Hair} wearing {Clothes}\";\n    }\n\n    class Outfit {\n        public string Top { get; set; }\n        public string Bottom { get; set; }\n        public override string ToString() => $\"{Top} and {Bottom}\";\n    }\n\n    enum HairColor { \n       Auburn, Black, Blonde, Blue, Brown, Gray, Platinum, Purple, Red, White \n    }\n\n    class HairStyle {\n        public HairColor Color { get; set; }\n        public float Length { get; set; }\n        public override string ToString() => $\"{Length:0.0} inch {Color} hair\";\n    }\n    ```", "```cs\n    static void Main(string[] args) {\n        var guys = new List<Guy>() {\n           new Guy() { Name = \"Bob\", Clothes = new Outfit() { Top = \"t-shirt\", Bottom = \"jeans\" },\n              Hair = new HairStyle() { Color = HairColor.Red, Length = 3.5f }\n           },\n           new Guy() { Name = \"Joe\", Clothes = new Outfit() { Top = \"polo\", Bottom = \"slacks\" },\n              Hair = new HairStyle() { Color = HairColor.Gray, Length = 2.7f }\n           },\n        };\n    }\n    ```", "```cs\n    using System.Text.Json;\n    ```", "```cs\n        var jsonString = JsonSerializer.Serialize(guys);\n        Console.WriteLine(jsonString);\n    ```", "```cs\n    [{\"Name\":\"Bob\",\"Hair\":{\"Color\":8,\"Length\":3.5},\"Clothes\":{\"Top\":\"t-shirt\",\"Bot\n    tom\":\"jeans\"}},{\"Name\":\"Joe\",\"Hair\":{\"Color\":5,\"Length\":2.7},\"Clothes\":{\"Top\":\n    \"polo\",\"Bottom\":\"slacks\"}}]\n    ```", "```cs\n    var copyOfGuys = JsonSerializer.Deserialize<List<Guy>>(jsonString);\n    foreach (var guy in copyOfGuys)\n        Console.WriteLine(\"I deserialized this guy: {0}\", guy);\n    ```", "```cs\n    I deserialized this guy: Bob with 3.5 inch Red hair wearing t-shirt and jeans\n    I deserialized this guy: Joe with 2.7 inch Gray hair wearing polo and slacks\n    ```", "```cs\nNext dude: Joe with 2.7 inch Gray hair hair\nNext dude: Bob with 3.5 inch Red hair hair\n```", "```cs\n    Console.WriteLine(\"Hello \");\n```", "```cs\n    foreach (byte b in eurekaBytes)\n        Console.Write(\"{0:x2} \", b);\n    Console.WriteLine();\n    ```", "```cs\n    File.WriteAllText(\"elephant1.txt\", \"\\uD83D\\uDC18\");\n    File.WriteAllText(\"elephant2.txt\", \"\\U0001F418\");\n    ```", "```cs\n      using (var output = File.Create(\"binarydata.dat\"))\n      using (var writer = new BinaryWriter(output))\n      {\n    ```", "```cs\n      byte[] dataWritten = File.ReadAllBytes(\"binarydata.dat\");\n      foreach (byte b in dataWritten)\n          Console.Write(\"{0:x2} \", b);\n      Console.WriteLine(\" - {0} bytes\", dataWritten.Length);\n    ```", "```cs\n    using (var input = File.OpenRead(\"binarydata.dat\"))\n    using (var reader = new BinaryReader(input))\n    {\n    ```", "```cs\n         Console.Write(\"int: {0}  string: {1}  bytes: \", intRead, stringRead);\n         foreach (byte b in byteArrayRead)\n             Console.Write(\"{0} \", b);\n         Console.Write(\" float: {0}  char: {1} \", floatRead, charRead);\n      }\n    ```", "```cs\n      int: 48769414  string: Hello!  bytes: 47 129 0 116  float: 491.695  char: E\n    ```", "```cs\nWhen you have eliminated the impossible, whatever remains, however\nimprobable, must be the truth. - Sherlock Holmes\n```", "```cs\n     0000: 57 68 65 6e 20 79 6f 75 -- 20 68 61 76 65 20 65 6c    When you have el\n     0010: 69 6d 69 6e 61 74 65 64 -- 20 74 68 65 20 69 6d 70    iminated the imp\n     0020: 6f 73 73 69 62 6c 65 2c -- 20 77 68 61 74 65 76 65    ossible, whateve\n     0030: 72 20 72 65 6d 61 69 6e -- 73 2c 20 68 6f 77 65 76    r remains, howev\n     0040: 65 72 20 69 6d 70 72 6f -- 62 61 62 6c 65 2c 20 6d    er improbable, m\n     0050: 75 73 74 20 62 65 20 74 -- 68 65 20 74 72 75 74 68    ust be the truth\n     0060: 2e 20 2d 20 53 68 65 72 -- 6c 6f 63 6b 20 48 6f 6c    . - Sherlock Hol\n     0070: 6d 65 73 0a             --                            mes.\n```", "```cs\n    using (var reader = new StreamReader(\"binarydata.dat\"))\n```", "```cs\n    // Write the actual characters in the byte array\n    var bufferContents = Encoding.UTF8.GetString(buffer);\n```", "```cs\n   if (buffer[i] < 0x20 || buffer[i] > 0x7F) buffer[i] = (byte)’.’;\n```", "```cs\n    0000: 86 29 e8 02 06 48 65 6c -- 6c 6f 21 2f 81 00 74 f6    .)...Hello!/..t.\n    0010: d8 f5 43 45             --                            ..CE\n```", "```cs\n   static void Main(string[] args)\n```"]