["```cs\n    Hello World!\n    ```", "```cs\n    <h1>Elementary, my dear Watson.</h1>\n    ```", "```cs\n        List<string> shuffledAnimals = new List<string>();\n    ```", "```cs\n        protected override void OnInitialized()\n        {\n            SetUpGame();\n        }\n    ```", "```cs\n    @using System.Timers\n    ```", "```cs\n     </div>\n     <div class=\"row\">\n     <h2>Matches found: @matchesFound</h2>\n     </div>\n        <div class=\"row\">\n            <h2>Time: @timeDisplay</h2>\n        </div>\n    </div>\n    ```", "```cs\n    List<string> shuffledAnimals = new List<string>();\n    int matchesFound = 0;\n    Timer timer;\n    int tenthsOfSecondsElapsed = 0;\n    string timeDisplay;\n    ```", "```cs\n    protected override void OnInitialized()\n    {\n        timer = new Timer(100);\n        timer.Elapsed += Timer_Tick;\n\n     SetUpGame();\n    }\n    ```", "```cs\n    private void SetUpGame()\n    {\n     Random random = new Random();\n     shuffledAnimals = animalEmoji\n     .OrderBy(item => random.Next())\n     .ToList();\n     matchesFound = 0;\n        tenthsOfSecondsElapsed = 0;\n    }\n    ```", "```cs\n    if (lastAnimalFound == string.Empty)\n    {\n     // First selection of the pair. Remember it.\n     lastAnimalFound = animal;\n     lastDescription = animalDescription;\n\n        timer.Start();\n    }\n    ```", "```cs\n    matchesFound++;\n    if (matchesFound == 8)\n    {\n        timer.Stop();\n        timeDisplay += \" - Play Again?\";\n\n     SetUpGame();\n    }\n    ```", "```cs\n    private void Timer_Tick(Object source, ElapsedEventArgs e)\n    {\n        InvokeAsync(() =>\n        {\n            tenthsOfSecondsElapsed++;\n            timeDisplay = (tenthsOfSecondsElapsed / 10F)\n                .ToString(\"0.0s\");\n            StateHasChanged();\n        });\n    }\n    ```", "```cs\n <a class=\"navbar-brand\" href=\"\">BlazorMatchGame</a> \n```", "```cs\n <a class=\"navbar-brand\" href=\"\">Animal Matching Game</a>\n```", "```cs\n       <a class=\"navbar-brand\" href=\"\">ExperimentWithControlsBlazor</a>\n    ```", "```cs\n       <a class=\"navbar-brand\" href=\"\">Experiment With Controls</a>\n    ```", "```cs\n     <input type=\"text\" placeholder=\"Enter text\"\n     @onchange=\"UpdateNumericValue\" />\n    ```", "```cs\n@code {\n    int numberOfCards = 5;\n```", "```cs\n    class MenuItem\n    {\n        public Random Randomizer = new Random();\n        public string[] Proteins = { \"Roast beef\", \"Salami\", \"Turkey\",\n                \"Ham\", \"Pastrami\", \"Tofu\" };\n        public string[] Condiments = { \"yellow mustard\", \"brown mustard\",\n               \"honey mustard\", \"mayo\", \"relish\", \"french dressing\" };\n        public string[] Breads = { \"rye\", \"white\", \"wheat\", \"pumpernickel\", \"a roll\" };\n\n        public string Description = \"\";\n        public string Price;\n    }\n    ```", "```cs\n        public void Generate()\n        {\n            string randomProtein = Proteins[Randomizer.Next(Proteins.Length)];\n            string randomCondiment = Condiments[Randomizer.Next(Condiments.Length)];\n            string randomBread = Breads[Randomizer.Next(Breads.Length)];\n            Description = randomProtein + \" with \" + randomCondiment + \" on \" + randomBread;\n\n            decimal bucks = Randomizer.Next(2, 5);\n            decimal cents = Randomizer.Next(1, 98); \n            decimal price = bucks + (cents * .01M);\n            Price = price.ToString(\"c\");\n        }\n    ```"]