- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Functional Programming (FP) is one of the greatest innovations in the history
    of software development, it’s also cool. Fun as well. Not only that, but it’s
    gaining traction year by year.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 函数式编程（FP）是软件开发历史上最伟大的创新之一，它也很酷。同样有趣。不仅如此，它每年都在增长。
- en: I attend developer’s conferences as often as I’m able, and I’ve noticed a trend.
    Each year, there always seems to be more content about Functional Programming,
    not less. There is often even an entire track dedicated to it, and the other talks
    even often include FP content somewhere as a talking point.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我尽可能经常参加开发者会议，并且我注意到一个趋势。每年，关于函数式编程的内容总是越来越多，而不是越来越少。甚至通常会有一个完整的轨道专门讨论它，其他讲座中也经常包含函数式编程内容作为讨论的一个点。
- en: It’s slowly, but surely, becoming a big deal. Why is that?
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 它正在慢慢地变得非常重要。为什么呢？
- en: With the growth of concepts like containerization and serverless applications,
    FP isn’t just a bit of fun for developer’s free-time projects; it’s not a fad
    that’ll be forgotten in a few years. It has real benefit to bring to our stakeholders.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 随着容器化和无服务器应用程序等概念的增长，函数式编程不仅仅是开发者空闲项目的一点乐趣；它不是几年后就会被遗忘的时尚。它真正有利于为我们的利益相关者带来益处。
- en: In the .NET world there are several additional factors at play.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在 .NET 世界中有几个额外因素在起作用。
- en: Mads Torgerson, the C# Lead Designer is himself a fan of functional programming,
    and one of the major driving forces behind the adoption of the functional paradigm
    into .NET. There’s also F# - the .NET functional language. F# and C# share a common
    runtime, consequently many functional features requested by the F# team often
    become available in C# in some form as well.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: C# 首席设计师 Mads Torgerson 本人也是函数式编程的粉丝，也是将函数式范式引入 .NET 背后的主要推动力之一。还有 F# - .NET
    的函数式语言。F# 和 C# 共享一个通用运行时，因此 F# 团队请求的许多函数特性最终也以某种形式在 C# 中得到实现。
- en: The big question though - What is it? And^([1](preface01.html#idm45400887144768)),
    will I need to learn an entire new programming language just to be able to use
    it? The good news is that if you’re a .NET developer, then you don’t need to spend
    large chunks of your own time learning a new technology just to stay up-to-date
    - you don’t even have to invest in another 3rd party library to add to your application’s
    dependencies - this is all possible with out-of-the-box C# code - albeit with
    a little tinkering around.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 但是一个重要的问题是 - 它是什么？而且^([1](preface01.html#idm45400887144768))，我需要学习一个全新的编程语言才能使用它吗？好消息是，如果你是
    .NET 开发者，那么你不需要花大量时间学习新技术来跟上时代 - 你甚至不需要投资于另一个第三方库以增加应用程序的依赖关系 - 这一切都可以通过现成的 C#
    代码实现 - 尽管可能需要进行一些调整。
- en: This book is going to introduce all the fundamental concepts of Functional Programming,
    demonstrate their benefits, and how they might be achieved in C# - not just for
    your own hobby programming, but with a very real eye towards how they can be used
    to bring immediate benefit to your work life as well.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将介绍函数式编程的所有基本概念，展示它们的好处，以及如何在 C# 中实现它们 - 不仅仅是为了你自己的业余编程，还着眼于如何在你的工作生活中立即获得益处。
- en: Who Should Read This Book?
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 谁应该阅读本书？
- en: This book is intended for developers - whether professional, students, or hobbyist
    - who already have a basic grounding in C#. You don’t need to be an expert, but
    you’ll need to be familiar with the basics, and feel comfortable putting together
    at least a relatively simply C# application.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向开发者 - 无论是专业人士、学生还是业余爱好者 - 他们已经对 C# 有了基础了解。你不需要成为专家，但需要熟悉基础知识，并且能够至少简单地组合一个
    C# 应用程序。
- en: There will be some more advanced .NET topics covered, but I’ll provide explainations
    when they come up.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书还将涵盖一些更高级的 .NET 主题，但在出现时我会提供解释。
- en: 'This book has been written with a few different catagories of people in mind:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书是为几类人写的：
- en: Those of you that have learned the basics of C#, but want to find ways to take
    your learning further. To learn more advanced techniques to write better, more
    robust code.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 那些已经学习了 C# 基础知识，但希望找到进一步学习的途径。学习更高级的技术，写出更好、更健壮的代码。
- en: .NET developers that have heard of Functional Programming, and perhaps even
    know what it is, but want to know how to get started writing code that way in
    C#.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: .NET 开发者听说过函数式编程，甚至可能知道它是什么，但想知道如何在 C# 中开始写这种方式的代码。
- en: F# developers looking for ways to keep using the Functional toys you’re used
    to.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: F# 开发者寻找继续使用你习惯的功能玩具的方法。
- en: Those migrating to .NET from another functional, or functional-supporting language
    (like Java).
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 那些从另一种函数式或支持函数式语言（如Java）迁移到.NET的人。
- en: Anyone that really, truly loves coding. If you spend all day writing code in
    the office, then come home to write more for fun, then this book is probably for
    you.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何真正热爱编码的人。如果你整天在办公室写代码，然后回家继续写，那么这本书可能适合你。
- en: Why I wrote this book
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么我写了这本书
- en: I’ve been interested in programming for as long as I can remember. When I was
    a young boy, we had a ZX Spectrum - an early British home computer developed by
    Sinclair Research in the early 80s. If anyone remembers the Commodore 64, it was
    a bit like that, but far more primitive. It had just 15 colours^([2](preface01.html#idm45400888509984))
    - and one of them was black. I had the more advanced model with 48k of memory,
    though my Dad had the earlier machine - the ZX81 - which had a single kilobyte
    of memory available (and rubber keys). It couldn’t even have colored-in character
    sprites, just areas of the screen, so your game avatar would change colour to
    that of whatever they were standing in front of. In short, it was pure awesome
    on toast.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我对编程感兴趣已经很久了。当我还是个小男孩时，我们有一台ZX Spectrum - 这是Sinclair Research在80年代初开发的一款早期英国家用电脑。如果有人记得Commodore
    64，它有点像那个，但原始得多。它只有15种颜色^([2](preface01.html#idm45400888509984)) - 其中一种是黑色。我有更先进的型号，有48k内存，虽然我爸爸有早期型号
    - ZX81 - 它只有1k内存（还有橡胶键）。它甚至不能有有颜色的字符精灵，只能有屏幕上的区域，所以你的游戏角色会根据他们站在前面的东西的颜色改变颜色。简而言之，它简直是黑科技中的极品。
- en: One of the best things about it was that it had an OS that effectively consisted
    of a text-based programming interface, and code was required to load a game (from
    a cassette tape, with the command LOAD “”), but there were also magazines and
    books for kids with code for games you could enter yourself, and it was from these
    that I developed my lasting obsession with the mysteries of computer code. Thanks
    so much, Usbourne Publishing!
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 其中最好的一点是，它具有一个基于文本的编程接口的操作系统，加载游戏需要使用代码（从盒式磁带，使用命令LOAD ""），但也有为孩子们准备的杂志和书籍，其中包含可供自行输入的游戏代码，正是从这些杂志和书籍中，我对计算机代码的奥秘产生了持久的痴迷。非常感谢，Usbourne
    Publishing！
- en: When I was around 14 years old or so, a computer-based careers advice program
    at school suggested I could think about taking up a career in software development.
    This is the first time I realised that you could take this silly hobby and turn
    it into something that you could actually make money from!
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 大约在我14岁左右时，学校的一个基于计算机的职业建议程序建议我考虑从事软件开发职业。这是我第一次意识到，你可以将这种愚蠢的爱好变成实际可以赚钱的东西！
- en: After University was over, it was time to get a proper job, and that was where
    I got my first exposure to C#. So, the next step, I supposed, was to learn how
    to develop code *properly*. Easy, right? I’ll be honest, nearly 2 decades on,
    and I’m still trying to work that out.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 大学毕业后，是时候找份正式工作了，那时我第一次接触到了C#。所以，接下来的步骤，我想，就是学习如何*正确地*开发代码。简单吧？说实话，将近20年过去了，我仍在努力摸索。
- en: One of the big turning points for me in my programming career was when I attended
    a developer’s conference in Norway, and finally started to understand what this
    “Functional Programming” thing I’d been hearing about was actually about. Functional
    code is elegant, concise and easy to read in a way that other forms of code just
    don’t seem to be. As with any type of code, it’s still possible to write horrible-looking
    codebases, but it still fundamentally feels like it’s finally code being done
    *properly*, in a way that I’ve never really felt from other styles of coding.
    Hopefully after reading this book, you’ll not only agree, but be interested in
    searching out the many other avenues that exist out there for exploring it further.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在我编程生涯中的一个重大转折点是，我参加了挪威的开发者会议，终于开始理解我一直听说的“函数式编程”究竟是什么。函数式代码优雅、简洁，易于阅读，这是其他形式的代码所不具备的特点。像任何类型的代码一样，仍然有可能编写看起来很糟糕的代码库，但它从根本上感觉就像是终于以*正确*的方式编写代码，这是其他编码风格从未给予我的感觉。希望在阅读本书后，你不仅会同意这一点，还会对探索更多其他方式感兴趣。
- en: Navigating This Book
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 阅读本书指南
- en: 'This is how I’ve organized this book:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书的组织方式如下：
- en: The introduction talks about what exactly Functional Programming is, where it
    comes from, and why any of us should be interested in it. I argue that it brings
    significant business benefits to our employers, and that it’s a skill worth adding
    to your developer toolbelt.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 介绍了什么是函数式编程，它的来源以及为什么我们中的任何人都应该对它感兴趣。我认为它为我们的雇主带来了重大的商业利益，并且这是值得添加到您的开发者工具包中的技能。
- en: Chapter 1 looks at what you can do right now to start coding Functionally in
    C#, without having to reference a single new Nuget package, 3rd party library
    or hack around with the language. Nearly all of the examples in this chapter work
    with just about every version of C# since version 3\. This chapter represents
    the very first steps into Functional Programming, all fairly easy code, but it
    sets the groundwork for what’s to come.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第1章讨论了您可以立即开始在C#中以函数式编程方式编码的方法，而无需引用任何新的Nuget包，第三方库或使用语言进行hack。本章中的几乎所有示例都适用于自C#版本3以来的几乎每个版本。本章代表了函数式编程的第一步，所有代码都相当简单，但为即将到来的内容奠定了基础。
- en: Chapter 2 provides some slightly less conventional ways to look at structures
    already available to us in C#. It includes ways to take the Functional Paradigm
    a bit futher. At this point there are still no extra code dependencies, but things
    start to look a bit more unusual here.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第2章提供了一些稍微不太常规的方法来看待我们在C#中已经可用的结构。它包括了将函数式范式推向更高级别的方法。在这一点上，仍然没有额外的代码依赖性，但是事情开始在这里看起来有点不同寻常。
- en: Chapters 4 to 7 each show a component of the Functional Programming paradigm
    and how you can go about implementing it in C#. It’s in these chapters that we
    start to play around with the structure of C# a little.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第4至7章分别展示了函数式编程范式的一个组成部分，以及如何在C#中实现它。在这些章节中，我们开始稍微调整C#的结构。
- en: Chapters 8 and 9 talk more about the practicalities of uing Functional C# in
    a business environment.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第8和9章更多地讨论了在商业环境中使用函数式C#的实际问题。
- en: Feel free to dive in at the level you feel ready for. This isn’t a novel^([3](preface01.html#idm45400888030352)),
    read the chapters in the order that makes sense to you.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 随时根据您准备好的水平深入研究。这不是一本小说^([3](preface01.html#idm45400888030352))，按照您认为合理的顺序阅读章节。
- en: Acknowledgments
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 致谢
- en: The very first person I should thank is Kathleen Dollard. She gave a talk at
    NDC Oslo some years ago called “Functional Techniques for C#”. It was the first
    real exposure I’d ever had to Functional Programming, and it was [a real eye-opener
    (https://www.youtube.com/watch?v=rHmIf5xmKQg)](https://www.youtube.com/watch?v=rHmIf5xmKQg).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我应该首先感谢的人是凯瑟琳·多拉德。几年前，她在NDC Oslo发表了一场名为“C#的函数式技术”的演讲。这是我第一次真正接触到函数式编程，这是我曾经有过的第一个真正的启发，[真是令人大开眼界（https://www.youtube.com/watch?v=rHmIf5xmKQg）](https://www.youtube.com/watch?v=rHmIf5xmKQg)。
- en: 'The other guru I’ve followed on this trail is Enrico Buananno, who’s book “Functional
    Programming in C#” (ISBN: 978-1617293955) was the first that allowed me to properly
    understand for the first time, how some of the hard-to-grasp functional concepts
    worked.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这条道路上跟随的另一位大师是恩里科·布安诺，他的书“C#中的函数式编程”（ISBN：978-1617293955）是我第一次真正理解一些难以理解的函数式概念是如何工作的。
- en: Ian Russell, Matthew Fletcher, Liam Riley, Max Dietze, Steve “Talks Code” Collins,
    Gerardo Lijs, Matt Eland, Rahul Nath, Siva Gudivada, Christian Horsdal, Martin
    Fuß, Dave McCollough, Sebastian Robbins, David Schaefer, Peter De Tender, Mark
    Seeman who read the early drafts and provided invaluable feedback. Thanks, folks!
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 伊恩·拉塞尔，马修·弗莱彻，利亚姆·莱利，马克斯·迪茨，史蒂夫“Talks Code”柯林斯，杰拉尔多·利斯，马特·伊兰德，拉胡尔·纳特，西瓦·古迪瓦达，克里斯蒂安·霍斯达尔，马丁·富斯，戴夫·麦科洛，塞巴斯蒂安·罗宾斯，大卫·谢弗，彼得·德·坦德，马克·西曼阅读了初稿并提供了宝贵的反馈。谢谢，伙计们！
- en: My editor, Jill Leonard. She must have the patience of a saint to put up with
    me for a whole year!
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我的编辑，吉尔·莱昂纳德。她必须有耐心像圣人一样忍受我整整一年！
- en: Conventions Used in This Book
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书使用的约定
- en: 'The following typographical conventions are used in this book:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用了以下排版约定：
- en: '*Italic*'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '*Italic*'
- en: Indicates new terms, URLs, email addresses, filenames, and file extensions.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 表示新术语，URL，电子邮件地址，文件名和文件扩展名。
- en: '`Constant width`'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`Constant width`'
- en: Used for program listings, as well as within paragraphs to refer to program
    elements such as variable or function names, databases, data types, environment
    variables, statements, and keywords.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 用于程序清单，以及在段落中引用程序元素，如变量或函数名称，数据库，数据类型，环境变量，语句和关键字。
- en: '**`Constant width bold`**'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**`Constant width bold`**'
- en: Shows commands or other text that should be typed literally by the user.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 显示用户应该按照字面意思输入的命令或其他文本。
- en: '*`Constant width italic`*'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '*`Constant width italic`*'
- en: Shows text that should be replaced with user-supplied values or by values determined
    by context.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 显示应该被用户提供的值或上下文确定的值替换的文本。
- en: Tip
  id: totrans-47
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: This element signifies a tip or suggestion.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 此元素表示提示或建议。
- en: Note
  id: totrans-49
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: This element signifies a general note.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 此元素表示一般注释。
- en: Warning
  id: totrans-51
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 警告
- en: This element indicates a warning or caution.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 此元素指示警告或注意事项。
- en: Using Code Examples
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用代码示例
- en: Supplemental material (code examples, exercises, etc.) is available for download
    at LINK TO COME.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 补充材料（代码示例、练习等）可以在[即将到来的链接](LINK TO COME)下载。
- en: If you have a technical question or a problem using the code examples, please
    send email to [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有关于代码示例的技术问题或使用问题，请发送电子邮件至[*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com)。
- en: This book is here to help you get your job done. In general, if example code
    is offered with this book, you may use it in your programs and documentation.
    You do not need to contact us for permission unless you’re reproducing a significant
    portion of the code. For example, writing a program that uses several chunks of
    code from this book does not require permission. Selling or distributing examples
    from O’Reilly books does require permission. Answering a question by citing this
    book and quoting example code does not require permission. Incorporating a significant
    amount of example code from this book into your product’s documentation does require
    permission.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在帮助您完成工作。一般情况下，如果本书提供示例代码，您可以在您的程序和文档中使用它。除非您复制了大部分代码，否则无需获得我们的许可。例如，编写一个使用本书多个代码片段的程序不需要许可。销售或分发O’Reilly图书的示例代码需要许可。引用本书并引用示例代码来回答问题不需要许可。将本书大量示例代码整合到产品文档中需要许可。
- en: 'We appreciate, but generally do not require, attribution. An attribution usually
    includes the title, author, publisher, and ISBN. For example: “*Functional Programming
    with C#* by Simon J. Painter (O’Reilly). Copyright 2024 Simon Painter, 978-1-492-09707-5.”'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感谢，但通常不需要归属。归属通常包括标题、作者、出版商和ISBN。例如：“*Functional Programming with C#* by Simon
    J. Painter (O’Reilly). Copyright 2024 Simon Painter, 978-1-492-09707-5.”
- en: If you feel your use of code examples falls outside fair use or the permission
    given above, feel free to contact us at [*permissions@oreilly.com*](mailto:permissions@oreilly.com).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您认为您使用的代码示例超出了公平使用范围或上述许可，请随时通过[*permissions@oreilly.com*](mailto:permissions@oreilly.com)联系我们。
- en: O’Reilly Online Learning
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: O’Reilly在线学习
- en: Note
  id: totrans-60
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: For more than 40 years, [*O’Reilly Media*](http://oreilly.com) has provided
    technology and business training, knowledge, and insight to help companies succeed.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 超过40年来，[*O’Reilly Media*](http://oreilly.com) 提供技术和业务培训、知识和见解，帮助企业成功。
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, and our online learning platform. O’Reilly’s online learning
    platform gives you on-demand access to live training courses, in-depth learning
    paths, interactive coding environments, and a vast collection of text and video
    from O’Reilly and 200+ other publishers. For more information, visit [*http://oreilly.com*](http://oreilly.com).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们独特的专家和创新者网络通过书籍、文章和我们的在线学习平台分享他们的知识和专业知识。O’Reilly的在线学习平台为您提供按需访问的现场培训课程、深入学习路径、交互式编码环境以及来自O’Reilly和200多个其他出版商的广泛的文本和视频。有关更多信息，请访问[*http://oreilly.com*](http://oreilly.com)。
- en: How to Contact Us
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何联系我们
- en: 'Please address comments and questions concerning this book to the publisher:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 请将有关本书的评论和问题寄给出版商：
- en: O’Reilly Media, Inc.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: O’Reilly Media, Inc.
- en: 1005 Gravenstein Highway North
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1005 Gravenstein Highway North
- en: Sebastopol, CA 95472
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sebastopol, CA 95472
- en: 800-998-9938 (in the United States or Canada)
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 800-998-9938（美国或加拿大）
- en: 707-829-0515 (international or local)
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 707-829-0515（国际或本地）
- en: 707-829-0104 (fax)
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 707-829-0104（传真）
- en: We have a web page for this book, where we list errata, examples, and any additional
    information. You can access this page at LINK TO COME.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们为这本书准备了一个网页，上面列出了勘误、示例和任何额外信息。您可以在[即将到来的链接](LINK TO COME)上访问这个页面。
- en: Email [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com) to comment
    or ask technical questions about this book.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 电子邮件[*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com) 用于对本书提出评论或技术问题。
- en: For news and information about our books and courses, visit [*http://oreilly.com*](http://oreilly.com).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 有关我们的书籍和课程的新闻和信息，请访问[*http://oreilly.com*](http://oreilly.com)。
- en: 'Find us on Facebook: [*http://facebook.com/oreilly*](http://facebook.com/oreilly)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在Facebook上找到我们：[*http://facebook.com/oreilly*](http://facebook.com/oreilly)
- en: 'Follow us on Twitter: [*http://twitter.com/oreillymedia*](http://twitter.com/oreillymedia)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 关注我们的Twitter：[*http://twitter.com/oreillymedia*](http://twitter.com/oreillymedia)
- en: 'Watch us on YouTube: [*http://www.youtube.com/oreillymedia*](http://www.youtube.com/oreillymedia)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 观看我们的YouTube频道：[*http://www.youtube.com/oreillymedia*](http://www.youtube.com/oreillymedia)
- en: Dedication
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 致辞
- en: This book is dedicated to my wife, Sushma Mahadik. My Billi. Also to my two
    daughters, Sophie and Katie. Your daddy loves you, girls.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书献给了我的妻子，Sushma Mahadik。我的宝贝。同时也献给我的两个女儿，Sophie和Katie。爸爸爱你们，女孩们。
- en: ^([1](preface01.html#idm45400887144768-marker)) OK, The **two** questions
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](preface01.html#idm45400887144768-marker)) 好的，**两个**问题
- en: ^([2](preface01.html#idm45400888509984-marker)) 8 base colors, and a bright
    version of each. One was Black, though, and how on earth can you have bright black!
    So..15.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](preface01.html#idm45400888509984-marker)) 8种基础颜色，以及每种颜色的明亮版本。其中一种是黑色，不过，地球上怎么可能有明亮的黑色！所以..15。
- en: ^([3](preface01.html#idm45400888030352-marker)) but if it were, you can guarantee
    the Butler would have done it!
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: ^([3](preface01.html#idm45400888030352-marker)) 但如果是这样，您可以保证巴特勒一定已经做到了！
