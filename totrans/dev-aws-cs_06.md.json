["```cs\nversion: 0.1\n\nenvironment_variables:\n  plaintext:\n    HUGO_VERSION: \"0.42\"\n\nphases:\n  install:\n    commands:\n      - cd /tmp\n      - wget https://github.com/gohugoio/hugo/releases/\\\n      download/v${HUGO_VERSION}/hugo_${HUGO_VERSION}_Linux-64bit.tar.gz\n      - tar -xzf hugo_${HUGO_VERSION}_Linux-64bit.tar.gz\n      - mv hugo /usr/bin/hugo\n      - cd -\n      - rm -rf /tmp/*\n  build:\n    commands:\n      - rm -rf public\n      - hugo\n  post_build:\n    commands:\n      - aws s3 sync public/ s3://<yourwebsite>.com/ --region us-west-2 --delete\n      - aws s3 cp s3://<yourwebsite>.com/\\\n      s3://<yourwebsite>.com/ --metadata-directive REPLACE \\\n        --cache-control 'max-age=604800' --recursive\n      - aws cloudfront create-invalidation --distribution-id=<YOURID> --paths '/*'\n      - echo Build completed on `date`\n```", "```cs\nname: .NET\non:\n  push:\n    branches: [ \"main\" ]\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n    - name: Setup .NET\n      uses: actions/setup-dotnet@v2\n      with:\n        dotnet-version: 5.0.x\n    - name: Restore dependencies ![1](assets/1.png)\n      run: dotnet restore\n    - name: Build ![2](assets/2.png)\n      run: dotnet build --no-restore\n    - name: Test ![3](assets/3.png)\n      run: dotnet test --no-build --verbosity normal\n```", "```cs\nmkdir HelloTests && cd HelloTests\n```", "```cs\nusing Xunit;\n\nnamespace MyFirstUnitTests\n{\n    public class UnitTest1\n    {\n [Fact] ![1](assets/1.png)\n        public void PassingTest()\n        {\n            Assert.Equal(4, Add(2, 2));\n        }\n        int Add(int x, int y) ![2](assets/2.png)\n        {\n            return x + y;\n        }\n    }\n}\n```", "```cs\nvar app = new App();\n\nnew MyFirstStack(app, \"dev\");\nnew MySecondStack(app, \"prod\");\n\napp.Synth();\n```"]