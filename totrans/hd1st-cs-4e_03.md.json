["```cs\n   Console.WriteLine(\"Hello World!\");\n```", "```cs\n int myHeight = 63;\n```", "```cs\n myHeight = 12;\n```", "```cs\n string z;\n string message = \"The answer is \" + z;\n```", "```cs\n    Console.WriteLine(\"Hello World!\");\n    ```", "```cs\n    OperatorExamples();\n    ```", "```cs\nprivate static void OperatorExamples()\n{\n  // This statement declares a variable and sets it to 3\n  int width = 3;\n\n  // The ++ operator increments a variable (adds 1 to it)\n  width++;\n\n  // Declare two more int variables to hold numbers and\n  // use the + and * operators to add and multiply values\n  int height = 2 + 4;\n  int area = width * height;\n  Console.WriteLine(area);\n\n  // The next two statements declare string variables\n  // and use + to concatenate them (join them together)\n  string result = \"The area\";\n  result = result + \" is \" + area;\n  Console.WriteLine(result);\n\n  // A Boolean variable is either true or false\n  bool truthValue = true;\n  Console.WriteLine(truthValue);\n}\n```", "```cs\n x < y (less than)\n x > y (greater than)\n x == y (equals - and yes, with two equals signs)\n```", "```cs\nwhile (x > 5)\n{\n  // Statements between these brackets will\n  // only run if x is greater than 5, then\n  // will keep looping as long as x > 5\n}\n```", "```cs\ndo\n{\n  // Statements between these brackets will run\n  // once, then keep looping as long as x > 5\n} while (x > 5);\n```", "```cs\n    while (area < 50)\n    {\n           height++;\n           area = width * height;\n\n    }\n```", "```cs\n    do\n    {\n        width--;\n        area = width * height;\n\n    } while (area > 25);\n```", "```cs\n    name = \"Joe\";\n    ```", "```cs\n    // this text is ignored\n    ```", "```cs\n    /* this comment\n     * spans multiple lines */\n    ```", "```cs\n    int weight;\n    // the variable's type is int and its name is weight\n    ```", "```cs\n    So this:      int      j      =            1234       ;\n    Is exactly the same as this: int j = 1234;\n    ```", "```cs\n    <Label Content=\"*Enter a number*\" FontSize=\"*18*\" Margin=\"*10,10,0,0*\" HorizontalAlignment=\"*Left*\" VerticalAlignment=\"*Top*\"/>\n    ```", "```cs\n    private void numberTextBox_TextChanged(object sender, TextChangedEventArgs e)\n    {\n\n    }\n    ```", "```cs\n    private void numberTextBox_TextChanged(object sender, TextChangedEventArgs e)\n    {\n        number.Text = numberTextBox.Text;\n    }\n    ```", "```cs\nprivate void numberTextBox_PreviewTextInput(object sender, TextCompositionEventArgs e)\n{\n    e.Handled = !int.TryParse(e.Text, out int result);\n}\n```", "```cs\n <TextBox x:Name=\"*numberTextBox*\" FontSize=\"*18*\" Margin=\"*10,49,0,0*\" Text=\"*0*\" Width=\"*120*\"\n          HorizontalAlignment=\"*Left*\" TextWrapping=\"*Wrap*\" VerticalAlignment=\"*Top*\"\n          TextChanged=\"*numberTextBox_TextChanged*\"\n          PreviewTextInput=\"***numberTextBox_PreviewTextInput***\"/>\n```", "```cs\n    private void smallSlider_ValueChanged(\n            object sender, RoutedPropertyChangedEventArgs<double> e)\n    {\n        number.Text = smallSlider.Value.ToString(\"0\");\n    }\n    ```", "```cs\n    private void RadioButton_Checked(\n            object sender, RoutedEventArgs e)\n    {\n        if (sender is RadioButton radioButton) {\n        number.Text = radioButton.Content.ToString();\n        }\n    }\n    ```", "```cs\n    private void myListBox_SelectionChanged(\n            object sender, SelectionChangedEventArgs e)\n    {\n      if (myListBox.SelectedItem is ListBoxItem listBoxItem) {\n          number.Text = listBoxItem.Content.ToString();\n      }\n    }\n    ```", "```cs\n    private void readOnlyComboBox_SelectionChanged(\n            object sender, SelectionChangedEventArgs e)\n    {\n        if (readOnlyComboBox.SelectedItem is ListBoxItem listBoxItem)\n            number.Text = listBoxItem.Content.ToString();\n    }\n    ```", "```cs\n    private void editableComboBox_TextChanged(object sender, TextChangedEventArgs e)\n    {\n        if (sender is ComboBox comboBox)\n            number.Text = comboBox.Text;\n    }\n    ```"]