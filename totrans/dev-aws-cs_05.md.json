["```cs\ndocker run -e \"ACCEPT_EULA=Y\" \\\n    -e \"SA_PASSWORD=ABC!1234!pass\" \\\n    -e \"MSSQL_PID=Express\" \\\n    -p 1433:1433 -it \\\n    -d mcr.microsoft.com/mssql/server:2019-latest\n```", "```cs\nsudo rpm -Uvh \\\nhttps://packages.microsoft.com/config/centos/7/packages-microsoft-prod.rpm\nsudo yum -y update\nsudo yum install dotnet-sdk-6.0\n```", "```cs\ndotnet new console -o hello \\\n    && cd hello \\\n    && dotnet run\n\n//Output of command below\nThe template \"Console App\" was created successfully.\n\nProcessing post-creation actions...\nRunning 'dotnet restore' on /home/ec2-user/environment/hello/hello.csproj...\n  Determining projects to restore...\n  Restored /home/ec2-user/environment/hello/hello.csproj (in 122 ms).\nRestore succeeded.\n\nHello, World!\n```", "```cs\nchmod +x resize.sh\n./resize.sh 50\n```", "```cs\nec2-user:~/environment/dot-net-6-aws (main) $ df -h\nFilesystem      Size  Used Avail Use% Mounted on\ndevtmpfs         32G     0   32G   0% /dev\ntmpfs            32G     0   32G   0% /dev/shm\ntmpfs            32G  536K   32G   1% /run\ntmpfs            32G     0   32G   0% /sys/fs/cgroup\n/dev/nvme0n1p1   50G  9.6G   41G  20% /\ntmpfs           6.3G     0  6.3G   0% /run/user/1000\ntmpfs           6.3G     0  6.3G   0% /run/user/0\n```", "```cs\ndotnet new web -n WebServiceAWS\n```", "```cs\nec2-user:~/environment/dot-net-6-aws (main) $ dotnet new web -n WebServiceAWS\nThe template \"ASP.NET Core Empty\" was created successfully.\nProcessing post-creation actions...\nRunning 'dotnet restore' on ...WebServiceAWS/\nDetermining projects to restore...\nRestored /home/ec2-user/environment/dot-net-6-aws/WebServiceAWS/\nRestore succeeded.\n```", "```cs\nvar builder = WebApplication.CreateBuilder(args);\nvar app = builder.Build();\napp.MapGet(\"/\", () => \"Home Page\");\napp.MapGet(\"/hello/{name:alpha}\", (string name) => $\"Hello {name}!\");\napp.Run();\n```", "```cs\ncd WebServiceAWS && dotnet run\n```", "```cs\nec2-user:~/environment/dot-net-6-aws (main) $ cd WebServiceAWS && dotnet run\nBuilding...\ninfo: Microsoft.Hosting.Lifetime[14]\n      Now listening on: https://localhost:7117\ninfo: Microsoft.Hosting.Lifetime[14]\n      Now listening on: http://localhost:5262\ninfo: Microsoft.Hosting.Lifetime[0]\n      Application started. Press Ctrl+C to shut down.\n      Content root path: /home/ec2-user/environment/dot-net-6-aws/WebServiceAWS/\n```", "```cs\nFROM mcr.microsoft.com/dotnet/sdk:6.0 AS build ![1](assets/1.png)\nWORKDIR /src\nCOPY [\"WebServiceAWS.csproj\", \"./\"]\nRUN dotnet restore \"WebServiceAWS.csproj\"\nCOPY . .\nWORKDIR \"/src/.\"\nRUN dotnet build \"WebServiceAWS.csproj\" -c Release -o /app/build\nFROM build AS publish\nRUN dotnet publish \"WebServiceAWS.csproj\" -c Release -o /app/publish\nFROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base\nWORKDIR /app\nEXPOSE 8080\nENV ASPNETCORE_URLS=http://+:8080\nWORKDIR /app\nCOPY --from=publish /app/publish .\nENTRYPOINT [\"dotnet\", \"WebServiceAWS.dll\"] ![2](assets/2.png)\n```", "```cs\ndocker build . -t web-service-dotnet:latest\n```", "```cs\nweb-service-dotnet  latest  3c191e7643d5   38 seconds ago   208MB\n```", "```cs\ndocker run -p 8080:8080 web-service-dotnet:latest\n```", "```cs\n listening on: {address}\"}}\n{\"EventId\":0,\"LogLevel\":\"Information\",\"Category\"..}\n{\"EventId\":0,\"LogLevel\":\"Information\",\"Category\"...\n...{contentRoot}\"}}\n```", "```cs\ndotnet tool update -g aws.deploy.tools\n```", "```cs\ndotnet new blazorserver -o BlazorApp -f net6.0\n```", "```cs\ncd BlazorApp\n```", "```cs\ndotnet run --urls=http://localhost:8080\n```", "```cs\n@page \"/\"\n<PageTitle>Index</PageTitle>\n<h1>Hello, AWS dotnet aws deploy!</h1>\nWelcome to your new app.\n```", "```cs\nFROM mcr.microsoft.com/dotnet/sdk:6.0 AS build\nWORKDIR /src\nCOPY [\"BlazorApp.csproj\", \"./\"]\nRUN dotnet restore \"BlazorApp.csproj\"\nCOPY . .\nRUN dotnet publish \"BlazorApp.csproj\" -c Release -o /app/publish\nFROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base\nWORKDIR /app\nEXPOSE 80\nEXPOSE 443\nWORKDIR /app\nCOPY --from=build /app/publish\nENTRYPOINT [\"dotnet\", \"BlazorApp.dll\"]\n```", "```cs\ndotnet aws deploy\n```", "```cs\nRecommended Deployment Option\n1: ASP.NET Core App to Amazon ECS using Fargate...\n```"]