["```cs\ndotnet new console\n```", "```cs\n// See https://aka.ms/new-console-template for more information\nConsole.WriteLine(\"Hello, World!\");\n\n```", "```cs\ndotnet run\n```", "```cs\nusing System;\n\ninternal class Program\n{\n    private static void Main(string[] args)\n    {\n        Console.WriteLine(\"Hello, World!\");\n    }\n}\n```", "```cs\ndotnet new sln\n```", "```cs\ndotnet new console -o Averages\ndotnet new mstest -o Averages.Tests\n```", "```cs\ndotnet sln add ./Averages/Averages.csproj\ndotnet sln add ./Averages.Tests/Averages.Tests.csproj\n```", "```cs\ndotnet add ./Averages.Tests/Averages.Tests.csproj reference\n./Averages/Averages.csproj\n```", "```cs\ncode .\n```", "```cs\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\n\nnamespace Averages.Tests;\n [TestClass]\npublic class WhenCalculatingAverages\n{\n    `[TestMethod]`\n    `public` `void` `SingleInputShouldProduceSameValueAsResult``(``)`\n    `{`\n        `string``[``]` `inputs` `=` `{` `\"1\"` `}``;`\n        `double` `result` `=` `AverageCalculator``.``ArithmeticMean``(``inputs``)``;`\n        `Assert``.``AreEqual``(``1.0``,` `result``,` `1E-14``)``;`\n    `}`\n `[TestMethod]`\n    `public` `void` `MultipleInputsShouldProduceAverageAsResult``(``)`\n    `{`\n        `string``[``]` `inputs` `=` `{` `\"1\"``,` `\"2\"``,` `\"3\"` `}``;`\n        `double` `result` `=` `AverageCalculator``.``ArithmeticMean``(``inputs``)``;`\n        `Assert``.``AreEqual``(``2.0``,` `result``,` `1E-14``)``;`\n    `}`\n}\n\n```", "```cs\ndouble result = AverageCalculator.ArithmeticMean(inputs);\n```", "```cs\nnamespace Averages;\n\npublic static class AverageCalculator\n{\n    public static double ArithmeticMean(string[] args)\n    {\n        return 1.0;\n    }\n}\n```", "```cs\ndotnet test\n```", "```cs\n  Failed MultipleInputsShouldProduceAverageAsResult [291 ms]\n  Error Message:\n   Assert.AreEqual failed. Expected a difference no greater than <1E-14>\n between expected value <2> and actual value <1>.\n  Stack Trace:\n     at Averages.Tests.WhenCalculatingAverages.\nMultipleInputsShouldProduceAverageAsResult() in\nC:\\book\\Averages\\Averages.Tests\\WhenCalculatingAverages.cs:line 21\n\nFailed!  - Failed:     1, Passed:     1, Skipped:     0, Total:     2,\nDuration: 364 ms - Averages.Tests.dll (net6.0)\n```", "```cs\nnamespace Averages\n{\n    public static class AverageCalculator\n    {\n        ...as before...\n    }\n}\n```", "```cs\nglobal using Microsoft.VisualStudio.TestTools.UnitTesting;\n```", "```cs\nusing System.IO;\nusing System.Windows.Shapes;\n`using` `IoPath` `=` `System``.``IO``.``Path``;`\n`using` `WpfPath` `=` `System``.``Windows``.``Shapes``.``Path``;`\n\n```", "```cs\nnamespace MyApp\n{\n    namespace Storage\n    {\n        ...\n    }\n}\n```", "```cs\nnamespace MyApp.Storage;\n```", "```cs\npublic static class AverageCalculator\n{\n    public static double ArithmeticMean(string[] args)\n    {\n        return 1.0;\n    }\n}\n```", "```cs\nreturn args.Select(numText => double.Parse(numText)).Average();\n```", "```cs\n./Averages/bin/Debug/net6.0/Averages 1 2 3 4 5\n```", "```cs\nusing Averages;\n\nConsole.WriteLine(AverageCalculator.ArithmeticMean(args));\n```", "```cs\n[TestClass]\npublic class WhenCalculatingAverages\n{\n```", "```cs\n[TestMethod]\npublic void SingleInputShouldProduceSameValueAsResult()\n...\n\n[TestMethod]\npublic void MultipleInputsShouldProduceAverageAsResult()\n...\n```"]