["```cs\nclass Socket\n{\n  // Synchronous\n  public int Send(byte[] buffer, int offset, int size, SocketFlags flags);\n\n  // APM\n  public IAsyncResult BeginSend(byte[] buffer, int offset, int size,\n      SocketFlags flags, AsyncCallback callback, object state);\n  public int EndSend(IAsyncResult result);\n\n  // Custom, very close to APM\n  public IAsyncResult BeginSend(byte[] buffer, int offset, int size,\n      SocketFlags flags, out SocketError error,\n      AsyncCallback callback, object state);\n  public int EndSend(IAsyncResult result, out SocketError error);\n\n  // Custom\n  public bool SendAsync(SocketAsyncEventArgs e);\n\n  // TAP (as an extension method)\n  public Task<int> SendAsync(ArraySegment<byte> buffer,\n      SocketFlags socketFlags);\n\n  // TAP (as an extension method) using more efficient types\n  public ValueTask<int> SendAsync(ReadOnlyMemory<byte> buffer,\n      SocketFlags socketFlags, CancellationToken cancellationToken = default);\n}\n```", "```cs\nclass ExampleHttpClient\n{\n  public Task<string> GetStringAsync(Uri requestUri);\n\n  // Synchronous equivalent, for comparison\n  public string GetString(Uri requestUri);\n}\n```", "```cs\nclass MyHttpClient\n{\n  public IAsyncResult BeginGetString(Uri requestUri,\n      AsyncCallback callback, object state);\n  public string EndGetString(IAsyncResult asyncResult);\n\n  // Synchronous equivalent, for comparison\n  public string GetString(Uri requestUri);\n}\n```", "```cs\nclass GetStringCompletedEventArgs : AsyncCompletedEventArgs\n{\n  public string Result { get; }\n}\n\nclass MyHttpClient\n{\n  public void GetStringAsync(Uri requestUri);\n  public event Action<object, GetStringCompletedEventArgs> GetStringCompleted;\n\n  // Synchronous equivalent, for comparison\n  public string GetString(Uri requestUri);\n}\n```", "```cs\nclass MyHttpClient\n{\n  public void GetString(Uri requestUri, Action<Exception, string> done);\n\n  // Synchronous equivalent, for comparison\n  public string GetString(Uri requestUri);\n}\n```", "```cs\nclass MyHttpClient\n{\n  public void GetString(Uri requestUri,\n      MyHttpClientAsynchronousOperation operation);\n\n  // Synchronous equivalent, for comparison\n  public string GetString(Uri requestUri);\n}\n```", "```cs\nclass MyHttpClient\n{\n  public ISynchronizeInvoke SynchronizingObject { get; set; }\n  public void StartListening();\n  public event Action<string> StringArrived;\n}\n```"]