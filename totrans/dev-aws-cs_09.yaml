- en: Appendix A. Benchmarking AWS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录 A. AWS 的基准测试
- en: One way to get a more profound knowledge of AWS is to benchmark the performance
    of different machines. Part of the value of AWS is the ability to use many various
    services and other abstractions to solve problems in the most efficient manner
    possible. You can view many code examples in this [example GitHub Repository on
    benchmarking](https://github.com/noahgift/benchmarking-aws). Notice that there
    are substantial differences in sysbench benchmarks from 1 core to a 36 core to
    a 96 core machine as shown in [Figure A-1](#Figure-1-8).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 深入了解 AWS 的一种方法是对不同机器的性能进行基准测试。 AWS 的价值之一是能够使用许多不同的服务和其他抽象化方法来以最有效的方式解决问题。 您可以在这个[基准测试的示例
    GitHub 仓库](https://github.com/noahgift/benchmarking-aws)中查看许多代码示例。 请注意，从 1 核心到
    36 核心再到 96 核心的 sysbench 基准测试显示了显著差异，如[图 A-1](#Figure-1-8)所示。
- en: '![doac ab01](assets/doac_ab01.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![doac ab01](assets/doac_ab01.png)'
- en: Figure A-1\. Benchmarking AWS instances
  id: totrans-3
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-1\. AWS 实例的基准测试
- en: As your organization determines the correct Amazon Linux 2 machine to run .NET
    Core on Linux, it would be a great idea to do some initial benchmarking. To run
    these benchmarks in a repeatable manner on Amazon Linux 2, you can refer to this
    [`Makefile`](https://oreil.ly/IF5rR). Notice how `sysbench` only needs two lines
    to install and run the `./benchmark.sh` script.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 当您的组织确定在 Amazon Linux 2 上运行 .NET Core 的正确机器时，最好进行一些初始基准测试。 要在 Amazon Linux 2
    上以可重复的方式运行这些基准测试，可以参考这个[`Makefile`](https://oreil.ly/IF5rR)。 请注意，`sysbench` 只需要两行来安装和运行
    `./benchmark.sh` 脚本。
- en: 'The actual benchmark script is as follows:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 实际的基准测试脚本如下：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The `makefile` command can be run as `make benchmark-sysbench-amazon`:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`makefile` 命令可以作为 `make benchmark-sysbench-amazon` 运行：'
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The benchmark script uses a “one-liner” to determine how many cores are available
    and then passes this into a CPU benchmark:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 基准测试脚本使用“单行命令”来确定可用的核心数，然后将其传递给 CPU 基准测试：
- en: '[PRE2]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: A free tool like [Cinebench](https://oreil.ly/ROql2) works to benchmark a Windows
    OS. It is always good to perform multiple measures, including an OS-level benchmark
    and application load test, on the actual environment in which an application gets
    deployed.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 像[Cinebench](https://oreil.ly/ROql2)这样的免费工具可用于对 Windows 操作系统进行基准测试。 在实际部署应用程序的环境中执行多次测量，包括操作系统级别的基准测试和应用程序负载测试，总是一个好主意。
